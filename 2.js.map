{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/rating/RatingWithRightSlot.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemTileRatingRow.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/AisleInformation.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemTileAisleInformation.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/Tooltip/Tooltip.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/MarkerBase/MarkerBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemPromoMarker.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemPromoMarkerList.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemCustomizeLabel/ItemCustomizeLabel.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ButtonPillBase/ButtonPillBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ButtonPill/ButtonPill.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/InputSubmitButton/InputSubmitButton.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/internal/hooks/useIsMounted.ts","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/SaveForLater/components/CreateNewListForm.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/SaveForLater/components/LoadingIcon.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/SaveForLater/components/SaveForLaterListsListItem.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/SaveForLater/components/SaveForLaterListsList.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/SaveForLater/components/SaveForLaterPopover.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/SaveForLater/SaveForLater.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemLabelBase/ItemLabelBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemTileLabel.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemTileRating.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/PriceAlertIcon.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/ItemTile/ItemTile.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/Collection/Collection.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/Collection/CollectionHeader.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/Collection/CollectionTitle.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/Collection/CollectionLink.tsx","webpack://UnataWidgets/./app/services/analytics/thunks.ts","webpack://UnataWidgets/./app/services/cart/selectors.ts","webpack://UnataWidgets/./app/services/cart/thunks.ts","webpack://UnataWidgets/./app/services/product/thunks.ts","webpack://UnataWidgets/./app/react/components/itemTileContainer/ItemTileContainer.tsx","webpack://UnataWidgets/./app/react/common/hooks/useCartItem.ts","webpack://UnataWidgets/./app/react/common/hooks/useSelectorWithProps.ts","webpack://UnataWidgets/./app/react/components/rating/styles.ts","webpack://UnataWidgets/./app/react/components/rating/Rating.tsx"],"names":["useStyles","createStyles","root","alignItems","display","whiteSpace","slot","marginLeft","spacing","s8","RatingWithRightSlot","children","ratingProps","styles","rootStyles","fontSize","iconSize","lineHeight","css","ItemTileRatingRow","ratingRow","flexGrow","justifyContent","margin","s4","Children","toArray","filter","Boolean","length","AisleInformation","theme","icon","backgroundColor","colors","systemGrayscale10","borderRadius","radius","r12","typography","bodySmall2","maxWidth","padding","text","overflow","textOverflow","getStyles","useTheme","size","color","ItemTileAisleInformation","Tooltip","props","MarkerBase","bodySmall1","borderColor","r4","borderStyle","borderWidth","boxSizing","iconStyles","ItemPromoMarker","isLoyalty","loyaltyIcon","tooltipText","content","disabled","tabIndex","flexWrap","markerDecoratorStyles","ItemPromoMarkerList","promotions","map","promo","ItemCustomizeLabel","systemGrayscale50","baseStyles","button","buttonWrapper","position","ButtonPillBase","forwardRef","ref","active","onClick","rest","buttonWrapperCSS","buttonCSS","combineStyles","aria-current","ButtonPill","combinedStyles","background","border","systemGrayscale70","height","minWidth","textDecoration","userSelect","bodyMedium1","outline","bottom","left","right","top","systemGrayscale20","blendColors","cursor","s12","InputSubmitButton","ariaButtonLabel","inputId","onChange","placeholderText","submitting","value","lighten","brandHighlightRegular","systemGrayscale00","pointerEvents","borderBottomRightRadius","borderTopRightRadius","flex","container","input","borderBottomLeftRadius","borderTopLeftRadius","handleInputChange","useCallback","event","target","type","id","placeholder","aria-invalid","aria-label","dotColor","fill","useIsMounted","isMounted","useRef","useEffect","current","form","s16","CreateNewListForm","buttonAriaLabel","inputLabel","inputPlaceholderText","onSubmit","inputValue","setInputValue","useState","setSubmitting","handleChange","newValue","handleSubmit","async","preventDefault","htmlFor","SVGIcon","internalSVGIcon","LoadingIcon","component","width","preserveAspectRatio","viewBox","xmlns","x","y","cx","cy","r","strokeWidth","stroke","strokeDasharray","attributeName","from","to","begin","dur","repeatCount","SaveForLaterListsListItem","lang","ariaAddedToList","ariaEditList","ariaLoading","editListActionLabel","list","onEdit","onSelect","item","paddingBottom","paddingLeft","paddingRight","paddingTop","itemAction","bodyMedium2","textAlign","itemEditAction","itemIcon","brandHighlightLight","s24","itemName","s32","loading","setLoading","handleEditClick","userListId","handleItemClick","role","aria-checked","selected","undefined","className","data-test","name","interpolate","listName","SaveForLaterListsList","lists","listStyle","maxHeight","overflowY","SaveForLaterPopover","isMobile","onCreate","popoverState","buttonRow","closeButton","closeButtonMobile","popover","boxShadow","zIndex","layers","l1","separator","borderTop","title","Popover","ariaPopoverLabel","ariaCloseButton","hide","aria-hidden","popoverTitle","ariaCreateList","createListInputLabel","createListInputPlaceholderText","closeModalActionLabel","tooltipArrowPlacementStylesMap","transform","tooltipArrowShadowStylesMap","SaveForLater","usePopoverState","placement","tooltip","useTooltipState","gutter","split","tooltipPlacement","tooltipArrowPlacementStyles","tooltipArrowShadowStyles","l2","tooltipArrow","tooltipReference","TooltipReference","PopoverDisclosure","ariaPopoverDisclosure","productIsInAnyList","visible","TooltipArrow","ItemLabelBase","borderLeft","transformOrigin","borderRight","marginBottom","marginTop","ItemTileLabel","ItemTileRating","rating","count","ratingContainer","alignSelf","ratingCountLabel","fontWeight","reviews","PriceAlertIcon","productId","subscribed","onTogglePriceAlert","removePriceAlert","addPriceAlert","data-active","data-testid","togglePriceAlert","aria-pressed","AddItem","AttributeList","Bottom","Item","ItemImage","ItemPrice","ItemPriceSet","ItemRegularPrice","ItemName","ItemWeight","Overlay","Top","ItemB","ItemTile","addItemProps","priceAlertProps","aisle","imageURL","currentPrice","hasDiscount","isCustomizable","discountedPriceIsConfirmed","regularPrice","tags","label","labelColor","onImageClick","onNameClick","saveForLaterProps","attributes","ItemButton","src","alt","strikeThrough","or","customizable","Collection","fullWidth","CollectionHeader","CollectionTitle","titleText","subtitleLarge","CollectionLink","titleAction","brandPrimaryRegular","titleActionIcon","logEvent","createAsyncThunk","analytics","log","data","eventPayload","logSegmentEvent","segmentArgs","getState","state","config","configSelector","absUrl","window","location","href","page","getHtml5Url","unataAppVersion","version","unataMobileAppVersion","getAppVersion","newArgs","segmentData","segmentName","addCartDisclaimerSelector","createSelector","shoppingCartItemSelector","maxQuantitySelector","langSelector","cartItem","max","quantity","langService","limitPerOrder","limit","addItem","addQty","product","cartService","selectors","getItem","uoms","addToCartQty","ordering_parameters","min","allowAddToCartSelector","eventEmitter","emit","EVENT_TYPES","ADD_ITEM_TO_CART","updateItemQuantity","REMOVE_ITEM_FROM_CART","updateQty","maxQuantity","UPDATE_ITEM_QUANTITY","onItemIncrement","dispatch","currentQty","increment","onItemDecrement","setProduct","createPriceAlertById","then","priceAlert","angularRootEl","document","getElementById","angular","element","injector","get","$emit","price_alert","deletePriceAlert","removePriceAlertById","source","isDefined","add_price_alert","price_alert_source","product_details","remove_price_alert","float","clear","responsive","up","ItemTileContainer","initialProductState","isInteracting","setInteracting","hasLoyaltyCard","setHasLoyaltyCard","createClickHandler","useAnalytics","userReviews","useConfig","useThunkDispatch","setItem","currentStore","getCurrentStore","subscribe","currentItem","deepEquals","useCartItem","useSelector","itemTileLangSelector","openPdpWithAnalytics","category","LINK_TO_PRODUCT_DETAIL","isExternalRoutesDisabled","promoted","$on","_event","unsubscribe","authService","store","getLoyaltyCards","selectorProps","useMemo","featured","tagLocation","useSelectorWithProps","makeUseSelectorWithProps","labelType","labelTypeSelector","LabelTypes","Purchased","userLists","userListsSelector","saveForLaterLang","saveForLaterLangSelector","saveForLaterLists","saveForLaterListsSelector","quantityInCart","quantityInCartSelector","measurement","orderByUnitSelector","incrementQuantity","onItemIncrementThunk","decrementType","decrementCartQuantityType","onDecrement","onItemDecrementThunk","isCustomizableSelector","accessibleLabel","allowDecrement","allowDecrementCartQuantitySelector","allowIncrement","ariaDecrement","decrementQuantity","removeItem","ariaIncrement","ariaValue","buttonValueText","disclaimer","onIncrement","newInteracting","valueText","togglePriceAlertThunk","subscribedForPriceAlertSelector","isMobileSelector","action","createUserList","items","newListName","listId","find","userList","LINK_TO_USERLIST_DETAIL","findItemInList","list_name","product_id","toggleItemInList","findItemsInSomeList","numberOfRatingsSelector","ratingSelector","promotionsSelector","forEach","index","FontIcon","itemTileProps","aisleSelector","currentPriceStringSelector","discountedPriceIsConfirmedSelector","hasPromoPriceSelector","itemTileImageSelector","labelSelector","titleSelector","showPriceAlertSelector","enabled","regularPriceStringSelector","showSaveForLaterSelector","sizeWithPricePerUnitSelector","productAttributeTagsSelector","selector","styleVariables","createStyleVariables","filled","FILLED_STYLES","variables","icons","unfilled","systemGrayscale30","svgAtributes","focusable","Rating","langAria","useLangAria","roundedRating","toFixed","currentRating","filledWidth","maxRating","Array","keys","i","d"],"mappings":"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","file":"2.js","sourcesContent":["import type { ReactNode } from 'react'\nimport Rating, { RatingProps } from '@app/react/components/rating/Rating'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { spacing } from '@instacart/ids-core'\n\nconst useStyles = createStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    whiteSpace: 'nowrap',\n  },\n  slot: {\n    marginLeft: spacing.s8,\n  },\n})\n\ninterface Props extends RatingProps {\n  children?: ReactNode\n}\n\nconst RatingWithRightSlot = ({ children, ...ratingProps }: Props) => {\n  const styles = useStyles()\n  const rootStyles = {\n    ...styles.root,\n    fontSize: ratingProps.iconSize,\n    lineHeight: `${ratingProps.iconSize}px`,\n  }\n  return (\n    <div css={rootStyles}>\n      <Rating {...ratingProps} />\n      <div css={styles.slot}>{children}</div>\n    </div>\n  )\n}\n\nexport default RatingWithRightSlot\n","import { spacing } from '@app/react/styles'\nimport { Children } from 'react'\n\nconst getStyles = () =>\n  ({\n    ratingRow: {\n      alignItems: 'flex-end',\n      display: 'flex',\n      flexGrow: 1,\n      justifyContent: 'flex-end',\n      margin: `${spacing.s4}px 0`,\n    },\n  } as const)\n\nexport const ItemTileRatingRow: React.FC = ({ children }) => {\n  const styles = getStyles()\n\n  const nonEmptyChildren = Children.toArray(children).filter(Boolean)\n\n  if (nonEmptyChildren.length === 0) return null\n\n  return <div css={styles.ratingRow}>{children}</div>\n}\n","import { MarkerIcon, spacing, Theme, useTheme } from '@instacart/ids-core'\nimport { ReactNode } from 'react'\n\nconst getStyles = ({ theme }: { theme: Theme }) =>\n  ({\n    icon: {\n      margin: `0 2px -3px -2px`,\n    },\n    root: {\n      backgroundColor: theme.colors.systemGrayscale10,\n      borderRadius: theme.radius.r12,\n      display: 'inline-flex',\n      fontSize: theme.typography.bodySmall2.fontSize,\n      lineHeight: theme.typography.bodySmall2.lineHeight,\n      maxWidth: '100%',\n      padding: `${spacing.s4 / 2}px ${spacing.s8}px`,\n    },\n    text: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n    },\n  } as const)\n\nexport interface AisleInformationProps {\n  children: ReactNode\n}\n\nexport const AisleInformation = ({ children }: AisleInformationProps) => {\n  const theme = useTheme()\n  const styles = getStyles({ theme })\n\n  return (\n    <div css={styles.root}>\n      <span css={styles.icon}>\n        <MarkerIcon size={16} color={'systemGrayscale70'} />\n      </span>\n      <span css={styles.text}>{children}</span>\n    </div>\n  )\n}\n","import {\n  AisleInformation,\n  AisleInformationProps,\n} from '@app/react/ids/enterprise/molecules/ItemB/AisleInformation'\nimport { spacing } from '@app/react/styles'\n\nconst getStyles = () =>\n  ({\n    root: {\n      margin: `${spacing.s4}px 0`,\n    },\n  } as const)\n\nexport const ItemTileAisleInformation = ({ children }: AisleInformationProps) => {\n  const styles = getStyles()\n\n  return (\n    <div css={styles.root}>\n      <AisleInformation>{children}</AisleInformation>\n    </div>\n  )\n}\n","import { Tooltip as CocktailTooltip } from '@instacart/cocktail'\n\n// IDS does not have own Tooltip component and it is planned to move eventually this component to IDS.\n// So far, the component just re-distributes Tooltip from Cocktail and repeats its interface.\n// TODO: Remove dependency to Cocktail before pushing the component to IDS (copy/paste Cocktail implementation + adapt to the new codebase)\nexport const Tooltip = ({ children, ...props }: React.ComponentProps<typeof CocktailTooltip>) => {\n  return <CocktailTooltip {...props}>{children}</CocktailTooltip>\n}\n","import { Color, spacing, Theme, useTheme } from '@instacart/ids-core'\nimport { ReactNode } from 'react'\n\nconst useStyles = ({ theme, color }: { theme: Theme; color: Color }) =>\n  ({\n    ...theme.typography.bodySmall1,\n    borderColor: theme.colors[color],\n    borderRadius: theme.radius.r4,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    boxSizing: 'border-box',\n    color: theme.colors[color],\n    display: 'inline-flex',\n    padding: `${spacing.s4}px ${spacing.s8}px`,\n  } as const)\n\nexport interface ItemMarkerBaseProps {\n  children: ReactNode\n  color?: Color\n}\n\nexport const MarkerBase = ({\n  children,\n  color = 'brandPromotionalRegular',\n}: ItemMarkerBaseProps) => {\n  const theme = useTheme()\n  const styles = useStyles({ color, theme })\n  return <div css={styles}>{children}</div>\n}\n","import { Tooltip } from '../../atoms/Tooltip'\nimport { MarkerBase } from '../../atoms/MarkerBase'\n\nconst iconStyles = {\n  margin: '0 0.25em -5px 0',\n}\n\nexport interface PromoMarkerProps {\n  text: string\n  tooltipText?: string\n  isLoyalty?: boolean\n  loyaltyIcon?: JSX.Element\n}\n\nexport const ItemPromoMarker = ({\n  isLoyalty = false,\n  loyaltyIcon,\n  text,\n  tooltipText,\n}: PromoMarkerProps) => {\n  const color = isLoyalty ? 'brandPrimaryRegular' : 'brandPromotionalRegular'\n\n  return (\n    <Tooltip content={tooltipText} disabled={!tooltipText}>\n      {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n      <span tabIndex={tooltipText ? 0 : -1}>\n        <MarkerBase color={color}>\n          {isLoyalty && <span css={iconStyles}>{loyaltyIcon}</span>}\n          {text}\n        </MarkerBase>\n      </span>\n    </Tooltip>\n  )\n}\n","import {\n  ItemPromoMarker,\n  PromoMarkerProps,\n} from '@app/react/ids/enterprise/molecules/ItemB/ItemPromoMarker'\nimport { spacing } from '@instacart/ids-core'\n\ninterface ItemPromoMarkerListProps {\n  promotions?: PromoMarkerProps[]\n}\n\nconst rootStyles = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  margin: `-${spacing.s4}px -${spacing.s4}px 0 0`,\n} as const\nconst markerDecoratorStyles = {\n  margin: `${spacing.s4}px ${spacing.s4}px 0 0`,\n} as const\n\nexport const ItemPromoMarkerList = ({ promotions }: ItemPromoMarkerListProps) => {\n  if (!promotions?.length) return null\n\n  return (\n    <ul css={rootStyles}>\n      {promotions.map(promo => (\n        <li css={markerDecoratorStyles} key={promo.text}>\n          <ItemPromoMarker {...promo} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { Theme, useTheme } from '@instacart/ids-core'\nimport type { FunctionComponent } from 'react'\n\nconst getStyles = ({ theme }: { theme: Theme }) => ({\n  ...theme.typography.bodySmall2,\n  color: theme.colors.systemGrayscale50,\n})\n\nexport const ItemCustomizeLabel: FunctionComponent = ({ children }) => {\n  const theme = useTheme()\n  const styles = getStyles({ theme })\n\n  return <div css={styles}>{children}</div>\n}\n","import { forwardRef } from 'react'\nimport { Base, combineStyles } from '@instacart/ids-core'\n\nconst baseStyles = {\n  button: {},\n  buttonWrapper: {\n    position: 'relative',\n  },\n} as const\n\nexport interface ButtonPillBaseProps extends Base<typeof baseStyles> {\n  onClick: () => void\n  active: boolean\n  children: JSX.Element | string\n}\n\nexport const ButtonPillBase = forwardRef<HTMLSpanElement, ButtonPillBaseProps>(function ButtonPill(\n  { children, active, onClick, styles, ...rest },\n  ref\n) {\n  const { buttonWrapper: buttonWrapperCSS, button: buttonCSS } = combineStyles(baseStyles, styles)\n\n  return (\n    <span css={buttonWrapperCSS} ref={ref}>\n      <button onClick={onClick} css={buttonCSS} aria-current={active} {...rest}>\n        {children}\n      </button>\n    </span>\n  )\n})\n","import { ComponentPropsWithoutRef, forwardRef } from 'react'\nimport { CSSObject } from '@emotion/core'\nimport { Theme, useTheme, blendColors, spacing, combineStyles } from '@instacart/ids-core'\nimport { ButtonPillBase } from '../ButtonPillBase'\n\nconst BORDER_WIDTH = 2\n\nconst getStyles = (theme: Theme, active: boolean) =>\n  ({\n    button: {\n      background: theme.colors.systemGrayscale10,\n      border: `${BORDER_WIDTH}px solid transparent`,\n      borderRadius: 14,\n      boxSizing: 'border-box',\n      color: theme.colors.systemGrayscale70,\n      height: 28,\n      minWidth: 58,\n      textDecoration: 'none',\n      userSelect: 'none',\n      ...theme.typography.bodyMedium1,\n      '&.focus-visible': {\n        outline: 'none',\n      },\n      '&.focus-visible::after': {\n        border: `${BORDER_WIDTH}px solid ${theme.colors.systemGrayscale70}`,\n        borderRadius: 119,\n        bottom: -9,\n        content: '\"\"',\n        display: 'block',\n        left: 0,\n        position: 'absolute',\n        right: 0,\n        top: -7,\n      },\n      '&:active': {\n        background: theme.colors.systemGrayscale20,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n      '&:hover': {\n        background: blendColors(theme.colors.systemGrayscale10, theme.colors.systemGrayscale20, 51),\n      },\n      cursor: 'pointer',\n      margin: spacing.s4,\n      padding: `0px ${spacing.s12}px`,\n      whiteSpace: 'nowrap',\n      ...(active && {\n        background: theme.colors.systemGrayscale20,\n        border: `${BORDER_WIDTH}px solid ${theme.colors.systemGrayscale70}`,\n      }),\n    },\n  } as const)\n\nexport interface ButtonPillProps extends ComponentPropsWithoutRef<'button'> {\n  onClick: () => void\n  active: boolean\n  children: JSX.Element | string\n  styles?: Record<string, CSSObject>\n}\n\nexport const ButtonPill = forwardRef<HTMLSpanElement, ButtonPillProps>(function ButtonPill(\n  { children, active, onClick, styles, ...rest },\n  ref\n) {\n  const theme = useTheme()\n  const combinedStyles = combineStyles(getStyles(theme, active), styles)\n\n  return (\n    <ButtonPillBase {...rest} styles={combinedStyles} onClick={onClick} active={active} ref={ref}>\n      {children}\n    </ButtonPillBase>\n  )\n})\n","import { useCallback } from 'react'\nimport { lighten } from 'polished'\nimport { AddIcon, spacing, useTheme } from '@instacart/ids-core'\nimport type { Theme } from '@instacart/ids-core'\nimport { LoadingDots } from '@instacart/cocktail'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    button: {\n      '&[disabled]': {\n        backgroundColor: lighten(0.2, theme.colors.brandHighlightRegular),\n        color: `${theme.colors.systemGrayscale00}CC`, // 80% opacity\n        pointerEvents: 'none',\n      },\n      alignItems: 'center',\n      backgroundColor: theme.colors.brandHighlightRegular,\n      border: 0,\n      borderBottomRightRadius: theme.radius.r4,\n      borderTopRightRadius: theme.radius.r4,\n      color: theme.colors.systemGrayscale00,\n      display: 'inline-flex',\n      flex: '0 0 44px',\n      justifyContent: 'center',\n      margin: 0,\n    },\n    container: {\n      border: `1px solid ${theme.colors.systemGrayscale50}`,\n      borderRadius: theme.radius.r4 + 1,\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    input: {\n      border: 0,\n      borderBottomLeftRadius: theme.radius.r4,\n      borderTopLeftRadius: theme.radius.r4,\n      flex: '1 1 auto',\n      fontSize: '13px',\n      margin: 0,\n      minWidth: 0, // Required for correct flexbox width\n      padding: `${spacing.s12}px ${spacing.s8}px ${spacing.s12}px ${spacing.s12}px`,\n    },\n  } as const)\n\ninterface Props {\n  /**\n   * ARIA label for button\n   */\n  ariaButtonLabel: string\n  /**\n   * ID attribute for input field\n   */\n  inputId: string\n  /**\n   * Called when input changes\n   */\n  onChange: (value: string) => void\n  /**\n   * Placehodler text for input field\n   */\n  placeholderText: string\n  /**\n   * Disable button and input field and show loading indicator\n   */\n  submitting: boolean\n  /**\n   * Value of input field (controlled input)\n   */\n  value: string\n}\n\n/**\n * Inline form input with submit button appended\n */\nexport const InputSubmitButton = ({\n  ariaButtonLabel,\n  inputId,\n  onChange,\n  placeholderText,\n  submitting = false,\n  value,\n}: Props) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  const handleInputChange = useCallback(\n    event => {\n      onChange(event.target.value)\n    },\n    [onChange]\n  )\n\n  return (\n    <div css={styles.container}>\n      <input\n        type=\"text\"\n        id={inputId}\n        placeholder={placeholderText}\n        disabled={submitting}\n        aria-invalid=\"false\"\n        css={styles.input}\n        onChange={handleInputChange}\n        value={value}\n      />\n      <button\n        aria-label={ariaButtonLabel}\n        css={styles.button}\n        disabled={value === '' || submitting}\n        type=\"submit\"\n      >\n        {submitting ? (\n          <LoadingDots dotColor={theme.colors.systemGrayscale00} />\n        ) : (\n          <AddIcon fill={theme.colors.systemGrayscale00} />\n        )}\n      </button>\n    </div>\n  )\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\n/**\n * Avoid changing state after a component is unmounted.\n *\n * Source: https://usehooks-typescript.com/react-hook/use-is-mounted\n * Note: This problem will be going way in React 18.\n */\nexport const useIsMounted = () => {\n  const isMounted = useRef(false)\n\n  useEffect(() => {\n    isMounted.current = true\n\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return useCallback(() => isMounted.current, [])\n}\n","import { useCallback, useState } from 'react'\nimport { spacing } from '@instacart/ids-core'\nimport { InputSubmitButton } from '../../../molecules/InputSubmitButton/InputSubmitButton'\nimport { useIsMounted } from '../../../internal/hooks/useIsMounted'\n\nconst styles = {\n  form: {\n    padding: `0 ${spacing.s16}px ${spacing.s16}px`,\n  },\n} as const\n\ninterface Props {\n  buttonAriaLabel: string\n  inputLabel: string\n  inputPlaceholderText: string\n  onSubmit: (newListName: string) => Promise<void>\n}\n\n/**\n *  Single input form for creating new Save-for-Later lists\n */\nexport const CreateNewListForm = ({\n  buttonAriaLabel,\n  inputLabel,\n  inputPlaceholderText,\n  onSubmit,\n}: Props) => {\n  const isMounted = useIsMounted()\n  const [inputValue, setInputValue] = useState('')\n  const [submitting, setSubmitting] = useState(false)\n\n  const handleChange = useCallback(newValue => {\n    setInputValue(newValue)\n  }, [])\n\n  const handleSubmit = useCallback(\n    async event => {\n      event.preventDefault()\n      setSubmitting(true)\n      await onSubmit(inputValue)\n      if (isMounted()) {\n        setInputValue('')\n        setSubmitting(false)\n      }\n    },\n    [inputValue, isMounted, onSubmit]\n  )\n\n  return (\n    <form css={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"create-list-name-input\">{inputLabel}</label>\n      <InputSubmitButton\n        ariaButtonLabel={buttonAriaLabel}\n        inputId=\"create-list-name-input\"\n        onChange={handleChange}\n        placeholderText={inputPlaceholderText}\n        submitting={submitting}\n        value={inputValue}\n      />\n    </form>\n  )\n}\n","// This file was automatically generated and should not be edited;\nimport { internalSVGIcon } from '@instacart/ids-core'\nimport { ComponentProps } from 'react'\n\nconst { SVGIcon } = internalSVGIcon\n\nexport const LoadingIcon = (props: Omit<ComponentProps<typeof SVGIcon>, 'component'>) => (\n  <SVGIcon\n    component={\n      <svg\n        width=\"14px\"\n        height=\"14px\"\n        preserveAspectRatio=\"xMidYMid\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"none\" />\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"40\"\n          fill=\"none\"\n          strokeWidth=\"20\"\n          stroke=\"#000000\"\n          strokeDasharray=\"14px\"\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"0\"\n            to=\"110\"\n            begin=\"0\"\n            dur=\"0.7s\"\n            repeatCount=\"indefinite\"\n            fill=\"freeze\"\n          />\n        </circle>\n      </svg>\n    }\n    {...props}\n  />\n)\n","import { useCallback, useState } from 'react'\nimport { spacing, Theme, useTheme } from '@instacart/ids-core'\nimport { LoadingIcon } from './LoadingIcon'\nimport { SaveForLaterLang, SaveForLaterList } from '../types'\nimport { useIsMounted } from '../../../internal/hooks/useIsMounted'\nimport interpolate from '../../../internal/utils/interpolate'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    item: {\n      alignItems: 'center',\n      display: 'flex',\n      paddingBottom: spacing.s8,\n      paddingLeft: spacing.s12,\n      paddingRight: spacing.s16,\n      paddingTop: spacing.s8,\n    },\n    itemAction: {\n      ...theme.typography.bodyMedium2,\n      alignItems: 'center',\n      display: 'flex',\n      flex: '1 1 auto',\n      textAlign: 'left',\n    },\n    itemEditAction: {\n      ...theme.typography.bodySmall2,\n      flex: '0 1 auto',\n      textDecoration: 'underline',\n    },\n    itemIcon: {\n      alignItems: 'center',\n      color: theme.colors.brandHighlightLight,\n      display: 'flex',\n      flex: `0 0 ${spacing.s24}px`,\n      justifyContent: 'center',\n    },\n    itemName: {\n      flex: '1 1 auto',\n      padding: `0 ${spacing.s8}px`,\n\n      // eslint-disable-next-line sort-keys-fix/sort-keys-fix\n      '&:first-of-type': {\n        paddingLeft: spacing.s32, // 24 (for itemIcon) + 8\n      },\n    },\n  } as const)\n\ninterface Props {\n  /**\n   * Array of localized text strings\n   */\n  lang: Pick<\n    SaveForLaterLang,\n    'ariaAddedToList' | 'ariaEditList' | 'ariaLoading' | 'editListActionLabel'\n  >\n  /**\n   * A save-for-later list (user list)\n   */\n  list: SaveForLaterList\n  /**\n   * Handler for list edit action\n   */\n  onEdit: (listId: SaveForLaterList['id']) => void\n  /**\n   * Handler for list selection action\n   */\n  onSelect: (listId: SaveForLaterList['id']) => Promise<void>\n}\n\n/**\n * Renders a single Savefor-Later list item with edit and select/unselect actions\n */\nexport const SaveForLaterListsListItem = ({\n  lang: { ariaAddedToList, ariaEditList, ariaLoading, editListActionLabel },\n  list,\n  onEdit,\n  onSelect,\n}: Props) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n  const isMounted = useIsMounted()\n  const [loading, setLoading] = useState(false)\n\n  const handleEditClick = useCallback((userListId: string) => onEdit(userListId), [onEdit])\n  const handleItemClick = useCallback(\n    async (userListId: string) => {\n      setLoading(true)\n      await onSelect(userListId)\n      if (isMounted()) {\n        setLoading(false)\n      }\n    },\n    [isMounted, onSelect]\n  )\n\n  return (\n    <li css={styles.item}>\n      <button\n        css={styles.itemAction}\n        onClick={() => handleItemClick(list.id)}\n        role=\"checkbox\"\n        aria-checked={list.selected}\n      >\n        {(loading || list.selected) && (\n          <span\n            aria-label={loading ? ariaLoading : list.selected ? ariaAddedToList : undefined}\n            css={styles.itemIcon}\n            role=\"img\"\n          >\n            {loading && <LoadingIcon />}\n            {!loading && list.selected && (\n              <span className=\"icon-checkmark\" data-test=\"icon-checkmark\" />\n            )}\n          </span>\n        )}\n        <span css={styles.itemName}>{list.name}</span>\n      </button>\n\n      <button\n        css={styles.itemEditAction}\n        onClick={() => handleEditClick(list.id)}\n        aria-label={interpolate(ariaEditList, { listName: list.name })}\n      >\n        {editListActionLabel}\n      </button>\n    </li>\n  )\n}\n","import { SaveForLaterListsListItem } from './SaveForLaterListsListItem'\nimport { SaveForLaterLang, SaveForLaterList } from '../types'\n\nconst getStyles = () =>\n  ({\n    list: {\n      listStyle: 'none',\n      margin: 0,\n      maxHeight: '200px',\n      overflowY: 'auto',\n      padding: 0,\n    },\n  } as const)\n\ninterface Props {\n  /**\n   * Array of localized text strings\n   */\n  lang: Pick<\n    SaveForLaterLang,\n    'ariaAddedToList' | 'ariaEditList' | 'ariaLoading' | 'editListActionLabel'\n  >\n  /**\n   * Array of save-for-later lists\n   */\n  lists: SaveForLaterList[]\n  /**\n   * Handler for list edit action\n   */\n  onEdit: (listId: SaveForLaterList['id']) => void\n  /**\n   * Handler for list selection action\n   */\n  onSelect: (listId: SaveForLaterList['id']) => Promise<void>\n}\n\n/**\n * Renders an actionable list of Save-for-Later list items\n */\nexport const SaveForLaterListsList = ({ lang, lists, onEdit, onSelect }: Props) => {\n  const styles = getStyles()\n\n  return (\n    <ul css={styles.list}>\n      {lists.map(list => (\n        <SaveForLaterListsListItem\n          key={list.id}\n          lang={lang}\n          list={list}\n          onEdit={onEdit}\n          onSelect={onSelect}\n        />\n      ))}\n    </ul>\n  )\n}\n","import { Popover, PopoverStateReturn } from 'reakit/Popover'\nimport { CloseIcon, layers, spacing, useTheme } from '@instacart/ids-core'\nimport type { Theme } from '@instacart/ids-core'\nimport { ButtonPill } from '../../../molecules/ButtonPill'\nimport { CreateNewListForm } from './CreateNewListForm'\nimport { SaveForLaterLang, SaveForLaterList } from '../types'\nimport { SaveForLaterListsList } from './SaveForLaterListsList'\n\ninterface Props {\n  /**\n   * Is the user on a mobile device?\n   */\n  isMobile: boolean\n  /**\n   * Array of localized text strings\n   */\n  lang: SaveForLaterLang\n  /**\n   * Array of save-for-later lists\n   */\n  lists: SaveForLaterList[]\n  /**\n   * Handler for list create action\n   */\n  onCreate: (newListName: string) => Promise<void>\n  /**\n   * Handler for list edit action\n   */\n  onEdit: (listId: SaveForLaterList['id']) => void\n  /**\n   * Handler for list selection action\n   */\n  onSelect: (listId: SaveForLaterList['id']) => Promise<void>\n  /**\n   * Reakit popover state\n   */\n  popoverState: PopoverStateReturn\n}\n\nconst getStyles = (theme: Theme) =>\n  ({\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'center',\n      paddingBottom: spacing.s16,\n    },\n    closeButton: {\n      backgroundColor: theme.colors.systemGrayscale00,\n      borderColor: theme.colors.brandHighlightLight,\n      color: theme.colors.brandHighlightLight,\n\n      // eslint-disable-next-line sort-keys-fix/sort-keys-fix\n      '&:hover': {\n        backgroundColor: theme.colors.brandHighlightLight,\n        color: theme.colors.systemGrayscale00,\n      },\n    },\n    closeButtonMobile: {\n      position: 'absolute',\n      right: spacing.s4,\n      top: spacing.s4,\n    },\n    form: {\n      padding: `0 ${spacing.s16}px ${spacing.s16}px`,\n    },\n    popover: {\n      background: theme.colors.systemGrayscale00,\n      borderRadius: theme.radius.r4,\n      boxShadow: '0 1px 10px rgb(0 0 0 / 16%), 0 1px 10px rgb(0 0 0 / 50%)',\n      right: '0 !important',\n      width: '250px',\n      zIndex: layers.l1,\n    },\n    separator: {\n      border: 'none',\n      borderTop: `1px solid ${theme.colors.systemGrayscale20}`,\n      margin: `${spacing.s4}px ${spacing.s16}px`,\n    },\n    title: {\n      ...theme.typography.bodyMedium1,\n      padding: `${spacing.s8}px ${spacing.s16}px`,\n      textAlign: 'center',\n    },\n  } as const)\n\n/**\n * Renders content of \"Save for later\" popover\n */\nexport const SaveForLaterPopover = ({\n  isMobile,\n  lang,\n  lists,\n  onCreate,\n  onEdit,\n  onSelect,\n  popoverState,\n}: Props) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  return (\n    <Popover {...popoverState} aria-label={lang.ariaPopoverLabel} css={styles.popover} tabIndex={0}>\n      {isMobile && (\n        <button\n          aria-label={lang.ariaCloseButton}\n          css={styles.closeButtonMobile}\n          data-test=\"mobile-close-button\"\n          onClick={popoverState.hide}\n        >\n          <CloseIcon aria-hidden=\"true\" />\n        </button>\n      )}\n\n      <div css={styles.title}>{lang.popoverTitle}</div>\n\n      <SaveForLaterListsList lang={lang} lists={lists} onEdit={onEdit} onSelect={onSelect} />\n\n      <hr css={styles.separator} />\n\n      <CreateNewListForm\n        buttonAriaLabel={lang.ariaCreateList}\n        inputLabel={lang.createListInputLabel}\n        inputPlaceholderText={lang.createListInputPlaceholderText}\n        onSubmit={onCreate}\n      />\n\n      {!isMobile && (\n        <div css={styles.buttonRow} data-test=\"close-button-row\">\n          <ButtonPill\n            active={false}\n            aria-label={lang.ariaCloseButton}\n            styles={{ button: styles.closeButton }}\n            onClick={popoverState.hide}\n          >\n            {lang.closeModalActionLabel}\n          </ButtonPill>\n        </div>\n      )}\n    </Popover>\n  )\n}\n","/* eslint-disable react/jsx-no-literals */\nimport { PopoverDisclosure, usePopoverState } from 'reakit/Popover'\nimport { Tooltip, TooltipArrow, TooltipReference, useTooltipState } from 'reakit/Tooltip'\nimport {\n  FavoriteSelectedIcon,\n  FavoriteUnselectedIcon,\n  layers,\n  spacing,\n  useTheme,\n} from '@instacart/ids-core'\nimport type { Theme } from '@instacart/ids-core'\nimport { CSSObject } from '@emotion/core'\nimport { SaveForLaterPopover } from './components/SaveForLaterPopover'\nimport { SaveForLaterLang, SaveForLaterList } from './types'\n\nexport interface SaveForLaterProps {\n  /**\n   * Should component render as disabled?\n   */\n  disabled: boolean\n  /**\n   * Is user on a mobile device?\n   */\n  isMobile: boolean\n  /**\n   * Array of localized text strings\n   */\n  lang: SaveForLaterLang\n  /**\n   * Array of save-for-later lists\n   */\n  lists: SaveForLaterList[]\n  /**\n   * Handler for list create action\n   */\n  onCreate: (newListName: string) => Promise<void>\n  /**\n   * Handler for list edit action\n   */\n  onEdit: (listId: SaveForLaterList['id']) => void\n  /**\n   * Handler for list selection action\n   */\n  onSelect: (listId: SaveForLaterList['id']) => Promise<void>\n  /**\n   * Is the product already in at least one user list?\n   */\n  productIsInAnyList: boolean\n}\n\nconst tooltipArrowPlacementStylesMap: Record<string, CSSObject> = {\n  bottom: {\n    bottom: '-1px',\n    left: '2px',\n    transform: 'rotateZ(180deg)',\n  },\n  left: {\n    left: '-1px',\n    top: '2px',\n    transform: 'rotateZ(90deg)',\n  },\n  right: {\n    right: '-1px',\n    top: '2px',\n    transform: 'rotateZ(-90deg)',\n  },\n  top: {\n    left: '2px',\n    top: '-1px',\n    transform: 'rotateZ(360deg)',\n  },\n} as const\n\nconst tooltipArrowShadowStylesMap: Record<string, CSSObject> = {\n  bottom: { filter: `drop-shadow(0 -3px 4px rgb(0 0 0 / 15%))` },\n  left: { filter: `drop-shadow(-3px 0 4px rgb(0 0 0 / 15%))` },\n  right: { filter: `drop-shadow(3px 0 4px rgb(0 0 0 / 15%))` },\n  top: { filter: `drop-shadow(0 3px 4px rgb(0 0 0 / 15%))` },\n} as const\n\nconst getStyles = (theme: Theme, tooltipPlacement: string) => {\n  const tooltipArrowPlacementStyles = tooltipArrowPlacementStylesMap[tooltipPlacement]\n  const tooltipArrowShadowStyles = tooltipArrowShadowStylesMap[tooltipPlacement]\n\n  return {\n    tooltip: {\n      ...theme.typography.bodySmall2,\n      background: theme.colors.systemGrayscale00,\n      border: `1px solid ${theme.colors.systemGrayscale20}`,\n      borderRadius: theme.radius.r4,\n      boxShadow: '0 0 4px rgb(0 0 0 / 15%)',\n      maxWidth: '100px',\n      padding: `${spacing.s4}px ${spacing.s8}px`,\n      zIndex: layers.l2,\n    },\n    tooltipArrow: {\n      fill: theme.colors.systemGrayscale00,\n      stroke: theme.colors.systemGrayscale20,\n      ...tooltipArrowShadowStyles,\n\n      '&::after': {\n        borderColor: `${theme.colors.systemGrayscale00} transparent transparent transparent`,\n        borderStyle: 'solid',\n        borderWidth: '6px 6px 0 6px',\n        content: '\"\"',\n        display: 'block',\n        height: 0,\n        left: '2px',\n        position: 'absolute',\n        width: 0,\n        ...tooltipArrowPlacementStyles,\n      },\n    },\n    tooltipReference: {\n      display: 'inline-block',\n    },\n  } as const\n}\n\n/**\n * Renders popover (and trigger) for adding item to a SaveForLater list\n */\nexport const SaveForLater = (props: SaveForLaterProps) => {\n  const theme = useTheme()\n  const popover = usePopoverState({ placement: 'bottom-end' })\n  const tooltip = useTooltipState({ gutter: 4 })\n  const [placement] = tooltip.placement.split('-')\n  const styles = getStyles(theme, placement)\n\n  return (\n    <>\n      <TooltipReference {...tooltip} css={styles.tooltipReference}>\n        <PopoverDisclosure\n          {...popover}\n          aria-label={props.lang.ariaPopoverDisclosure}\n          disabled={props.disabled}\n        >\n          {props.productIsInAnyList ? (\n            <FavoriteSelectedIcon color=\"brandPrimaryRegular\" />\n          ) : (\n            <FavoriteUnselectedIcon color=\"brandPrimaryRegular\" />\n          )}\n        </PopoverDisclosure>\n      </TooltipReference>\n\n      {tooltip.visible && (\n        <Tooltip {...tooltip} css={styles.tooltip}>\n          <TooltipArrow {...tooltip} css={styles.tooltipArrow} />\n          {props.lang.tooltipText}\n        </Tooltip>\n      )}\n\n      {popover.visible && <SaveForLaterPopover popoverState={popover} {...props} />}\n    </>\n  )\n}\n","import { Base, Color, combineStyles, Theme, useTheme } from '@instacart/ids-core'\nimport { FunctionComponent, ReactNode } from 'react'\n\nconst DEFAULT_COLOR: Color = 'systemGrayscale50'\n\nconst getStyles = ({ theme, color }: { theme: Theme; color: string }) =>\n  ({\n    root: {\n      ...theme.typography.bodySmall1,\n      '&:after': {\n        borderLeft: 'none',\n        borderRadius: '0 2px 4px 0',\n        right: 0,\n        transform: 'skew(-30deg)',\n        transformOrigin: 'top right',\n      },\n      '&:before': {\n        borderRadius: '4px 0 0 4px',\n        borderRight: 'none',\n        left: 0,\n      },\n      '&:before, &:after': {\n        backgroundColor: color,\n        content: '\"\"',\n        display: 'block',\n        height: 20,\n        position: 'absolute',\n        top: 0,\n        width: '55%',\n        zIndex: -1,\n      },\n      borderRadius: theme.radius.r4,\n\n      color: theme.colors.systemGrayscale00,\n\n      padding: '1px 14px 1px 4px',\n\n      position: 'relative',\n    },\n  } as const)\n\nexport interface ItemLabelBaseProps extends Base<typeof getStyles> {\n  children: ReactNode\n  backgroundColor?: Color\n}\n\nexport const ItemLabelBase: FunctionComponent<ItemLabelBaseProps> = ({\n  children,\n  styles,\n  backgroundColor,\n}) => {\n  const theme = useTheme()\n  const color = theme.colors[backgroundColor || DEFAULT_COLOR]\n  const { root } = combineStyles(getStyles({ color, theme }), styles)\n\n  return <h2 css={root}>{children}</h2>\n}\n","import { spacing, Variant } from '@instacart/ids-core'\nimport { ItemLabelBase } from '../../atoms/ItemLabelBase'\n\nexport interface ItemLabelProps extends Variant<typeof ItemLabelBase> {}\n\nconst styles = {\n  root: {\n    marginBottom: spacing.s8,\n    marginLeft: -spacing.s8,\n    marginTop: -spacing.s8,\n  },\n}\n\nexport const ItemTileLabel = (props: ItemLabelProps) => {\n  return <ItemLabelBase styles={styles} {...props} />\n}\n","import { spacing, Theme, useTheme } from '@instacart/ids-core'\nimport RatingWithRightSlot from '@app/react/components/rating/RatingWithRightSlot'\n\nconst getStyles = ({ theme }: { theme: Theme }) => ({\n  ratingContainer: {\n    alignSelf: 'flex-start',\n    margin: '3px auto 3px 0',\n  },\n  ratingCountLabel: {\n    color: theme.colors.systemGrayscale50,\n    fontSize: theme.typography.bodySmall2.fontSize,\n    fontWeight: theme.typography.bodySmall2.fontWeight,\n  },\n})\n\nexport type ItemTileRatingProps = {\n  lang: {\n    reviews: string\n  }\n  rating: number\n  count: number\n}\n\nconst ItemTileRating = ({ lang, rating, count }: ItemTileRatingProps) => {\n  const theme = useTheme()\n  const styles = getStyles({ theme })\n\n  return (\n    <div css={styles.ratingContainer} data-test=\"product-rating-container\">\n      <RatingWithRightSlot rating={rating} iconSize={spacing.s12}>\n        {count !== 0 && (\n          <span css={styles.ratingCountLabel} aria-label={`${count} ${lang.reviews}`}>\n            {count}\n          </span>\n        )}\n      </RatingWithRightSlot>\n    </div>\n  )\n}\n\nexport default ItemTileRating\n","import { NotificationIcon } from '@instacart/ids-core'\nimport { Tooltip } from '../../atoms/Tooltip'\n\nexport type PriceAlertIconProps = {\n  productId: string\n  subscribed: boolean\n  onTogglePriceAlert: () => void\n  lang: {\n    addPriceAlert: string\n    removePriceAlert: string\n    togglePriceAlert: string\n  }\n}\n\nexport const PriceAlertIcon = ({\n  productId,\n  subscribed,\n  onTogglePriceAlert,\n  lang,\n}: PriceAlertIconProps) => {\n  return (\n    <Tooltip content={subscribed ? lang.removePriceAlert : lang.addPriceAlert}>\n      <button\n        data-test=\"price-alert-button-badge\"\n        data-active={subscribed}\n        data-testid={productId}\n        onClick={onTogglePriceAlert}\n        aria-label={lang.togglePriceAlert}\n        aria-pressed={subscribed}\n      >\n        <span aria-hidden=\"true\">\n          <NotificationIcon\n            size={18}\n            color={subscribed ? 'brandPrimaryRegular' : 'systemGrayscale70'}\n          />\n        </span>\n      </button>\n    </Tooltip>\n  )\n}\n","import { ItemB } from '@app/react/ids/enterprise/molecules/ItemB'\nimport { ItemTileRatingRow } from '@app/react/ids/enterprise/molecules/ItemB/ItemTileRatingRow'\nimport { ItemTileAisleInformation } from '@app/react/ids/enterprise/molecules/ItemB/ItemTileAisleInformation'\nimport { ItemPromoMarkerList } from '@app/react/ids/enterprise/molecules/ItemB/ItemPromoMarkerList'\nimport { ItemButton } from '../../atoms/ItemButton'\nimport { ItemCustomizeLabel } from '../../atoms/ItemCustomizeLabel'\nimport { SaveForLater } from '../SaveForLater/SaveForLater'\nimport { ItemTileLabel } from '../../molecules/ItemB/ItemTileLabel'\nimport ItemTileRating from '../../molecules/ItemB/ItemTileRating'\nimport { PriceAlertIcon } from '../../molecules/ItemB/PriceAlertIcon'\nimport { ItemTileProps } from './ItemTile.types'\n\nconst {\n  AddItem,\n  AttributeList,\n  Bottom,\n  Item,\n  ItemImage,\n  ItemPrice,\n  ItemPriceSet,\n  ItemRegularPrice,\n  ItemName,\n  ItemWeight,\n  Overlay,\n  Top,\n} = ItemB\n\nexport const ItemTile = ({\n  addItemProps,\n  priceAlertProps,\n  aisle,\n  imageURL,\n  currentPrice,\n  hasDiscount,\n  isCustomizable,\n  discountedPriceIsConfirmed,\n  regularPrice,\n  tags,\n  label,\n  labelColor,\n  lang,\n  name,\n  size,\n  promotions,\n  ratingProps,\n  onImageClick,\n  onNameClick,\n  saveForLaterProps,\n  ...rest\n}: ItemTileProps) => {\n  // const onModeChange = () => {}\n  // const mode = product.order_by_weight ? 'weight' : 'each'\n\n  return (\n    <div aria-label={lang.item} role=\"group\" {...rest}>\n      <Item>\n        <Overlay>\n          {label && <ItemTileLabel backgroundColor={labelColor}>{label}</ItemTileLabel>}\n          {tags.length > 0 && <AttributeList attributes={tags} />}\n        </Overlay>\n        <Top>\n          <ItemButton onClick={onImageClick} aria-hidden=\"true\" tabIndex={-1}>\n            <ItemImage src={imageURL} alt={name} />\n          </ItemButton>\n        </Top>\n        <Bottom>\n          <ItemPriceSet>\n            <ItemPrice>{currentPrice}</ItemPrice>\n            {hasDiscount && (\n              <ItemRegularPrice strikeThrough={discountedPriceIsConfirmed}>\n                {!discountedPriceIsConfirmed && `${lang.or} `}\n                {regularPrice}\n              </ItemRegularPrice>\n            )}\n          </ItemPriceSet>\n          <ItemPromoMarkerList promotions={promotions} />\n          <ItemButton onClick={onNameClick} data-test=\"item-tile-name-button\">\n            <ItemName>{name}</ItemName>\n            {size && <ItemWeight>{size}</ItemWeight>}\n          </ItemButton>\n          {aisle && <ItemTileAisleInformation>{aisle}</ItemTileAisleInformation>}\n          {isCustomizable && <ItemCustomizeLabel>{lang.customizable}</ItemCustomizeLabel>}\n          <ItemTileRatingRow>\n            {ratingProps && <ItemTileRating {...ratingProps} />}\n            {saveForLaterProps && <SaveForLater {...saveForLaterProps} />}\n            {priceAlertProps && <PriceAlertIcon {...priceAlertProps} />}\n          </ItemTileRatingRow>\n        </Bottom>\n        <AddItem {...addItemProps} />\n      </Item>\n    </div>\n  )\n}\n","import { spacing } from '@instacart/ids-core'\nimport { FC } from 'react'\n\nexport interface CollectionProps {\n  fullWidth?: boolean\n}\n\nexport const MAX_WIDTH = '1090px'\n\nconst getStyles = (fullWidth?: boolean) => ({\n  container: {\n    margin: `0 auto ${spacing.s32}px`,\n    maxWidth: fullWidth ? 'none' : MAX_WIDTH,\n    width: '100%',\n  },\n})\n\nexport const Collection: FC<CollectionProps> = ({ children, fullWidth }) => {\n  const styles = getStyles(fullWidth)\n\n  return <div css={styles.container}>{children}</div>\n}\n","import { FC } from 'react'\n\nconst getStyles = () =>\n  ({\n    title: {\n      alignItems: 'flex-end',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  } as const)\n\nexport const CollectionHeader: FC = ({ children }) => {\n  const styles = getStyles()\n\n  return <h2 css={styles.title}>{children}</h2>\n}\n","import { FC, ComponentPropsWithoutRef } from 'react'\nimport { Theme, useTheme, Base } from '@instacart/ids-core'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    titleText: {\n      ...theme.typography.subtitleLarge,\n    },\n  } as const)\n\ninterface CollectionTitleProps extends ComponentPropsWithoutRef<'span'>, Base<typeof getStyles> {}\n\nexport const CollectionTitle: FC<CollectionTitleProps> = ({ children, ...rest }) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  return (\n    <span css={styles.titleText} {...rest}>\n      {children}\n    </span>\n  )\n}\n","import { FC, ComponentPropsWithoutRef } from 'react'\nimport { Theme, useTheme, spacing, Base } from '@instacart/ids-core'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    titleAction: {\n      ...theme.typography.bodyMedium2,\n      color: theme.colors.brandPrimaryRegular,\n    },\n    titleActionIcon: {\n      fontSize: '10px',\n      marginLeft: spacing.s8,\n    },\n  } as const)\n\ninterface CollectionLinkProps extends ComponentPropsWithoutRef<'a'>, Base<typeof getStyles> {}\n\nexport const CollectionLink: FC<CollectionLinkProps> = ({ children, ...rest }) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  return (\n    <a css={styles.titleAction} {...rest}>\n      {children}\n      <span css={styles.titleActionIcon} className=\"icon-after-chevron-right\" aria-hidden=\"true\" />\n    </a>\n  )\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport getHtml5Url from '@app/utils/getHtml5Url'\nimport { analytics } from '@instacart/enterprise-services'\nimport { configSelector } from '@app/services/config/selectors'\nimport isMobile from '@app/utils/isMobile'\nimport type { RootState } from '@app/services/rootReducer'\nimport { getAppVersion } from '@app/utils/mobileApp/getAppVersion'\n\ninterface LogSegmentEventArg {\n  name: string\n  segmentArgs: Record<string, unknown>\n}\n\ninterface EventPayload {\n  action?: string\n  category: string\n  label?: string\n  value?: string | number | boolean | undefined\n}\n\nexport const logEvent = createAsyncThunk(\n  'analytics/logEvent',\n  async (eventPayload: EventPayload) => {\n    analytics.log({\n      data: { ...eventPayload },\n      event: 'event',\n    })\n  }\n)\n\nexport const logSegmentEvent = createAsyncThunk(\n  'analytics/logSegmentEvent',\n  async ({ name, segmentArgs = {} }: LogSegmentEventArg, { getState }) => {\n    const state = getState() as RootState\n    const config = configSelector(state)\n    const absUrl = window.location.href\n    const page = isMobile(config) ? getHtml5Url(absUrl) : absUrl\n    const unataAppVersion = config.version\n    const unataMobileAppVersion = await getAppVersion()\n\n    const newArgs = {\n      ...segmentArgs,\n      unataAppVersion,\n      unataMobileAppVersion,\n    }\n\n    analytics.log({\n      data: {\n        segmentData: { page, segmentArgs: newArgs },\n        segmentName: name,\n      },\n      event: 'event',\n    })\n  }\n)\n","import { createSelector } from 'reselect'\nimport { lang as langService } from '@instacart/enterprise-services'\nimport { langSelector } from '@app/services/config/selectors'\nimport { maxQuantitySelector, shoppingCartItemSelector } from '../product/selectors'\n\n/**\n * addCartDisclaimer label when max quantity reached\n */\nexport const addCartDisclaimerSelector = createSelector(\n  shoppingCartItemSelector,\n  maxQuantitySelector,\n  langSelector,\n  (cartItem, max, lang) => {\n    const maxQuantityReached = cartItem && cartItem?.quantity >= max\n    return maxQuantityReached\n      ? langService.interpolate(lang.limitPerOrder, {\n          limit: max,\n        })\n      : undefined\n  }\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { StoreProduct } from '@app/types/product'\nimport { eventEmitter, EVENT_TYPES } from '@app/utils/eventEmitter'\nimport { cart as cartService } from '@instacart/enterprise-services'\nimport { RootState } from '../rootReducer'\nimport { allowAddToCartSelector, maxQuantitySelector } from '../product/selectors'\n\ninterface AddItemArg {\n  addQty?: number\n  product: StoreProduct\n}\n\ninterface UpdateItemArg {\n  updateQty: number\n  product: StoreProduct\n}\n\ninterface OnIncrementArg {\n  product: StoreProduct\n}\n\n/**\n *  Add item based on provided quantity on top of current, else defaults to product min\n *  Will not be able to add item if item is OOS or reach maxQuantity\n */\nexport const addItem = createAsyncThunk(\n  'cart/addItem',\n  ({ addQty, product }: AddItemArg, { getState }) => {\n    const cartItem = cartService.selectors.getItem(product, product.uoms)\n    const addToCartQty = addQty || product.ordering_parameters.min\n    const allowAddToCart = allowAddToCartSelector(getState() as RootState, {\n      addToCartQty,\n      cartItem,\n      product,\n    })\n\n    if (!allowAddToCart) return\n\n    eventEmitter.emit(EVENT_TYPES.ADD_ITEM_TO_CART, product, addToCartQty, product.uoms)\n  }\n)\n\n/**\n *  Remove item from cart\n */\nexport const removeItem = createAsyncThunk('cart/removeItem', ({ product }: AddItemArg) => {\n  eventEmitter.emit(EVENT_TYPES.REMOVE_ITEM_FROM_CART, product, product.uoms)\n})\n\n/**\n * When updated item quantity is smaller than the required min,\n * it will trigger a removeItem\n */\nexport const updateItemQuantity = createAsyncThunk(\n  'cart/updateItemQuantity',\n  ({ updateQty, product }: UpdateItemArg) => {\n    const maxQuantity = maxQuantitySelector({}, { product })\n    // const minQuantity = product.ordering_parameters.min\n\n    // dont allow quantity pass max, set as max instead\n    if (updateQty > maxQuantity) {\n      eventEmitter.emit(EVENT_TYPES.UPDATE_ITEM_QUANTITY, product, maxQuantity, product.uoms)\n      // When quantity reach below min, angular code triggers a remove product, so below code is in the dark atm\n      // } else if (updateQty < minQuantity) {\n      //   eventEmitter.emit(EVENT_TYPES.UPDATE_ITEM_QUANTITY, product, minQuantity, config)\n    } else {\n      eventEmitter.emit(EVENT_TYPES.UPDATE_ITEM_QUANTITY, product, updateQty, product.uoms)\n    }\n  }\n)\n\n/**\n *  On item increment\n */\nexport const onItemIncrement = createAsyncThunk(\n  'cart/itemIncrement',\n  ({ product }: OnIncrementArg, { dispatch }) => {\n    const item = cartService.selectors.getItem(product, product.uoms)\n    const currentQty = item?.quantity\n\n    const { increment } = product.ordering_parameters\n\n    if (currentQty) {\n      dispatch(updateItemQuantity({ product, updateQty: currentQty + increment }))\n    } else {\n      dispatch(addItem({ addQty: increment, product }))\n    }\n  }\n)\n\n/**\n *  On item decrement\n */\nexport const onItemDecrement = createAsyncThunk(\n  'cart/itemDecrement',\n  ({ product }: OnIncrementArg, { dispatch }) => {\n    const item = cartService.selectors.getItem(product, product.uoms)\n    if (item) {\n      dispatch(\n        updateItemQuantity({\n          product,\n          updateQty: item.quantity - product.ordering_parameters.increment,\n        })\n      )\n    }\n  }\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { PriceAlertSource, StoreProduct } from '@app/types/product'\nimport angular from 'angular'\nimport {\n  createPriceAlertById,\n  removePriceAlertById,\n} from '@instacart/enterprise-services/product/api/product'\nimport { logSegmentEvent } from '@app/services/analytics/thunks'\nimport { isDefined } from '@app/utils/isDefined'\nimport { Dispatch, SetStateAction } from 'react'\n\ninterface TogglePriceAlertArg {\n  product: StoreProduct\n  source: PriceAlertSource\n  setProduct: Dispatch<SetStateAction<StoreProduct>>\n}\ninterface AddPriceAlertArg {\n  product: StoreProduct\n  setProduct: Dispatch<SetStateAction<StoreProduct>>\n}\ninterface RemovePriceAlertArg {\n  product: StoreProduct\n  setProduct: Dispatch<SetStateAction<StoreProduct>>\n}\n\nexport const addPriceAlert = createAsyncThunk(\n  'product/addPriceAlert',\n  ({ product, setProduct }: AddPriceAlertArg) =>\n    createPriceAlertById(product.id).then(priceAlert => {\n      // triggering Angular event for backward compatibility. Will be removed once migrated to redux\n      const angularRootEl = document.getElementById('angular')\n      if (angularRootEl) {\n        const injector = angular.element(angularRootEl).injector()\n        const $rootScope = injector.get('$rootScope')\n        $rootScope.$emit('priceAlertChange', {\n          priceAlert,\n          productId: product.id,\n        })\n      }\n\n      // currently it updates state of ItemTile component but once migrated to Redux it will\n      // trigger action and corresponding reducer will update Redux state\n      setProduct({\n        ...product,\n        price_alert: priceAlert,\n      })\n    })\n)\nexport const deletePriceAlert = createAsyncThunk(\n  'product/deletePriceAlert',\n  ({ product, setProduct }: RemovePriceAlertArg) =>\n    removePriceAlertById(product.id).then(() => {\n      // triggering Angular event for backward compatibility. Will be removed once migrated to redux\n      const angularRootEl = document.getElementById('angular')\n      if (angularRootEl) {\n        const injector = angular.element(angularRootEl).injector()\n        const $rootScope = injector.get('$rootScope')\n        $rootScope.$emit('priceAlertChange', {\n          priceAlert: undefined,\n          productId: product.id,\n        })\n      }\n\n      // currently it updates state of ItemTile component but once migrated to Redux it will\n      // trigger action and corresponding reducer will update Redux state\n      setProduct({\n        ...product,\n        price_alert: null,\n      })\n    })\n)\n\nexport const togglePriceAlert = createAsyncThunk(\n  'product/togglePriceAlert',\n  ({ product, source, setProduct }: TogglePriceAlertArg, { dispatch }) => {\n    if (isDefined(product.price_alert)) {\n      dispatch(deletePriceAlert({ product, setProduct }))\n    } else {\n      dispatch(addPriceAlert({ product, setProduct }))\n    }\n\n    dispatch(\n      logSegmentEvent({\n        name: 'store.price_alert',\n        segmentArgs: {\n          add_price_alert: !product.price_alert,\n          price_alert_source: source,\n          product_details: product,\n          remove_price_alert: !!product.price_alert,\n        },\n      })\n    )\n  }\n)\n","import { MouseEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport authService from '@instacart/enterprise-services/auth'\nimport { responsive, spacing } from '@instacart/ids-core'\n\nimport FontIcon from '@app/react/common/FontIcon'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { useAnalytics } from '@app/react/common/hooks/useAnalytics'\nimport { useCartItem } from '@app/react/common/hooks/useCartItem'\nimport { makeUseSelectorWithProps } from '@app/react/common/hooks/useSelectorWithProps'\n\nimport { ItemBAddItemProps } from '@app/react/ids/enterprise/molecules/ItemB/ItemBAddItem'\nimport { ItemTileRatingProps } from '@app/react/ids/enterprise/molecules/ItemB/ItemTileRating'\nimport { PriceAlertIconProps } from '@app/react/ids/enterprise/molecules/ItemB/PriceAlertIcon'\nimport { ItemTile, SaveForLaterProps } from '@app/react/ids/enterprise/organisms'\nimport { ItemTileProps } from '@app/react/ids/enterprise/organisms/ItemTile/ItemTile.types'\n\nimport { logEvent, logSegmentEvent } from '@app/services/analytics/thunks'\nimport { isMobileSelector } from '@app/services/browser/selectors'\nimport { addCartDisclaimerSelector } from '@app/services/cart/selectors'\nimport {\n  onItemIncrement as onItemIncrementThunk,\n  onItemDecrement as onItemDecrementThunk,\n} from '@app/services/cart/thunks'\nimport { useConfig } from '@app/services/config/hooks'\nimport {\n  itemTileLangSelector,\n  sizeWithPricePerUnitSelector,\n  titleSelector,\n  showPriceAlertSelector,\n  showSaveForLaterSelector,\n  itemTileImageSelector,\n  regularPriceStringSelector,\n  currentPriceStringSelector,\n  subscribedForPriceAlertSelector,\n  orderByUnitSelector,\n  ratingSelector,\n  numberOfRatingsSelector,\n  quantityInCartSelector,\n  allowAddToCartSelector,\n  isCustomizableSelector,\n  aisleSelector,\n  discountedPriceIsConfirmedSelector,\n  promotionsSelector,\n  saveForLaterLangSelector,\n  labelSelector,\n  labelTypeSelector,\n  allowDecrementCartQuantitySelector,\n  decrementCartQuantityType,\n  hasPromoPriceSelector,\n  saveForLaterListsSelector,\n} from '@app/services/product/selectors'\nimport { togglePriceAlert as togglePriceAlertThunk } from '@app/services/product/thunks'\nimport { useThunkDispatch } from '@app/services/store'\nimport { productAttributeTagsSelector } from '@app/services/tags/selectors'\nimport { userListsSelector } from '@app/services/userList/selectors'\nimport { createUserList, toggleItemInList } from '@app/services/userList/thunks'\nimport { findItemInList, findItemsInSomeList } from '@app/services/userList/utils'\nimport { LabelTypes, StoreProduct } from '@app/types/product'\nimport { eventEmitter, EVENT_TYPES } from '@app/utils/eventEmitter'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport angular from 'angular'\n\nexport interface ItemTileContainerProps {\n  product: StoreProduct\n}\n\nconst useStyles = createStyles({\n  float: 'left',\n  margin: `0 0 ${spacing.s12}px ${spacing.s12}px`,\n  width: `calc((100% - 3 * ${spacing.s12}px) / 2)`,\n\n  // eslint-disable-next-line sort-keys-fix/sort-keys-fix\n  '.cell-wrapper:nth-of-type(2n+3) &': {\n    clear: 'left',\n  },\n\n  [responsive.up('r')]: {\n    clear: 'none',\n    float: 'none',\n    height: '340px', // Need 457px to fit everything possible (e.g., \"Stress Test\" from ItemTile storybook); min-height is 287px\n    margin: '0',\n    width: '200px',\n  },\n})\n\n/**\n * This component is responsible for preparing the ItemTileProps\n * that will be consumed by the ItemTile\n * @param product StoreProduct\n */\nexport const ItemTileContainer = ({ product: initialProductState }: ItemTileContainerProps) => {\n  // currently the component accepts the product model from angular and the component has to use it\n  // as state as it is modifying it after some user interactions. Later it should be taken from\n  // single Redux store\n  const [product, setProduct] = useState(initialProductState)\n  const [isInteracting, setInteracting] = useState<boolean>(false)\n  const [hasLoyaltyCard, setHasLoyaltyCard] = useState(false)\n  const { createClickHandler } = useAnalytics()\n  const { userReviews } = useConfig()\n  const dispatch = useThunkDispatch()\n  const cartItem = useCartItem(product)\n  const styles = useStyles()\n\n  const lang = useSelector(itemTileLangSelector)\n\n  // Product image onclick triggers modal / navigate to product detail via event emitter\n  const openPdpWithAnalytics = (category: string) =>\n    createClickHandler({ category }, () =>\n      // @param product - StoreProduct\n      // @param openAsModal - Should open as modal or navigate to PDP page\n      // @param location - Location of where the item tile is placed for analytics\n      // @param {Placement} {placement.promoted} - Store product came from placement response, mark as 'false' for now\n      // @param {Placement} {placement.isExternalRoutesDisabled} - value from placement.isExternalRoutesDisabled when itemTile is used by placement response\n      eventEmitter.emit(EVENT_TYPES.LINK_TO_PRODUCT_DETAIL, product, true, '', {\n        isExternalRoutesDisabled: false,\n        promoted: false,\n      })\n    )\n\n  /**\n   * Products are not in Redux, therefore we must listen for the Angular\n   * app's priceAlertChange event in order to update our local product's\n   * price_alert state.\n   */\n  useEffect(() => {\n    const angularRootEl = document.getElementById('angular')\n    if (angularRootEl) {\n      const injector = angular.element(angularRootEl).injector()\n      const $rootScope = injector.get('$rootScope')\n\n      const unsub = $rootScope.$on('priceAlertChange', (_event, { productId, priceAlert }) => {\n        if (productId === product.id) {\n          setProduct({\n            ...product,\n            price_alert: priceAlert,\n          })\n        }\n      })\n\n      return unsub\n    }\n\n    return undefined\n  }, [product])\n\n  useEffect(() => {\n    const unsubscribe = authService.store.subscribe(() => {\n      setHasLoyaltyCard(!!authService.selectors.getLoyaltyCards()?.length)\n    })\n\n    setHasLoyaltyCard(!!authService.selectors.getLoyaltyCards()?.length)\n    return unsubscribe\n  }, [])\n\n  const selectorProps = useMemo(\n    () =>\n      ({\n        addToCartQty: undefined,\n        cartItem,\n        featured: false,\n        hasLoyaltyCard,\n        product,\n        tagLocation: 'productCell', // used for tag customization\n      } as const),\n    [product, cartItem, hasLoyaltyCard]\n  )\n\n  const useSelectorWithProps = useMemo(() => makeUseSelectorWithProps(selectorProps), [\n    selectorProps,\n  ])\n\n  const labelType = useSelectorWithProps(labelTypeSelector)\n  const labelColor = useMemo(() => {\n    if (labelType === LabelTypes.Purchased) return 'brandPrimaryRegular'\n    return undefined\n  }, [labelType])\n\n  const userLists = useSelector(userListsSelector)\n  const saveForLaterLang = useSelector(saveForLaterLangSelector)\n  const saveForLaterLists = useSelectorWithProps(saveForLaterListsSelector)\n  const quantityInCart = useSelectorWithProps(quantityInCartSelector)\n  const measurement = useSelectorWithProps(orderByUnitSelector)\n\n  const incrementQuantity = useCallback(() => {\n    dispatch(onItemIncrementThunk({ product }))\n  }, [dispatch, product])\n\n  const decrementType = useSelectorWithProps(decrementCartQuantityType)\n\n  const onDecrement = useCallback(() => {\n    // Close the interacting ui if removing from cart\n    if (decrementType === 'trash') {\n      setInteracting(false)\n    }\n\n    dispatch(onItemDecrementThunk({ product }))\n  }, [dispatch, product, decrementType])\n\n  const isCustomizable = useSelectorWithProps(isCustomizableSelector)\n\n  // Add-to-cart props\n  const addItemProps: ItemBAddItemProps = {\n    accessibleLabel: lang.accessibleLabel, // Should be \"Change quantity\" when qty > 0\n    allowDecrement: useSelectorWithProps(allowDecrementCartQuantitySelector),\n    allowIncrement: useSelectorWithProps(allowAddToCartSelector),\n    ariaDecrement:\n      decrementType === 'subtract'\n        ? interpolate(lang.decrementQuantity, { itemName: product.name })\n        : interpolate(lang.removeItem, { itemName: product.name }),\n    ariaIncrement: interpolate(lang.incrementQuantity, { itemName: product.name }),\n    ariaValue: lang.quantity,\n    buttonValueText: quantityInCart ? `${quantityInCart} ${measurement || ''}` : undefined,\n    decrementType,\n    disclaimer: useSelectorWithProps(addCartDisclaimerSelector),\n    isInteracting,\n    onDecrement,\n    onIncrement: incrementQuantity,\n    setInteracting: newInteracting => {\n      if (isCustomizable) {\n        openPdpWithAnalytics('product cell customized stepper')({} as MouseEvent)\n        return\n      }\n\n      // Add the product to cart right away if it's not in the cart yet\n      if (!isInteracting && newInteracting && quantityInCart === 0) {\n        incrementQuantity()\n      }\n\n      setInteracting(newInteracting)\n    },\n    value: quantityInCart,\n    valueText: quantityInCart ? `${quantityInCart} ${measurement || ''}` : undefined,\n  }\n\n  const priceAlertProps: PriceAlertIconProps = {\n    lang,\n    onTogglePriceAlert: useCallback(() => {\n      dispatch(togglePriceAlertThunk({ product, setProduct, source: 'product_tile' }))\n    }, [dispatch, product]),\n    productId: product.id,\n    subscribed: useSelectorWithProps(subscribedForPriceAlertSelector),\n  }\n\n  const saveForLaterProps: SaveForLaterProps = {\n    disabled: false,\n    isMobile: useSelector(isMobileSelector),\n    lang: saveForLaterLang,\n    lists: saveForLaterLists,\n    onCreate: useCallback(\n      async (newListName: string) => {\n        dispatch(\n          logEvent({\n            action: 'submit',\n            category: 'add product/s to list',\n          })\n        )\n        await dispatch(createUserList({ items: [product], name: newListName }))\n      },\n      [dispatch, product]\n    ),\n    onEdit: useCallback(\n      listId => {\n        const list = userLists.find(userList => userList.id === listId)\n        if (!list) {\n          return\n        }\n\n        /**\n         * For compatibility with AngularJS app, we cannot use history.push\n         * here as `history` is `undefined`. We must instead emit an event\n         * for the Angular app.\n         */\n        eventEmitter.emit(EVENT_TYPES.LINK_TO_USERLIST_DETAIL, product, list)\n      },\n      [product, userLists]\n    ),\n    onSelect: useCallback(\n      async listId => {\n        const list = userLists.find(userList => userList.id === listId)\n\n        if (!list) {\n          return\n        }\n\n        dispatch(\n          logEvent({\n            action: 'click',\n            category: 'add product/s to list',\n          })\n        )\n\n        const productIsInList = findItemInList(product, list)\n\n        if (!productIsInList) {\n          dispatch(\n            logSegmentEvent({\n              name: 'store.save_for_later',\n              segmentArgs: {\n                list_name: list.name,\n                product_id: product.id,\n                source: 'productTile',\n              },\n            })\n          )\n        }\n\n        await dispatch(toggleItemInList({ item: product, list }))\n      },\n      [dispatch, product, userLists]\n    ),\n    productIsInAnyList: useMemo(() => findItemsInSomeList([product], userLists), [\n      product,\n      userLists,\n    ]),\n  }\n\n  const ratingProps: ItemTileRatingProps = {\n    count: useSelectorWithProps(numberOfRatingsSelector),\n    lang,\n    rating: useSelectorWithProps(ratingSelector),\n  }\n\n  const promotions = useSelectorWithProps(promotionsSelector)\n\n  // At the time of writing this, we did not have a good way to\n  // use client-specific icons in IDS-based components. The following\n  // code injects the loyalty promos with a SVG Font Icon component that is\n  // then rendered by the PromoMarkers.\n  promotions.forEach((promo, index) => {\n    if (promo.isLoyalty) {\n      promotions[index].loyaltyIcon = <FontIcon className=\"icon-loyalty-badge\" size=\"xSmall\" />\n    }\n  })\n\n  const itemTileProps: ItemTileProps = {\n    addItemProps,\n    aisle: useSelectorWithProps(aisleSelector),\n    currentPrice: useSelectorWithProps(currentPriceStringSelector),\n    discountedPriceIsConfirmed: useSelectorWithProps(discountedPriceIsConfirmedSelector),\n    hasDiscount: useSelectorWithProps(hasPromoPriceSelector),\n    imageURL: useSelectorWithProps(itemTileImageSelector),\n    isCustomizable,\n    label: useSelectorWithProps(labelSelector),\n    labelColor,\n    lang: useSelector(itemTileLangSelector),\n    name: useSelectorWithProps(titleSelector),\n    onImageClick: openPdpWithAnalytics('product cell image link'),\n    onNameClick: openPdpWithAnalytics('product cell name link'),\n    priceAlertProps: useSelector(showPriceAlertSelector) ? priceAlertProps : undefined,\n    promotions,\n    ratingProps: userReviews.enabled ? ratingProps : undefined,\n    regularPrice: useSelectorWithProps(regularPriceStringSelector),\n    saveForLaterProps: useSelectorWithProps(showSaveForLaterSelector)\n      ? saveForLaterProps\n      : undefined,\n    size: useSelectorWithProps(sizeWithPricePerUnitSelector),\n    tags: useSelectorWithProps(productAttributeTagsSelector),\n  }\n\n  return <ItemTile css={styles} data-test=\"product-cell\" {...itemTileProps} />\n}\n","import { useState, useEffect } from 'react'\nimport { cart as cartService } from '@instacart/enterprise-services'\nimport { getCurrentStore } from '@instacart/enterprise-services/shopping-list/_common/selectors'\nimport { StoreProduct } from '@app/types/product'\nimport { ShoppingListItem } from '@app/types/shoppingList'\nimport { deepEquals } from '@app/utils/equality'\n\n/**\n * Provide the product and expose returns item that is in cart\n * @param product Item in the current cart (cart or list)\n */\nexport const useCartItem = (product: StoreProduct) => {\n  // Force refresh when store updates or new item added to cart\n  const [item, setItem] = useState<ShoppingListItem | undefined>(\n    cartService.selectors.getItem(product, product.uoms)\n  )\n  // store can be different base on intent of the user\n  const currentStore = getCurrentStore()\n\n  useEffect(() => {\n    // since adding item from angular does not trigger react cycle, need to sub to store\n    const unsub = currentStore.subscribe(() => {\n      // To avoid unnecessary re-renders, only call setItem if something actually changed\n      const currentItem = cartService.selectors.getItem(product, product.uoms)\n      if (currentItem !== item && !deepEquals(currentItem, item)) {\n        setItem(currentItem)\n      }\n    })\n    return unsub\n  }, [currentStore, item, product])\n  // End of crutch\n\n  return item\n}\n","import { deepEquals } from '@app/utils/equality'\nimport { DefaultRootState, useSelector } from 'react-redux'\n\nexport const makeUseSelectorWithProps = <TProps = unknown>(props: TProps) => {\n  return <TState = DefaultRootState, TSelected = unknown>(\n    selector: (state: TState, props: TProps) => TSelected\n  ) => {\n    return useSelector<TState, TSelected>(state => selector(state, props), deepEquals)\n  }\n}\n","// This code is extracted into a separate file to avoid circular dependency issues\n\nimport { createStyleVariables } from '@app/react/common/hooks/createStyles'\nimport { RatingStyleVariables } from './types'\n\nexport const styleVariables = createStyleVariables<RatingStyleVariables>('rating', {\n  filled: 'brandPrimaryRegular',\n})\n","import { createStyles } from '@app/react/common/hooks/createStyles'\nimport { styleVariables } from '@app/react/components/rating/styles'\nimport { lang as langService } from '@instacart/enterprise-services'\nimport { useLangAria } from '@app/services/config/hooks'\n\nconst FILLED_STYLES = ['unfilled', 'filled'] as const\nconst MAX_RATING = 5\n\nexport type RatingProps = {\n  /** Size of star icon */\n  iconSize?: number\n  /** The current value/number of filled stars  */\n  rating: number\n}\n\nconst useStyles = createStyles(\n  (theme, variables) => ({\n    filled: {\n      fill: theme.colors[variables.filled],\n    },\n    icon: {\n      height: '1em',\n      width: '1em',\n    },\n    icons: {\n      ':nth-of-type(2)': {\n        overflow: 'hidden',\n      },\n      left: 0,\n      position: 'absolute',\n    },\n    root: {\n      height: '1em',\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: `${MAX_RATING}em`,\n    },\n    unfilled: {\n      fill: theme.colors.systemGrayscale30,\n    },\n  }),\n  styleVariables\n)\n\nconst svgAtributes = {\n  focusable: 'false',\n  pointerEvents: 'none',\n  preserveAspectRatio: 'xMidYMid meet',\n  viewBox: '0 0 24 24',\n} as const\n\nconst computeFillWidth = (value: number, count: number) =>\n  value ? `${(value / count) * 100}%` : '0%'\n\nconst Rating = ({ rating, iconSize = 24 }: RatingProps) => {\n  const styles = useStyles()\n  const langAria = useLangAria()\n  const roundedRating = +rating.toFixed(2)\n  let currentRating = rating\n\n  // Don't allow ratings greater than the max or less than 0\n  if (rating > MAX_RATING) {\n    currentRating = MAX_RATING\n  } else if (rating < 0) {\n    currentRating = 0\n  }\n\n  const filledWidth = {\n    width: `${computeFillWidth(currentRating, MAX_RATING)}`,\n  }\n  const rootStyles = {\n    ...styles.root,\n    fontSize: iconSize,\n  }\n\n  return (\n    <div\n      css={rootStyles}\n      aria-label={langService.interpolate(langAria.rating, {\n        maxRating: MAX_RATING,\n        rating: roundedRating,\n      })}\n    >\n      {FILLED_STYLES.map(filled => (\n        <div css={[styles.icons, filled === 'filled' && filledWidth]} key={filled}>\n          {[...Array(MAX_RATING).keys()].map(i => (\n            <svg key={i} {...svgAtributes} css={[styles.icon, styles[filled]]} aria-hidden=\"true\">\n              <g>\n                <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n              </g>\n            </svg>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Rating\n"],"sourceRoot":""}