(window.webpackJsonpUnataWidgets=window.webpackJsonpUnataWidgets||[]).push([[36],{"3efcc385654630d2d2e8":function(e,i){e.exports='<form name=registerForm ng-submit="register(); analytics.logEvent(\'register\', \'submit\')" invalid-focus focus-first-input novalidate> <div ng-if="formContext === \'mainRegister\' && lang.values.registrationModalHelpText" class="message warn form-row"> <span class=icon-warning aria-hidden=true></span> {{::lang.values.registrationModalHelpText}} </div> <div ng-if="::(config.collectNameDuringRegistration && !config.collectAddressDuringRegistration)"> <div class=form-row> <div class=col-1-2> <label for=registration-first-name-no-address>{{ ::lang.values.firstName }}</label> <input type=text class=input name=firstName ng-required=::config.requireNameDuringRegistration ng-model=account.first_name placeholder="{{ ::lang.values.firstName }} {{::config.requireNameDuringRegistration ? \'*\' : \'\'}}" id=registration-first-name-no-address aria-label="{{::lang.aria.firstName}} {{::config.requireNameDuringRegistration ? lang.aria.required : \'\'}}" aria-describedby=registration-first-name-no-address-error maxlength={{::config.maxNameLength}} /> <span id=registration-first-name-no-address-error class=required-field ng-if="config.requireNameDuringRegistration && registerForm.firstName.$touched && registerForm.firstName.$invalid">{{::lang.values.requiredForm.firstName}}</span> </div> <div class=col-1-2> <label for=registration-last-name-no-address>{{ ::lang.values.lastName }}</label> <input type=text class=input name=lastName ng-required=::config.requireNameDuringRegistration ng-model=account.last_name placeholder="{{ ::lang.values.lastName }} {{::config.requireNameDuringRegistration ? \'*\' : \'\'}}" id=registration-last-name-no-address aria-label="{{::lang.aria.lastName}} {{::config.requireNameDuringRegistration ? lang.aria.required : \'\'}}" aria-describedby=registration-last-name-no-address-error maxlength={{::config.maxNameLength}} /> <span id=registration-last-name-no-address-error class=required-field ng-if="config.requireNameDuringRegistration && registerForm.lastName.$touched && registerForm.lastName.$invalid">{{::lang.values.requiredForm.lastName}}</span> </div> </div> </div> <div class=form-row> <label for=registration-email>{{ ::lang.values.email }}</label> <div class=icon-left> <span class="icon-left icon-email" aria-hidden=true></span> <input type=email class=input name=username required ng-model=account.email placeholder="{{ ::lang.values.email }} *" id=registration-email aria-label="{{::lang.aria.email + \' \' + lang.aria.required}}" aria-describedby=registration-email-error maxlength={{::config.maxEmailLength}} /> <span id=registration-email-error class=required-field ng-if="registerForm.username.$touched && registerForm.username.$invalid">{{::lang.values.requiredForm.email}}</span> </div> </div> <div class=form-row> <label for=registration-password>{{ ::lang.values.password }}</label> <div class=icon-left> <span class="icon-left icon-key" aria-hidden=true></span> <input ng-model=account.password name=password type=password required placeholder="{{ ::lang.values.password }} *" id=registration-password class="input form-password" aria-label="{{::lang.aria.password + \' \' + lang.aria.required}}" aria-describedby=registration-password-error /> <div class=input-help ng-if=lang.values.passwordInputHelpText> {{::lang.values.passwordInputHelpText}} </div> <span id=registration-password-error class=required-field ng-if="registerForm.password.$touched && registerForm.password.$invalid">{{::lang.values.requiredForm.password}}</span> </div> </div> <div class=form-row> <label for=registration-password-confirm>{{ ::lang.values.passwordConfirm }}</label> <div class=icon-left> <span class="icon-left icon-key" aria-hidden=true></span> <input ng-model=confirmPassword name=passwordConfirm type=password required placeholder="{{ ::lang.values.passwordConfirm }} *" id=registration-password-confirm class="input form-password-confirm" aria-label="{{::lang.aria.passwordConfirmNew + \' \' + lang.aria.required}}" aria-describedby=registration-password-confirm-error /> <span id=registration-password-confirm-error class=required-field ng-if="registerForm.passwordConfirm.$touched && registerForm.passwordConfirm.$invalid">{{::lang.values.requiredForm.password}}</span> </div> </div> <div ng-if=":: (shouldDisplayLoyalty && shouldDisplayLoyaltyToggleLink)" class=show-hide-loyalty-box> <span role=button class=show-loyalty-id ng-click=toggleLoyalty() aria-controls="{{ showLoyaltyIdField ? \'register-loyalty-id-field\' :  \'\' }}" aria-expanded="{{ shouldDisplayLoyalty && (formContext === \'loyaltyRegister\') && showLoyaltyIdField }}">{{showLoyaltyIdField ? lang.values.dontHaveALoyaltyCard : lang.values.alreadyHaveALoyaltyCard}}</span> </div> <div ng-if="shouldDisplayLoyalty && (formContext === \'loyaltyRegister\') && showLoyaltyIdField" class=form-row id=register-loyalty-id-field> <label for=registration-loyalty>{{::lang.values.loyaltyCardPlaceholder || lang.values.loyaltyCard}}</label> <div class=icon-left> <span class="icon-left icon-heart" aria-hidden=true></span> <input type=text class=input ng-model=account.loyalty_cards[0].card_number placeholder="{{::lang.values.loyaltyCardPlaceholder || lang.values.loyaltyCard}}" pattern={{::config.loyaltyCardPattern}} maxlength={{::config.loyaltyCardMaxLength}} id=registration-loyalty /> <div class=input-help ng-if=lang.values.loyaltyInputHelpText> <span id=loyalty-input-help ng-bind-html=::lang.values.loyaltyInputHelpText></span> <button ng-if=::config.showRegistrationCardHelp type=button uib-popover-html=helpSrcContent popover-trigger="focus mouseenter" description-id=loyalty-input-help-tooltip register-help aria-label="{{::lang.aria.imageOf}} {{::lang.values.loyaltyCardNumberLocation}}" ng-click=toggleTooltip() aria-expanded="{{ tooltipExpanded }}" aria-controls=loyalty-input-help></button> </div> </div> </div> <div ng-if="shouldDisplayLoyalty && (formContext === \'mainRegister\')" class=form-row> <div class=icon-left> <span class="icon-left icon-heart" aria-hidden=true></span> <input type=text class=input ng-model=account.loyalty_cards[0].card_number placeholder={{::lang.values.loyaltyCard}} id=registration-loyalty pattern={{::config.loyaltyCardPattern}} maxlength={{::config.loyaltyCardMaxLength}} aria-label={{::lang.aria.loyaltyCard}} /> <div class=input-help ng-if=lang.values.loyaltyInputHelpText> <span id=loyalty-input-help ng-bind-html=::lang.values.loyaltyInputHelpText></span> <button ng-if=::config.showRegistrationCardHelp type=button uib-popover-html=helpSrcContent popover-trigger="focus mouseenter" description-id=loyalty-input-help-tooltip register-help aria-label="{{::lang.aria.imageOf}} {{::lang.values.loyaltyCardNumberLocation}}" ng-click=toggleTooltip() aria-expanded="{{ tooltipExpanded }}" aria-controls=loyalty-input-help></button> </div> </div> </div> <div ng-if="::(config.collectPhoneNumbersDuringRegistration && !config.phoneDisplayNonePreferred)" class=form-row> <div ng-repeat="field in ::config.deliveryAddressPhoneNumberFields"> <input ng-if=":: field.hideInRegistrationFormDuplicateValueKey" ng-model=account[field.key] ng-value="account[field.key] = account[field.hideInRegistrationFormDuplicateValueKey]" type=hidden /> <label for=registration-telephone-{{field.key}} ng-class="{ \'ng-required\': account.primary_number_key === field.key &&\n      config.collectPhoneNumbersDuringRegistration }" ng-if=":: !field.hideInRegistrationForm">{{field.label}}</label> <div ng-if=":: !field.hideInRegistrationForm" class=form-row> <input type=tel class=input name={{$index}} ng-keyup=setPreferredPhoneNumber(field.key) ng-required="account.primary_number_key === field.key && config.collectPhoneNumbersDuringRegistration" ng-model=account[field.key] update-on-enter ng-model-options="{allowInvalid: true, updateOn: \'blur\'}" placeholder="{{field.label}} {{account.primary_number_key === field.key && config.collectPhoneNumbersDuringRegistration ? \'*\' : \'\'}}" aria-label="{{field.label}} {{account.primary_number_key === field.key && config.collectPhoneNumbersDuringRegistration ? lang.aria.required : \'\'}}" aria-describedby=registration-telephone-{{field.key}}-error id=registration-telephone-{{field.key}} pattern={{::config.phoneNumberPattern}} maxlength={{::config.phoneNumberMaxLength}} /> <span id=registration-telephone-{{field.key}}-error class=required-field ng-if="account.primary_number_key === field.key && config.collectPhoneNumbersDuringRegistration && registerForm[$index].$touched && registerForm[$index].$invalid"> {{::lang.values.requiredForm.phone}} </span> </div> </div> <div> <label for=registration-primary-number>{{::lang.values.preferredPhoneNumber}}</label> <div preferred-phone-number-select preferred-phone-number=account.primary_number_key input-id-attr=registration-primary-number></div> </div> </div> <div ng-if="::(config.collectPhoneNumbersDuringRegistration && config.phoneDisplayNonePreferred)"> <div ng-repeat="field in config.deliveryAddressPhoneNumberFields"> <input ng-if=":: field.hideInRegistrationFormDuplicateValueKey" ng-model=account[field.key] ng-value="account[field.key] = account[field.hideInRegistrationFormDuplicateValueKey]" type=hidden /> <label for=registration-telephone-{{field.key}} ng-class="{\'ng-required\' : config.phone.defaultRequired === field.key}">{{::field.label}}</label> <div ng-if=":: !field.hideInRegistrationForm" class=form-row> <input type=tel class=input name=phoneNumber-{{$index}} ng-keyup=setPreferredPhoneNumber(field.key) ng-required="field.key === config.phone.defaultRequired" ng-model=account[field.key] update-on-enter ng-model-options="{allowInvalid: true, updateOn: \'blur\'}" placeholder="{{field.label}} {{field.key === config.phone.defaultRequired ? \'*\' : \'\'}}" aria-label="{{field.label}} {{field.key === config.phone.defaultRequired ? lang.aria.required : \'\'}}" id=registration-telephone-{{field.key}} pattern={{::config.phoneNumberPattern}} maxlength={{::config.phoneNumberMaxLength}} /> <div class=input-help ng-if=::field.helpText>{{::field.helpText}}</div> <span class=required-field ng-if="field.key === config.phone.defaultRequired && registerForm[\'phoneNumber-\'+$index].$touched && registerForm[\'phoneNumber-\'+$index].$invalid"> {{::lang.values.requiredForm.phone}} </span> </div> </div> </div> <div ng-if=::config.collectAddressDuringRegistration> <div class=form-row> <div class=col-1-2> <label for=registration-first-name>{{ ::lang.values.firstName }}</label> <input type=text class=input name=firstName ng-required=config.requireNameDuringRegistration ng-model=account.delivery_address.first_name placeholder="{{ ::lang.values.firstName }} {{::config.requireNameDuringRegistration ? \'*\' : \'\'}}" id=registration-first-name aria-label="{{::lang.aria.firstName}} {{::config.requireNameDuringRegistration ? lang.aria.required : \'\'}}" maxlength={{::config.maxNameLength}} aria-describedby=registration-first-name-error /> <span id=registration-first-name-error class=required-field ng-if="config.requireNameDuringRegistration && registerForm.firstName.$touched && registerForm.firstName.$invalid">{{::lang.values.requiredForm.firstName}}</span> </div> <div class=col-1-2> <label for=registration-last-name>{{ ::lang.values.lastName }}</label> <input type=text class=input name=lastName ng-required=config.requireNameDuringRegistration ng-model=account.delivery_address.last_name placeholder="{{ ::lang.values.lastName }} {{::config.requireNameDuringRegistration ? \'*\' : \'\'}}" id=registration-last-name aria-label="{{::lang.aria.lastName}} {{::config.requireNameDuringRegistration ? lang.aria.required : \'\'}}" maxlength={{::config.maxNameLength}} aria-describedby=registration-last-name-error /> <span id=registration-last-name-error class=required-field ng-if="config.requireNameDuringRegistration && registerForm.lastName.$touched && registerForm.lastName.$invalid">{{::lang.values.requiredForm.lastName}}</span> </div> </div> <div class=form-row> <label for=registration-address1>{{::lang.values.addressLine1}}</label> <input type=text class=input name=address ng-model=account.delivery_address.address1 ng-required=::config.requireAddressDuringRegistration placeholder="{{::lang.values.addressLine1}} {{::config.requireAddressDuringRegistration ? \'*\' : \'\'}}" aria-label="{{::lang.aria.streetAddress}} {{::config.requireAddressDuringRegistration ? lang.aria.required : \'\'}}" id=registration-address1 maxlength={{::config.deliveryAddressFieldsMaxLength}} aria-describedby=registration-address1-error /> <span id=registration-address1-error class=required-field ng-if="config.requireAddressDuringRegistration && registerForm.address.$touched && registerForm.address.$invalid">{{::lang.values.requiredForm.address}}</span> </div> <div class=form-row> <label for=registration-address2>{{lang.values.addressLine2}}</label> <input type=text class=input ng-model=account.delivery_address.address2 placeholder={{lang.values.addressLine2}} aria-label={{::lang.aria.addressLine2}} id=registration-address2 maxlength={{::config.deliveryAddressFieldsMaxLength}} /> </div> <div class=form-row ng-if=::config.profileAddress.showAddress3Field> <label for=registration-address3>{{lang.values.addressLine3}}</label> <input type=text class=input ng-model=account.delivery_address.address3 placeholder={{lang.values.addressLine3}} aria-label={{::lang.aria.addressLine3}} id=registration-address3 maxlength={{::config.deliveryAddressFieldsMaxLength}} /> </div> <div class=form-row> <div class=col-1-2> <label for=registration-city>City</label> <input type=text class=input name=city ng-model=account.delivery_address.city ng-required=::config.requireAddressDuringRegistration placeholder="City {{::config.requireAddressDuringRegistration ? \'*\' : \'\'}}" aria-label="{{::lang.aria.city}} {{::config.requireAddressDuringRegistration ? lang.aria.required : \'\'}}" id=registration-city maxlength={{config.formFieldMaxLengths.city}} aria-describedby=registration-city-error /> <span id=registration-city-error class=required-field ng-if="config.requireAddressDuringRegistration && registerForm.city.$touched && registerForm.city.$invalid">{{::lang.values.requiredForm.city}}</span> </div> <div class=col-1-2> <label for=registration-postal-code>{{::lang.values.postalCode}}</label> <input type=text class=input name=postalCode ng-model=account.delivery_address.postal_code ng-required="::config.requireAddressDuringRegistration || config.requirePostalCodeDuringRegistration" placeholder="{{::lang.values.postalCode}} {{::config.requireAddressDuringRegistration || config.requirePostalCodeDuringRegistration ? \'*\' : \'\'}}" aria-label="{{::lang.aria.postalCode}} {{::config.requireAddressDuringRegistration || config.requirePostalCodeDuringRegistration ? lang.aria.required : \'\'}}" pattern={{::config.postalCodePattern}} id=registration-postal-code aria-describedby=registration-postal-code-error /> <span id=registration-postal-code-error class=required-field ng-if="(config.requireAddressDuringRegistration || config.requirePostalCodeDuringRegistration) && registerForm.postalCode.$touched && registerForm.postalCode.$invalid">{{::lang.values.requiredForm.postalCode}}</span> </div> </div> <div class=form-row> <label for=registration-state ng-class="{ \'ng-required\': config.requireAddressDuringRegistration || config.requireStateDuringRegistration }">{{::lang.values.selectAProvince}}</label> <div province-is-required="::config.requireAddressDuringRegistration || config.requireStateDuringRegistration" province-select province=account.delivery_address.province input-id-attr=registration-state></div> <div class=input-help ng-if="config.enableDefaultStoreFromAddress && lang.values.defaultStoreFromAddress"> {{::lang.values.defaultStoreFromAddress}} </div> <span id=registration-state-error class=required-field ng-if="config.requireAddressDuringRegistration && registerForm.province.$touched && registerForm.province.$invalid">{{::lang.values.requiredForm.province}}</span> </div> </div> <div include-if-exists="\'smsOptInContent.html\'" ng-model=account></div> <div class=form-row notification-settings-table show-group-titles=false at-registration=true on-save=saveNotifications></div> <div ng-repeat="field in ::config.customProfileFields" ng-if=::field.showAtRegistration class=form-row> <div ng-switch on=::field.type ng-class="[(field.icon || \'\'), {\'icon-left\': field.icon}]"> <input ng-switch-when=password type=password class=input id=registration-custom-profile-{{::field.key}} ng-model=account.ext_data[field.key] ng-required=::field.required placeholder={{::field.label}} pattern="{{::field.pattern || \'.*\'}}" maxlength="{{::field.maxLength || null}}"/> <input ng-switch-when=text type=text class=input id=registration-custom-profile-{{::field.key}} ng-model=account.ext_data[field.key] ng-required=::field.required placeholder={{::field.label}} pattern="{{::field.pattern || \'.*\'}}" maxlength="{{::field.maxLength || null}}"/> <input ng-switch-default type=text class=input id=registration-custom-profile-{{::field.key}} ng-model=account.ext_data[field.key] ng-required=::field.required placeholder={{::field.label}} pattern="{{::field.pattern || \'.*\'}}" maxlength="{{::field.maxLength || null}}"/> </div> <div class=input-help ng-if=::field.helpText>{{::field.helpText}}</div> </div> <div class=form-row ng-if="config.subscriptions.enabled && subscriptionCode"> <input type=text class=input ng-model=account.enterprise_subscription_code placeholder={{::lang.values.subscriptionRegisterCode}} aria-label={{::lang.aria.subscriptionRegisterCode}} id=registration-subscription /> </div> <div ng-if=::config.collectTermsAcceptanceDuringRegistration class=form-row> <input id=registration-terms-acceptance class=checkbox type=checkbox required ng-model=account.accept_terms /> <label for=registration-terms-acceptance><span ng-bind-html=lang.values.termsAndConditionsAcceptance></span></label> </div> <div include-if-exists="\'registerFormExtraContent.html\'"></div> <recaptcha-checkbox ng-if=::recaptcha.enabled class=recaptcha-container action=recaptcha.action on-success=onRecaptchaSuccess on-expired=onRecaptchaExpired /> <button type=submit ng-disabled=registering id=registration-submit class="button mobile-bottom" ng-class="{\'loading\': registering, \'loyalty-onboarding-call-to-action\': loyaltyOnboardingStep}"> <div ng-if="formContext === \'mainRegister\'" class=label> {{::lang.values.createNewAccount}} </div> <div ng-if="formContext === \'loyaltyRegister\'" class=label>{{::lang.values.signUp}}</div> </button> <div ng-if=error class="message error reveal form-row" scroll-into-view scroll-container=.modal-content compile=error></div> <div class=terms-and-conditions> <span ng-bind-html=::config.loyaltyOnboarding.form.termsAndConditions></span> </div> </form> '},"746bc875d74519e22889":function(e,i,r){"use strict";r.r(i);var a=r("96100616be21446d392a"),t=r.n(a),n=r("3dde4251a4e36fb3d2d7"),o=r.n(n),s=r("46f8f4ccfe1b73ca4d0c"),l=r.n(s),d=r("1b561621078ace81c35a"),c=r("fc9c4e3a879f16727654"),g=r("c808d8f3b62a083fb08b"),u=r("3efcc385654630d2d2e8"),p=r.n(u);i.default=l.a.module("RegisterFormDirectiveModule",[]).directive("registerForm",(function(){return{replace:!0,scope:{socialSignOnData:"=?",subscriptionCode:"=?",onRegister:"&?"},template:p(),controller:["$attrs","$q","$rootScope","$sce","$scope","analytics","anonymousIdService","auth","cartService","config","express","lang","recaptchaService","storesService","userAnalytics","utilService","values",function(e,i,r,a,n,s,u,p,f,m,y,v,h,b,x,q,R){var w,_,N,F,D,C;if(n.formContext=e.context,n.config=m,n.lang=v,n.invalidFocusFn={},n.trigger=e.trigger,n.recaptcha={enabled:h.isEnabled(),token:null,action:c.a.REGISTER},n.account={email:null,password:null,loyalty_cards:[{card_number:null}],delivery_address:{},enterprise_subscription_code:n.subscriptionCode||""},m.showRegistrationCardHelp&&(n.helpSrcContent=a.trustAsHtml(`<img src="${q.loadAssetImage("images/card-help.jpg")}" aria-labelledby="loyalty-input-help" alt="${v.values.loyaltyCardNumberLocation}" title="${v.values.loyaltyCardNumberLocation}">`),n.tooltipExpanded=!1,n.toggleTooltip=function(){n.tooltipExpanded=!n.tooltipExpanded}),n.config.collectAddressDuringRegistration&&n.config.enableDefaultStoreFromAddress)if(p.getContext().intent===d.h.PICKUP)n.account.delivery_address.city=null===(w=p.user.store)||void 0===w||null===(_=w.address)||void 0===_?void 0:_.city,n.account.delivery_address.province=null===(N=p.user.store)||void 0===N||null===(F=N.address)||void 0===F?void 0:F.province,n.account.delivery_address.postal_code=null===(D=p.user.store)||void 0===D||null===(C=D.address)||void 0===C?void 0:C.postal_code;else if(p.getContext().intent===d.h.DELIVERY){var k,L,A,$;const e=R.states.filter(e=>{var i;return(null===(i=p.user.context)||void 0===i?void 0:i.province)===e.name}),i=e.length?e[0].value:"";n.account.delivery_address.address1=null===(k=p.user.context)||void 0===k?void 0:k.street_address,n.account.delivery_address.city=null===(L=p.user.context)||void 0===L?void 0:L.city,n.account.delivery_address.province=(null===(A=p.user.context)||void 0===A?void 0:A.province_short)||i,n.account.delivery_address.postal_code=null===($=p.user.context)||void 0===$?void 0:$.deliveryPostalCode}if(m.requirePrimaryCardInitDuringRegistration&&(n.account.loyalty_cards[0].primary_card=!0),m.hasLoyalty&&!m.disableLoyaltyOnRegistrationPage&&(n.shouldDisplayLoyalty=!0,m.hasUnataIssuedLoyaltyIds&&"loyaltyRegister"===n.formContext?(n.shouldDisplayLoyaltyToggleLink=!0,n.showLoyaltyIdField=!1):n.showLoyaltyIdField=!0,n.toggleLoyalty=function(){n.showLoyaltyIdField=!n.showLoyaltyIdField}),n.socialSignOnData&&(n.account.email=n.socialSignOnData.social_email,n.account.social_accounts=o()(n.socialSignOnData.user.social_accounts,e=>(e.status=!0,e)),n.socialSignOnData.user_reg_info)){const{first_name:e="",last_name:i="",phone_number:r=""}=n.socialSignOnData.user_reg_info;m.collectAddressDuringRegistration?(n.account.delivery_address.first_name=e,n.account.delivery_address.last_name=i):(n.account.first_name=e,n.account.last_name=i);const a=n.account.primary_number_key||m.phone.defaultRequired;n.account[a]=r}n.onRecaptchaSuccess=e=>{n.$apply(()=>{n.recaptcha.token=e})},n.onRecaptchaExpired=()=>{n.$apply(()=>{n.recaptcha.token=null})},n.register=async()=>{var e;if(delete n.error,n.registerForm.$invalid)return void document.querySelectorAll(".ng-invalid:not(form)")[0].focus();if(n.account.password!==n.confirmPassword)return void(n.error='<span class="icon-error" aria-hidden="true"></span><a ng-click="invalidFocusFn.goToFocus(\'.form-password\')">Password</a> and <a ng-click="invalidFocusFn.goToFocus(\'.form-password-confirm\')">confirmation</a> do not match.');if(n.recaptcha.enabled&&!n.recaptcha.token)return void(n.error=n.lang.values.recaptchaError);const i=l.a.copy(n.account);var a;(i.loyalty_cards[0].card_number||(i.loyalty_cards=[]),n.recaptcha.enabled)&&(i.recaptcha={token:n.recaptcha.token,siteKey:null===(a=m.googleRecaptcha)||void 0===a?void 0:a.siteKey});n.registering=!0;const t=n.config.enableDefaultStoreFromAddress&&!(null!==(e=p.getContext())&&void 0!==e&&e.storeNumber||f.countItems()>0)?await async function({address1:e,city:i,province:r,postal_code:a},t){try{const n=e&&i&&r?`${e}, ${i}, ${r}, ${a}`:a,o=await b.getAddressCoordinates(n),s={};t!==g.c.INSTORE_LIST&&(s.show_ecommerce=!0),t===g.c.CATERING?s.show_catering=!0:t===g.c.PICKUP&&(s.show_pickup=!0),o&&(s.lat=o.latitude,s.long=o.longitude);const l=await b.fetch(s);return l.length>0?l[0].id:null}catch(e){return null}}(i.delivery_address,p.getContext().intent):null;return t&&(i.store_id=t),p.updateProfile(i).then(()=>n.saveNotifications()).then(u.updateBackendId).then(()=>t?p.setContext({storeNumber:t}).then(p.sendUserUpdatedStore(p.user)).then(p.sendAvailableStoreContexts(p.user)).then(f.fetch):null).then(()=>{if("loyaltyOnboarding"===n.trigger?x.logUserRegistrationAttempt({success:!0,loyalty_onboarding:!0,improved_registration:n.config.enableImprovedRegistration}):x.logUserRegistrationAttempt({success:!0,improved_registration:n.config.enableImprovedRegistration}),r.$broadcast("registered"),n.registering=!1,s.logFBUserRegistered(),m.icExpress.enabled&&y.getCurrentSubscription(),i.enterprise_subscription_code&&s.logSegmentEvent("subscription.redeem_gift_code",{success:!0,source:"registration"}),n.onRegister)return n.onRegister()}).catch(e=>{"loyaltyOnboarding"===n.trigger?x.logUserRegistrationAttempt({success:!1,loyalty_onboarding:!0,improved_registration:n.config.enableImprovedRegistration}):x.logUserRegistrationAttempt({success:!1,improved_registration:n.config.enableImprovedRegistration}),n.error=e.data?e.data.message:e.message,n.registering=!1,n.recaptcha.token=null,h.resetLastCheckbox()})},n.setPreferredPhoneNumber=function(e){n.account.primary_number_key||(n.account.primary_number_key=e)};const P=t()(m.deliveryAddressPhoneNumberFields,"setPreferredOnInit");if(P>-1){const e=m.deliveryAddressPhoneNumberFields[P];n.setPreferredPhoneNumber(e.key)}}]}}))}}]);