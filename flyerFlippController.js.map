{"version":3,"sources":["webpack://UnataWidgets/./app/angular/constants/flyer.js","webpack://UnataWidgets/./app/angular/components/shop/controllers/flyerFlippController.js","webpack://UnataWidgets/./app/services/flyer/api.ts","webpack://UnataWidgets/./app/utils/isLoggedIn.ts"],"names":["FLIPP","COLLECTION","PRODUCT","angular","module","controller","$scope","auth","collectionModal","config","contextSelectorButtonService","errorModalService","productDetailsModal","utilService","showProductNotFoundError","open","lang","flyerFlippProductNotFoundErrorBody","flyerFlippBackToFlyer","flyerFlippProductNotFoundErrorTitle","flyerFlipp","enabled","error","triageSelectorButtonClicks","init","productDetails","item","custom1","activityId","validFrom","validTo","noticeAlert","request","getContentByActivityId","then","response","id","polytype","dayjs","isBetween","type","isAfter","params","format","EXPIRATION_DATE_FORMAT","catch","loadScript","storeCode","user","store","ext_id","flippContainer","document","querySelector","Flipp","Storefront","accessToken","merchantId","merchantNameIdentifier","itemDetailsDelegate","itemDetailsTriggered","renderStorefront","authService","getState","status","showContextSelector","trackedStore","sessionStorage","getItem","setItem"],"mappings":"sLAAO,MAAMA,EACF,gDADEA,EAEQ,CACjBC,WAAY,aACZC,QAAS,W,qICIEC,cACZC,OAAO,sCAAuC,IAC9CC,WACC,uBAHW,mIAIX,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAMA,SAASC,IACPH,EAAkBI,KAChBN,EAAOO,KAAKC,mCACZR,EAAOO,KAAKE,sBACZ,KACAT,EAAOO,KAAKG,qCATXV,EAAOW,WAAWC,UAavBf,EAAOgB,OAAQ,EACfhB,EAAOM,oBAAsBA,EAC7BN,EAAOE,gBAAkBA,EACzBF,EAAOiB,2BAA6Bb,EAA6Ba,2BACjEjB,EAAOkB,KAAO,WACZ,SAASC,EAAeC,GACtB,MAAQC,QAASC,EAAX,UAAuBC,EAAvB,QAAkCC,GAAYJ,EAGpD,GAAIE,EAAY,CACd,IAAIG,EAAc,KC1CSH,IAC9BI,YAAkB,iCAAgCJ,KD2C/CK,CAAuBL,GACpBM,KAAKC,IACJ,MAAM,GAAEC,EAAF,SAAMC,GAAaF,EAEpBG,MAAQC,UAAUV,EAAWC,KAChCC,EAAc,CACZS,KAAMF,MAAQG,QAAQX,GAAW,gBAAkB,oBACnDY,OAAQ,CACNb,UAAWS,IAAMT,GAAWc,OAAOC,KACnCd,QAASQ,IAAMR,GAASa,OAAOC,QAKjCP,IAAarC,EAAwBE,QACvCU,EAAoBG,KAAKqB,EAAI,GAAI,GAAIL,GAC5BM,IAAarC,EAAwBC,YAC9CO,EAAgBO,KAAM,eAAcqB,IAAML,KAG7Cc,MAAM,KACL/B,WAGJA,IAEF,OAAO,EAGTD,EACGiC,WAAW9C,GACXkC,KAAK,KAAM,QACV,MAAMa,EAAS,UAAGxC,EAAKyC,YAAR,iBAAG,EAAWC,aAAd,aAAG,EAAkBC,OAE9BC,EAAiBC,SAASC,cAAc,oBAa9C,GAXmB,IAAIC,MAAMC,WAAW,CACtCC,YAAa/C,EAAOW,WAAWoC,YAC/BC,WAAYhD,EAAOW,WAAWqC,WAC9BV,YACAW,uBAAwBjD,EAAOW,WAAWsC,uBAC1CC,oBAAqB,CACnBC,qBAAsBnC,KAGfoC,iBAAiBV,GEzFe,WAA9C,UAAAW,IAAYb,MAAMc,WAAWf,YAA7B,eAAmCgB,QF2Fb,CACjB,IAAIC,GAAsB,EAE1B,MAAMC,EAAeC,eAAeC,QAAQ,mBAEvCF,EAEMA,IAAiBnB,IAC1BoB,eAAeE,QAAQ,kBAAmBtB,GAE1CkB,GAAsB,GAJtBE,eAAeE,QAAQ,kBAAmBtB,GAOxCkB,GACFvD,EAA6Ba,2BAA2B,QE1GzD,IAAsB,IF8G1BsB,MAAM,KACLvC,EAAOgB,OAAQ","file":"flyerFlippController.js","sourcesContent":["export const FLIPP = {\n  JS_FILE: 'https://aq.flippenterprise.net/2419/iframe.js',\n  CONTENT_POLYTYPES: {\n    COLLECTION: 'collection',\n    PRODUCT: 'product',\n  },\n}\n","import angular from 'angular'\nimport { FLIPP } from '@app/angular/constants/flyer'\nimport { getContentByActivityId } from '@app/services/flyer/api'\nimport isLoggedIn from '@app/utils/isLoggedIn'\nimport { EXPIRATION_DATE_FORMAT } from '@app/angular/constants/express'\n\nimport dayjs from 'dayjs'\n\nexport default angular\n  .module('FlyerFlippControllerComponentModule', [])\n  .controller(\n    'FlyerFlippController',\n    function FlyerFlippController(\n      $scope,\n      auth,\n      collectionModal,\n      config,\n      contextSelectorButtonService,\n      errorModalService,\n      productDetailsModal,\n      utilService\n    ) {\n      if (!config.flyerFlipp.enabled) {\n        return\n      }\n\n      function showProductNotFoundError() {\n        errorModalService.open(\n          config.lang.flyerFlippProductNotFoundErrorBody,\n          config.lang.flyerFlippBackToFlyer,\n          null,\n          config.lang.flyerFlippProductNotFoundErrorTitle\n        )\n      }\n\n      $scope.error = false\n      $scope.productDetailsModal = productDetailsModal\n      $scope.collectionModal = collectionModal\n      $scope.triageSelectorButtonClicks = contextSelectorButtonService.triageSelectorButtonClicks\n      $scope.init = function () {\n        function productDetails(item) {\n          const { custom1: activityId, validFrom, validTo } = item\n\n          // empty string returs an array with an empty string\n          if (activityId) {\n            let noticeAlert = null\n\n            getContentByActivityId(activityId)\n              .then(response => {\n                const { id, polytype } = response\n\n                if (!dayjs().isBetween(validFrom, validTo)) {\n                  noticeAlert = {\n                    type: dayjs().isAfter(validTo) ? 'OFFER_EXPIRED' : 'OFFER_UNAVAILABLE',\n                    params: {\n                      validFrom: dayjs(validFrom).format(EXPIRATION_DATE_FORMAT),\n                      validTo: dayjs(validTo).format(EXPIRATION_DATE_FORMAT),\n                    },\n                  }\n                }\n\n                if (polytype === FLIPP.CONTENT_POLYTYPES.PRODUCT) {\n                  productDetailsModal.open(id, {}, {}, noticeAlert)\n                } else if (polytype === FLIPP.CONTENT_POLYTYPES.COLLECTION) {\n                  collectionModal.open(`collections/${id}`, noticeAlert)\n                }\n              })\n              .catch(() => {\n                showProductNotFoundError()\n              })\n          } else {\n            showProductNotFoundError()\n          }\n          return true\n        }\n\n        utilService\n          .loadScript(FLIPP.JS_FILE)\n          .then(() => {\n            const storeCode = auth.user?.store?.ext_id\n\n            const flippContainer = document.querySelector('#flipp-container')\n            // eslint-disable-next-line no-undef\n            const storefront = new Flipp.Storefront({\n              accessToken: config.flyerFlipp.accessToken,\n              merchantId: config.flyerFlipp.merchantId,\n              storeCode,\n              merchantNameIdentifier: config.flyerFlipp.merchantNameIdentifier,\n              itemDetailsDelegate: {\n                itemDetailsTriggered: productDetails,\n              },\n            })\n            storefront.renderStorefront(flippContainer)\n\n            if (!isLoggedIn()) {\n              let showContextSelector = true\n              // Track the store the user uses to visit flyer\n              const trackedStore = sessionStorage.getItem('flyerFlippStore')\n\n              if (!trackedStore) {\n                sessionStorage.setItem('flyerFlippStore', storeCode)\n              } else if (trackedStore !== storeCode) {\n                sessionStorage.setItem('flyerFlippStore', storeCode)\n                // don't show context selector if we detect a store change\n                showContextSelector = false\n              }\n\n              if (showContextSelector) {\n                contextSelectorButtonService.triageSelectorButtonClicks('icon')\n              }\n            }\n          })\n          .catch(() => {\n            $scope.error = true\n          })\n      }\n    }\n  )\n","import request from '@app/utils/request'\nimport { Content } from '@app/types/flyer'\n\nexport const getContentByActivityId = (activityId: string) => {\n  return request<Content>(`/flyer/content_by_activity_id/${activityId}`)\n}\n","import { auth as authService } from '@instacart/enterprise-services'\n\nexport default function isLoggedIn() {\n  return authService.store.getState().user?.status !== 'trial'\n}\n"],"sourceRoot":""}