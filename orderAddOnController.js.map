{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/orderAddOn/orderAddOnController.js"],"names":["angular","module","controller","$rootScope","$scope","$state","$stateParams","Restangular","analytics","config","lang","mobileService","utilService","vm","Object","assign","this","current","data","vmExtras","order","isLoading","mobile","productsPerPage","page","search","results","term","search_term","loading","getResults","length","upsellResults","setSearchingTo","newValue","searching","focusSearchBar","inListOrCartPage","hideSearch","showSearchFromClick","focusSearch","timeslotLabelFn","timeslotUtils","getMainLabel","verboseLevel","format","apiDateFormat","$watch","newPage","oldPage","scrollToTop","go","params","offset","limit","sort","store_id","store","id","delivery_postal_code","delivery_address","postal_code","fulfillment_type","order_id","all","getList","then","logEvent","loadResults","run","$templateCache","put","require"],"mappings":"sIAAA,4EAIeA,cACZC,OAAO,6BAA8B,IACrCC,WACC,uBAHW,uHAIX,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACA,MAIA,MAAMC,EAAKC,OAAOC,OAAOC,MAAM,UAAAX,EAAOY,QAAQC,YAAf,eAAqBC,WAAY,IAChEN,EAAGO,MAAQP,EAAGO,OAASd,EAAac,MAEpCP,EAAGQ,UAAY,8BAAMhB,EAAOY,QAAQC,YAArB,iBAAM,EAAqBC,gBAA3B,aAAM,EAA+BE,WACpDR,EAAGJ,OAASA,EACZI,EAAGH,KAAOA,EACVG,EAAGS,OAASX,EACZE,EAAGU,gBAAkB,GAErBnB,EAAOoB,KAAO,CAAEP,QAASX,EAAakB,MAAQ,GAE9CX,EAAGY,OAAS,CACVC,QAAS,GACTC,KAAMrB,EAAasB,aAAe,GAClCC,SAAS,GAIXhB,EAAGiB,WAAa,KAAM,MASC,IARrB,OAAIjB,EAAGQ,aAAeR,EAAGY,OAAOI,QACvB,IAGL,UAAAhB,EAAGY,OAAOC,eAAV,eAAmBK,QAAS,EACvBlB,EAAGY,OAAOC,QAGdb,EAAGY,OAAOE,UAAf,GACS,UAAAtB,EAAOY,QAAQC,YAAf,mBAAqBC,gBAArB,eAA+Ba,gBAAiB,IAI3DnB,EAAGoB,eAAiBC,IAClBrB,EAAGsB,UAAYD,EAEVrB,EAAGsB,YACNtB,EAAGuB,gBAAiB,EAChBvB,EAAGwB,mBACLxB,EAAGyB,YAAa,EAChBzB,EAAG0B,qBAAsB,KAK/B1B,EAAG2B,YAAc,WACf3B,EAAGuB,gBAAiB,EACpBvB,EAAGsB,WAAY,EACftB,EAAGyB,YAAa,EACZzB,EAAGwB,mBACLxB,EAAG0B,qBAAsB,IAI7B1B,EAAG4B,gBAAkB,IACnBC,QAAcC,aAAa9B,EAAGO,MAAO,CAAEwB,aAAc,EAAGC,OAAQhC,EAAGJ,OAAOqC,gBA8B5E1C,EAAO2C,OAAO,eAAgB,CAACC,EAASC,KAClCA,GAAWD,IAAYC,IACzBrC,EAAYsC,cACZ7C,EAAO8C,GAAG,IAAK,CAAE3B,KAAMwB,OA/BP,MAClBnC,EAAGY,OAAOI,SAAU,EAEpB,MAAMuB,EAAS,CACbxB,YAAatB,EAAasB,YAC1BJ,KAAM,KACN6B,OACEjD,EAAOoB,KAAKP,SAAWb,EAAOoB,KAAKP,SAC9Bb,EAAOoB,KAAKP,QAAU,GAAKJ,EAAGU,gBAC/B,EACN+B,MAAOzC,EAAGU,gBACVgC,KAAM,OAENC,SAAU3C,EAAGO,MAAMqC,MAAMC,GACzBC,qBAAsB9C,EAAGO,MAAMwC,iBAAiBC,YAChDC,iBAAkBjD,EAAGO,MAAM0C,iBAC3BC,SAAUlD,EAAGO,MAAMsC,IAGdnD,EAAYyD,IAAI,kBACpBC,QAAQb,GACRc,KAAKxC,IACJb,EAAGY,OAAOI,SAAU,EACpBhB,EAAGY,OAAOC,QAAUA,EACpBlB,EAAU2D,SAAS,iBAAkB,SAAUtD,EAAGc,KAAMD,EAAQK,WAWtEqC,MAGHC,IAjHY,kBAiHRC,IACHA,EAAeC,IAAI,kBAAmBC,EAAQ","file":"orderAddOnController.js","sourcesContent":["import angular from 'angular'\n\nimport { utils as timeslotUtils } from '@instacart/enterprise-timeslots'\n\nexport default angular\n  .module('OrderAddOnControllerModule', [])\n  .controller(\n    'OrderAddOnController',\n    function (\n      $rootScope,\n      $scope,\n      $state,\n      $stateParams,\n      Restangular,\n      analytics,\n      config,\n      lang,\n      mobileService,\n      utilService\n    ) {\n      /**\n       * $state.current.data.vmExtras includes: order, searchCategories\n       */\n      const vm = Object.assign(this, $state.current.data?.vmExtras || {}) // Include data from router\n      vm.order = vm.order || $stateParams.order\n\n      vm.isLoading = () => $state.current.data?.vmExtras?.isLoading\n      vm.config = config\n      vm.lang = lang\n      vm.mobile = mobileService\n      vm.productsPerPage = 12\n\n      $scope.page = { current: $stateParams.page || 1 }\n\n      vm.search = {\n        results: [],\n        term: $stateParams.search_term || '',\n        loading: false,\n      }\n\n      // Get most current results at all times\n      vm.getResults = () => {\n        if (vm.isLoading() || vm.search.loading) {\n          return []\n        }\n\n        if (vm.search.results?.length > 0) {\n          return vm.search.results\n        }\n\n        if (!vm.search.term) {\n          return $state.current.data?.vmExtras?.upsellResults || []\n        }\n      }\n\n      vm.setSearchingTo = newValue => {\n        vm.searching = newValue\n\n        if (!vm.searching) {\n          vm.focusSearchBar = false\n          if (vm.inListOrCartPage) {\n            vm.hideSearch = true\n            vm.showSearchFromClick = false\n          }\n        }\n      }\n\n      vm.focusSearch = function () {\n        vm.focusSearchBar = true\n        vm.searching = true\n        vm.hideSearch = false\n        if (vm.inListOrCartPage) {\n          vm.showSearchFromClick = true\n        }\n      }\n\n      vm.timeslotLabelFn = () =>\n        timeslotUtils.getMainLabel(vm.order, { verboseLevel: 1, format: vm.config.apiDateFormat })\n\n      const loadResults = () => {\n        vm.search.loading = true\n\n        const params = {\n          search_term: $stateParams.search_term,\n          page: null,\n          offset:\n            $scope.page.current && $scope.page.current\n              ? ($scope.page.current - 1) * vm.productsPerPage\n              : 0,\n          limit: vm.productsPerPage,\n          sort: 'rank',\n\n          store_id: vm.order.store.id,\n          delivery_postal_code: vm.order.delivery_address.postal_code,\n          fulfillment_type: vm.order.fulfillment_type,\n          order_id: vm.order.id,\n        }\n\n        return Restangular.all('store_products')\n          .getList(params)\n          .then(results => {\n            vm.search.loading = false\n            vm.search.results = results\n            analytics.logEvent('search results', 'search', vm.term, results.length)\n          })\n      }\n\n      $scope.$watch('page.current', (newPage, oldPage) => {\n        if (oldPage && newPage !== oldPage) {\n          utilService.scrollToTop()\n          $state.go('.', { page: newPage })\n        }\n      })\n\n      loadResults()\n    }\n  )\n  .run($templateCache => {\n    $templateCache.put('orderAddOn.html', require('./orderAddOn.html'))\n  })\n"],"sourceRoot":""}