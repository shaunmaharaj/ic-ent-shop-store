{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/account/profile/disconnectSocialAccountModal.html","webpack://UnataWidgets/./app/angular/components/account/profile/disconnectSocialAccountModal.controller.js","webpack://UnataWidgets/./app/angular/components/account/profile/profileController.react.js"],"names":["module","exports","angular","controller","$uibModalInstance","auth","disconnectSocialCallback","lang","mobileService","socialAccount","this","isMobile","disconnectSocialAccount","user","copy","socialAccountToDisconnect","social_accounts","provider","status","updateProfile","then","success","catch","error","close","cancel","dismiss","DisconnectSocialAccountModalControllerModule","name","$scope","$uibModal","analytics","localStorageService","registrationService","socialSignOnService","postImportMessage","deprecatedGet","postImportError","message","deprecatedRemove","response","promptLogin","values","loginToContinue","data","openDisconnectSocialAccountModal","open","template","disconnectSocialAccountModalTemplate","controllerAs","keyboard","backdrop","resolve","importIcAccount","deprecatedSet","logSegmentEvent","source","handleSocialSignOn","SSO_PROVIDERS","INSTACART_LINK"],"mappings":"uHAAAA,EAAOC,QAAU,k5B,wMCGFC,MACZF,OAAO,+CAAgD,IACvDG,WACC,yCAHW,8FAIX,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAC,KAAKC,SAAWH,EAAcG,SAC9BD,KAAKH,KAAOA,EAEZG,KAAKE,wBAA0B,KAC7B,MAAMC,EAAOX,IAAQY,KAAKT,EAAKQ,MAEzBE,EAA4B,IAAOF,EAAKG,gBAAiB,CAC7DC,SAAUR,EAAcQ,WAGtBF,IACFA,EAA0BG,QAAS,EAEnCb,EACGc,cAAcN,GACdO,KAAKd,EAAyBe,SAC9BC,MAAMhB,EAAyBiB,QAGpCnB,EAAkBoB,SAGpBd,KAAKe,OAASrB,EAAkBsB,WC/BvBxB,cACZF,OAAO,+BAAgC,CAAC2B,EAA6CC,OACrFzB,WACC,yBAHW,2GAIX,SACE0B,EACAC,EACAC,EACAxB,EACAyB,EACAC,EACAC,GAOA,MAAMC,EAAoBH,EAAoBI,cAAc,qBACtDC,EAAkBL,EAAoBI,cAAc,mBAEtDD,IACFN,EAAOS,QAAUH,EACjBH,EAAoBO,iBAAiB,sBAGnCF,IACFR,EAAON,MAAQc,EACfL,EAAoBO,iBAAiB,oBAGvC,MAAMjC,EAA2B,CAC/Be,QAAS,KACPQ,EAAOS,QAAU,sCAEnBf,MAAOiB,IACkB,QAAnBA,EAASjB,MACXU,EAAoBQ,YAClB,uBACA,GACA,GACA,GACAlC,EAAKmC,OAAOC,iBAGdd,EAAON,MAAQiB,EAASI,KAAOJ,EAASI,KAAKN,QAAUE,EAASF,UAKtET,EAAOgB,iCAAmCpC,IACxCqB,EAAUgB,KAAK,CACbC,SAAUC,IACV7C,WAAY,yCACZ8C,aAAc,QACdC,UAAU,EACVC,SAAU,SACVC,QAAS,CACP9C,2BACAG,oBAKNoB,EAAOwB,gBAAkB,KACvBrB,EAAoBsB,cAAc,yBAAyB,GAC3DvB,EAAUwB,gBAAgB,iCAAkC,CAC1DC,OAAQ,YAEVtB,EAAoBuB,mBAAmBC,IAAcC","file":"profileReactController.js","sourcesContent":["module.exports = \"<div class=\\\"disconnect-social-account-modal modal-container\\\"> <div class=modal-header>{{:: $ctrl.lang.values.areYouSure}}</div> <div class=modal-content> <p class=disconnect-social-account-modal-confirm>{{:: $ctrl.lang.values.socialAccountDisconnectConfirmText}}</p> <p class=disconnect-social-account-modal-description>{{:: $ctrl.lang.values.socialAccountDisconnectDescriptionText}}</p> <div ng-class=\\\"::{ 'buttons-box': !$ctrl.isMobile, 'buttons': $ctrl.isMobile }\\\"> <button ng-click=$ctrl.cancel() id=disconnect-social-account-modal-cancel class=button ng-class=\\\"::{ 'hollow': !$ctrl.isMobile, 'mobile-bottom dark': $ctrl.isMobile }\\\"> {{:: $ctrl.lang.values.cancel}} </button> <button id=disconnect-social-account-modal-confirm ng-click=$ctrl.disconnectSocialAccount() class=button ng-class=\\\"::{ 'mobile-bottom': $ctrl.isMobile }\\\"> {{:: $ctrl.lang.values.disconnect}} </button> </div> </div> </div> \";","import _ from 'lodash'\nimport angular from 'angular'\n\nexport default angular\n  .module('DisconnectSocialAccountModalControllerModule', [])\n  .controller(\n    'DisconnectSocialAccountModalController',\n    function (\n      $uibModalInstance,\n      auth,\n      disconnectSocialCallback,\n      lang,\n      mobileService,\n      socialAccount\n    ) {\n      this.isMobile = mobileService.isMobile\n      this.lang = lang\n\n      this.disconnectSocialAccount = () => {\n        const user = angular.copy(auth.user)\n\n        const socialAccountToDisconnect = _.find(user.social_accounts, {\n          provider: socialAccount.provider,\n        })\n\n        if (socialAccountToDisconnect) {\n          socialAccountToDisconnect.status = false\n\n          auth\n            .updateProfile(user)\n            .then(disconnectSocialCallback.success)\n            .catch(disconnectSocialCallback.error)\n        }\n\n        $uibModalInstance.close()\n      }\n\n      this.cancel = $uibModalInstance.dismiss\n    }\n  )\n","import angular from 'angular'\n\nimport { SSO_PROVIDERS } from '@app/angular/constants/ssoProviders'\nimport disconnectSocialAccountModalTemplate from './disconnectSocialAccountModal.html'\nimport DisconnectSocialAccountModalControllerModule from './disconnectSocialAccountModal.controller'\n\nexport default angular\n  .module('ProfileReactControllerModule', [DisconnectSocialAccountModalControllerModule.name])\n  .controller(\n    'ProfileReactController',\n    function (\n      $scope,\n      $uibModal,\n      analytics,\n      lang,\n      localStorageService,\n      registrationService,\n      socialSignOnService\n    ) {\n      /**\n       * When importing an IC account from this page, instead of using\n       * post-import success/error modals after returning, use the message/error\n       * component on the page.\n       */\n      const postImportMessage = localStorageService.deprecatedGet('postImportMessage')\n      const postImportError = localStorageService.deprecatedGet('postImportError')\n\n      if (postImportMessage) {\n        $scope.message = postImportMessage\n        localStorageService.deprecatedRemove('postImportMessage')\n      }\n\n      if (postImportError) {\n        $scope.error = postImportError\n        localStorageService.deprecatedRemove('postImportError')\n      }\n\n      const disconnectSocialCallback = {\n        success: () => {\n          $scope.message = 'Account disconnected successfully!'\n        },\n        error: response => {\n          if (response.error === 40304) {\n            registrationService.promptLogin(\n              'main.account.profile',\n              '',\n              '',\n              '',\n              lang.values.loginToContinue\n            )\n          } else {\n            $scope.error = response.data ? response.data.message : response.message\n          }\n        },\n      }\n\n      $scope.openDisconnectSocialAccountModal = socialAccount => {\n        $uibModal.open({\n          template: disconnectSocialAccountModalTemplate,\n          controller: 'DisconnectSocialAccountModalController',\n          controllerAs: '$ctrl',\n          keyboard: false,\n          backdrop: 'static',\n          resolve: {\n            disconnectSocialCallback,\n            socialAccount,\n          },\n        })\n      }\n\n      $scope.importIcAccount = () => {\n        localStorageService.deprecatedSet('ignorePostImportModal', true)\n        analytics.logSegmentEvent('user.trigger_ic_account_import', {\n          source: 'profile',\n        })\n        socialSignOnService.handleSocialSignOn(SSO_PROVIDERS.INSTACART_LINK)\n      }\n    }\n  )\n"],"sourceRoot":""}