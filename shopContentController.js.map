{"version":3,"sources":["webpack://UnataWidgets/./node_modules/lodash/_safeGet.js","webpack://UnataWidgets/./node_modules/lodash/_baseMerge.js","webpack://UnataWidgets/./node_modules/lodash/_assignMergeValue.js","webpack://UnataWidgets/./node_modules/lodash/fp/isEqual.js","webpack://UnataWidgets/./node_modules/lodash/castArray.js","webpack://UnataWidgets/./app/angular/components/shop/controllers/shopContentController.js","webpack://UnataWidgets/./node_modules/lodash/toPlainObject.js","webpack://UnataWidgets/./node_modules/lodash/_baseMergeDeep.js","webpack://UnataWidgets/./node_modules/lodash/merge.js"],"names":["module","exports","object","key","Stack","assignMergeValue","baseFor","baseMergeDeep","isObject","keysIn","safeGet","baseMerge","source","srcIndex","customizer","stack","srcValue","newValue","undefined","baseAssignValue","eq","value","func","convert","placeholder","isArray","arguments","length","angular","controller","$rootScope","$scope","$state","$window","Restangular","analytics","auth","cartAnalytics","catalogCategoriesService","cellService","config","facetedFilterModalService","facetedSearchService","filterModalService","flyerCategoriesAndPdfsService","flyerPreviewService","imageURLService","lang","mobileService","placementsService","productsService","promoCodeService","src","tagsService","titleService","tree","utilService","state","showSort","current","sort","endpoint","subset","analyticScope","createNewAnalyticScope","$on","destroyAnalyticScope","useFacetedFilters","hideFilters","showPickupContextSwitch","showDeliveryContextSwitch","showCateringContextSwitch","location","data","section","addToCartSource","params","placementTypeForAnalytics","name","onFlyerHomepage","flyerData","getFlyerData","flyerPdfHrefs","pdfHrefs","pdfHref","previews","map","flyerPreviewData","index","previewToken","getPreviewToken","previewTimestampDate","getPreviewTimestampDate","analyticsFlyerLocation","toNameValue","onFilterModalClose","tags","brand_name","go","page","openFilterModal","open","content","hideSort","tagOptions","filterTags","brandOptions","brand_names","brand","defaultSort","user","status","defaultBrand","then","openFacetedFilterModal","sortOptions","option","showIn","brandNames","facetOptions","facetedTags","facets","shop","searchTerm","term","siblings","nonNiltreeParams","currentIndex","item","prevCategory","nextCategory","filterDynamicTags","filterBarTags","breadcrumbs","parents","parent","push","label","recipesHomeState","currentCategoryName","isMobile","sibling","stateIs","children","active","hideMobileHeaderAnimation","setTitle","department","handleImagePlacementClick","placement","formatImagePlacementForAnalytics","$watch","newPage","oldPage","items","loadItems","departmentAnalytics","department_name","department_type","level","sourceItems","copy","concat","offset","productsPerPage","limit","authMode","all","getList","dynamic","noItemsFoundMsg","values","noItemsInDynamicCollection","document","getElementById","toggledFilterId","focus","colSize","getMaxCols","item_count","placements","productPlacementsFromProducts","productAnalytics","getProductListAnalytics","logPlacementImpression","filter","p","item_type","elevaate","enabled","tag","window","elevaatePromotions","forEach","sponsoredBy","agreementId","metadata","pageImpressionId","adProviderMetadata","dssId","productId","productIdInFeed","productPrice","price","currencyCode","elevaateCurrencyCode","pageProductId","id","insertPlacementsInProducts","available_context_types","includes","SHOPPING_MODES","PICKUP","DELIVERY","CATERING","deptName","logCriteoStoreProducts","result","String","ext_id","keyword","page_number","filterParams","categoryFromId","toString","logSegmentEvent","products_value","products_results_count","products_results","products_results_page","callback","offers","offerPageMeta","count","offerOrigin","catch","finally","route","event","toState","deleteJsonLd","appendItemListStructuredData","getBeacon","onLoadBeacon","reGrid","newColsAmount","addEventListener","removeEventListener","currentContext","context","intent","template","noItemsInCategory","category","shoppingSelector","title","noItemsFound","loginToViewOffers","promoCodeButton","addAPromoCode","onclick","isUserLoggedIn","checkForButtons","enablePromoCodes","coupons","pageHeaderButton","getTagName","flexGrid","copyObject","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArrayLikeObject","isBuffer","isFunction","isPlainObject","isTypedArray","toPlainObject","mergeFunc","objValue","stacked","get","isCommon","isArr","isBuff","isTyped","set","merge","createAssigner"],"mappings":"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","file":"shopContentController.js","sourcesContent":["/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var convert = require('./convert'),\n    func = convert('isEqual', require('../isEqual'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","import _ from 'lodash'\nimport fp from 'lodash/fp'\nimport angular from 'angular'\nimport { SHOPPING_MODES } from '@app/angular/constants/context'\nimport {\n  productPlacementsFromProducts,\n  formatImagePlacementForAnalytics,\n  insertPlacementsInProducts,\n} from '@app/utils/placements'\nimport { appendItemListStructuredData } from '@app/utils/appendStructuredData'\nimport { deleteJsonLd } from '@app/utils/jsonLd'\n\nexport default angular\n  .module('ShopContentControllerComponentModule', [])\n\n  .controller(\n    'ShopContentController',\n    // eslint-disable-next-line complexity\n    function (\n      $rootScope,\n      $scope,\n      $state,\n      $window,\n      Restangular,\n      analytics,\n      auth,\n      cartAnalytics,\n      catalogCategoriesService,\n      cellService,\n      config,\n      facetedFilterModalService,\n      facetedSearchService,\n      filterModalService,\n      flyerCategoriesAndPdfsService,\n      flyerPreviewService,\n      imageURLService,\n      lang,\n      mobileService,\n      placementsService,\n      productsService,\n      promoCodeService,\n      src,\n      tagsService,\n      titleService,\n      tree,\n      utilService\n    ) {\n      $scope.config = config\n      $scope.state = $state\n      $scope.auth = auth\n      $scope.imageURLService = imageURLService\n      $scope.src = src\n      $scope.tree = tree\n      $scope.tagsService = tagsService\n      $scope.utilService = utilService\n      $scope.showSort = $scope.tree.current.sort && $scope.src.endpoint\n      $scope.subset = src.endpoint === 'flyer' ? 'flyer' : 'shop' // used to decide what sort methods to display\n      $scope.analyticScope = cartAnalytics.createNewAnalyticScope()\n      $scope.$on('$destroy', () => {\n        cartAnalytics.destroyAnalyticScope($scope.analyticScope)\n      })\n      $scope.promoCodeService = promoCodeService\n\n      // Set flags to show regular or faceted filters or none\n      $scope.useFacetedFilters = $scope.tagsService.useFacetedFilters()\n      $scope.hideFilters = $scope.tagsService.hideFilters()\n\n      // Default values for showing context switch buttons when no products are found in the current context.\n      $scope.showPickupContextSwitch = false\n      $scope.showDeliveryContextSwitch = false\n      $scope.showCateringContextSwitch = false\n\n      $scope.location = $state.current.data.section\n      $scope.addToCartSource = $state.params.source || $scope.location\n\n      // check for catalog vs collection page for analytics payload purposes\n      const placementTypeForAnalytics =\n        $state.current.name === 'main.shop.collection' ? 'collection_banner' : 'catalog_placement'\n\n      $scope.onFlyerHomepage = $scope.location === 'flyerhomepage'\n      const inFlyerSection = $scope.location === 'flyer' || $scope.onFlyerHomepage\n      if (inFlyerSection) {\n        const flyerData = flyerPreviewService.getFlyerData()\n        const flyerPdfHrefs = flyerCategoriesAndPdfsService.pdfHrefs || {}\n        // Merge flyer PDF Hrefs into flyer data\n        $scope.flyerData = {\n          current: {\n            ...flyerData.current,\n            pdfHref: flyerPdfHrefs.current,\n          },\n          previews: flyerData.previews.map((flyerPreviewData, index) => ({\n            ...flyerPreviewData,\n            pdfHref: flyerPdfHrefs.previews[index],\n          })),\n        }\n\n        $scope.previewToken = flyerPreviewService.getPreviewToken()\n        $scope.previewTimestampDate = flyerPreviewService.getPreviewTimestampDate()\n        $scope.analyticsFlyerLocation = `${$scope.location} - ${\n          $scope.previewToken ? 'Preview' : 'Regular'\n        }`\n      }\n\n      function toNameValue(key) {\n        return {\n          name: key,\n          value: key,\n        }\n      }\n\n      const onFilterModalClose = ({ tags, sort, brand_name }) => {\n        $state.go('.', {\n          brand_name,\n          page: null,\n          sort,\n          tags,\n        })\n      }\n\n      $scope.openFilterModal = function () {\n        filterModalService\n          .open({\n            content: 'Products',\n            hideSort: !$scope.showSort,\n            subset: $scope.subset,\n            tagOptions: $scope.filterTags,\n            brandOptions: _.map($scope.tree.current.brand_names, toNameValue),\n            sort: $state.params.sort,\n            tags: _.castArray($state.params.tags || []),\n            brand: $state.params.brand_name,\n            defaultSort:\n              config.defaultSort[auth.user.status === 'trial' ? 'trial' : 'loggedIn'][\n                $scope.subset\n              ],\n            defaultBrand: null,\n          })\n          .then(onFilterModalClose)\n      }\n\n      $scope.openFacetedFilterModal = function () {\n        facetedFilterModalService\n          .open({\n            sortOptions: _.sortBy(\n              _.filter(config.sortOptions, option => _.includes(option.showIn, 'shop')),\n              'order'\n            ),\n            tagOptions: $scope.filterTags,\n            brandOptions: _.map($scope.brandNames, toNameValue), // This may need to change for facet brands...\n            facetOptions: $scope.facetedTags,\n            facets: $scope.facets,\n            sort: $state.params.sort,\n            tags: _.castArray($state.params.tags || []),\n            brand: $state.params.brand_name,\n            defaultSort:\n              config.defaultSort[auth.user.status === 'trial' ? 'trial' : 'loggedIn'].shop,\n            defaultBrand: null,\n            searchTerm: $scope.term,\n            showSort: $scope.showSort,\n          })\n          .then(onFilterModalClose)\n      }\n\n      if (!tree.siblings) {\n        tree.siblings = []\n      }\n\n      // Find the next and previous siblings\n\n      const nonNiltreeParams = _.omitBy(tree.current.params, _.isNil)\n      const currentIndex = _.findIndex(\n        tree.siblings,\n        item =>\n          item.state === tree.current.state &&\n          fp.flow(fp.omitBy(_.isNil), fp.isEqual(nonNiltreeParams))(item.params) // ignore null/undefined params in item.params\n      )\n\n      if (tree.siblings[currentIndex - 1]) {\n        $scope.prevCategory = tree.siblings[currentIndex - 1]\n\n        // If you can't find the previous item it means you are the first item\n        // therefore, if you are first and there is more than one item in the list\n        // it means you can switch to the last item\n      } else if (tree.siblings.length > 1) {\n        $scope.prevCategory = tree.siblings[tree.siblings.length - 1]\n      } else {\n        $scope.prevCategory = null\n      }\n\n      if (tree.siblings[currentIndex + 1]) {\n        $scope.nextCategory = tree.siblings[currentIndex + 1]\n\n        // If you can't find the next item it means you are the last item\n        // therefore, if you are the last item and theres more than one item in the list\n        // you can switch to the first item\n      } else if (tree.siblings.length > 1) {\n        $scope.nextCategory = tree.siblings[0]\n      } else {\n        $scope.nextCategory = null\n      }\n\n      // Sort tags\n      $scope.filterTags = tagsService.filterDynamicTags(tree.current ? tree.current.tags : [])\n\n      // List of selected tags\n\n      $scope.tags = _.castArray($state.params.tags || [])\n\n      // List of static global tags\n      $scope.facetedTags = tagsService.filterDynamicTags(tagsService.filterBarTags)\n\n      // Selected brand name\n\n      $scope.brand = $state.params.brand_name\n\n      // Generate breadcrumbs\n\n      $scope.breadcrumbs = []\n\n      _.each(tree.parents, parent => {\n        $scope.breadcrumbs.push({\n          label: parent.name,\n          state: parent.state,\n          params: { ...parent.params },\n        })\n      })\n\n      // Saved Recipes section\n      if ($scope.location === 'savedRecipes') {\n        const { recipesHomeState } = $state.current.data\n        recipesHomeState.label = recipesHomeState.name // breadcrumbs expects 'label', not 'name'\n\n        $scope.breadcrumbs = [recipesHomeState]\n      }\n\n      // TODO: Remove showSiblings once hideMobileHeaderAnimation is no longer necessary\n      // Show siblings if we have no children and are a member of the set of siblings.\n      // Checking for membership prevents some issues with orphan collections.\n\n      const showSiblings = function () {\n        const isSibling = _.find(tree.siblings, sibling => {\n          return utilService.stateIs(\n            sibling.state,\n            sibling.params,\n            tree.current.state,\n            tree.current.params\n          )\n        })\n        return isSibling && (!tree.children || !tree.children.length)\n      }\n\n      const currentCategoryName = tree.current.name\n      if (currentCategoryName) {\n        // On mobile, if we're showing siblings, we need to omit the current tree item in breadcrumbs\n        if (mobileService.isMobile && showSiblings()) {\n          $scope.hideMobileHeaderAnimation = true\n        } else {\n          $scope.breadcrumbs.push({\n            label: currentCategoryName,\n            params: { ...tree.current.params },\n            active: true,\n          })\n        }\n\n        titleService.setTitle(currentCategoryName)\n      }\n\n      $scope.department = $scope.breadcrumbs[$scope.breadcrumbs.length - 1]\n\n      // Utility function to generate urls for image cells\n\n      $scope.handleImagePlacementClick = (placement, index) =>\n        placementsService.handleImagePlacementClick(\n          formatImagePlacementForAnalytics(placement, placementTypeForAnalytics),\n          'catalog',\n          index\n        )\n\n      // Pagination\n\n      $scope.page = { current: $state.params.page || 1 }\n\n      $scope.$watch('page.current', (newPage, oldPage) => {\n        if (oldPage && newPage !== oldPage) {\n          $state.go('.', { page: newPage })\n          delete $scope.items\n          $scope.loadItems()\n        }\n      })\n\n      const departmentAnalytics = {\n        department_name: tree.current.name,\n        department_type: `L${tree.current.level + 1}`,\n      }\n\n      // Load items from the API, if an endpoint is specified\n      // (may not be, for subcategory view, etc..)\n\n      let sourceItems\n\n      if (src.endpoint) {\n        $scope.loadItems = function () {\n          // Start with the state parameters\n\n          let params = angular.copy($state.params) // Make sure we don't modify the actual state params\n\n          // Then merge in any params specified in the src object\n          // (making sure to handle tags specially)\n\n          if (src.params) {\n            _.each(src.params, (value, key) => {\n              if (key === 'tags') {\n                params.tags = value.concat(params.tags || [])\n              } else {\n                params.key = value\n              }\n            })\n            if (src.params.tags) {\n            }\n            params = _.merge(params, src.params)\n          }\n\n          // Add pagination params\n\n          params.offset = $scope.page.current\n            ? ($scope.page.current - 1) * config.productsPerPage\n            : 0\n          params.limit = config.productsPerPage\n\n          // Set default sort params\n\n          if (!params.sort) {\n            const authMode = auth.user.status === 'trial' ? 'trial' : 'loggedIn'\n            params.sort = config.defaultSort[authMode][$scope.subset]\n          }\n\n          Restangular.all(src.endpoint)\n            .getList(params)\n            .then(items => {\n              if ($state.current.name === 'main.shop.collection' && items.dynamic) {\n                $scope.noItemsFoundMsg = lang.values.noItemsInDynamicCollection\n              }\n              // (Hacky a11y fix) Move focus back to the filter which caused the reload\n              // Ideally toggling a filter wouldn't cause the entire component to reload\n              // so focus can be maintained\n              // eslint-disable-next-line no-unused-expressions\n              document.getElementById($state.params.toggledFilterId)?.focus()\n              $state.params.toggledFilterId = null\n\n              sourceItems = items\n              $scope.colSize = cellService.getMaxCols()\n              $scope.items = cellService.sort(sourceItems, $scope.colSize)\n              $scope.items.item_count = items.item_count\n\n              const placements = productPlacementsFromProducts($scope.items)\n\n              // placements must be ahead of the regular products to match order in the UI\n              const productAnalytics = analytics.getProductListAnalytics([\n                ...placements,\n                ...$scope.items,\n              ])\n              analytics.logPlacementImpression(\n                sourceItems.placements\n                  ?.filter(p => p.item_type === 'none')\n                  .map(p => formatImagePlacementForAnalytics(p, placementTypeForAnalytics)),\n                'catalog',\n                placementTypeForAnalytics\n              )\n\n              if (config.elevaate?.enabled && config.elevaate?.tag) {\n                window.elevaatePromotions = window.elevaatePromotions || []\n                placements.forEach(placement => {\n                  if (placement.sponsoredBy === 'elevaate') {\n                    window.elevaatePromotions.push({\n                      agreementId: placement.metadata.agreementId,\n                      pageImpressionId: $scope.items.adProviderMetadata.elevaate.pageImpressionId,\n                      dssId: placement.metadata.dssId,\n                      productId: placement.metadata.productId,\n                      productIdInFeed: placement.metadata.productIdInFeed,\n                      productPrice: placement.metadata.price,\n                      currencyCode: config.elevaateCurrencyCode,\n                      pageProductId: placement?.id,\n                    })\n                  }\n                })\n              }\n\n              // Move placements to specified position from API\n              if ($scope.items?.placements?.length > 0) {\n                // NOTE: This will mutate the results object\n                // The mutation drops all item_type === 'product' placements from the placements array\n                // under the result object, as the 'product' placements get integrated into the results array.\n                // The item_count attribute is also adjusted to reflect the movement of the placement array into items\n                $scope.items = insertPlacementsInProducts($scope.items.placements, $scope.items)\n              }\n\n              // Check if alternative context types are available\n              if (items.available_context_types) {\n                $scope.showPickupContextSwitch = items.available_context_types.includes(\n                  SHOPPING_MODES.PICKUP\n                )\n                $scope.showDeliveryContextSwitch = items.available_context_types.includes(\n                  SHOPPING_MODES.DELIVERY\n                )\n                $scope.showCateringContextSwitch = items.available_context_types.includes(\n                  SHOPPING_MODES.CATERING\n                )\n              }\n\n              const deptName = $scope.breadcrumbs[$scope.breadcrumbs.length - 1].label\n              analytics.logCriteoStoreProducts({\n                items: items.map(result => String(result.ext_id)),\n                keyword: $scope.term,\n                page_number: $scope.page.current,\n                filterParams: utilService.filterParams(\n                  id => [\n                    ...catalogCategoriesService\n                      .parents(catalogCategoriesService.categoryFromId(id.toString()))\n                      .map(({ name }) => name),\n                    catalogCategoriesService.categoryFromId(id.toString()).name,\n                  ],\n                  params\n                ),\n              })\n\n              analytics.logSegmentEvent('store.view_department', {\n                products_value: deptName,\n                products_results_count: productAnalytics.length,\n                products_results: productAnalytics,\n                products_results_page: $scope.page.current,\n                ...departmentAnalytics,\n              })\n\n              if (src.callback) {\n                src.callback({\n                  offers: items,\n                  offerPageMeta: {\n                    count: items.item_count,\n                    limit: params.limit,\n                    sort: params.sort,\n                    offset: params.offset,\n                  },\n                  offerOrigin: null,\n                })\n              }\n            })\n            .catch(() => analytics.logSegmentEvent('store.view_department', departmentAnalytics))\n            .finally(() => {\n              if ($scope.items?.length & ($scope.items?.route === 'recipes')) {\n                $rootScope.$on('$stateChangeSuccess', (event, toState) => {\n                  if (toState.name !== 'main.recipes.details') {\n                    deleteJsonLd()\n                  }\n                })\n\n                appendItemListStructuredData($scope.items)\n              }\n              productsService.getBeacon($scope.items?.onLoadBeacon)\n            })\n        }\n\n        const reGrid = function () {\n          if ($scope.items) {\n            const newColsAmount = cellService.getMaxCols()\n\n            if (!mobileService.isMobile && newColsAmount !== $scope.colSize) {\n              $scope.colSize = newColsAmount\n              $scope.items = cellService.sort(sourceItems, $scope.colSize)\n            }\n          }\n        }\n\n        $window.addEventListener('resize', reGrid)\n\n        $scope.$on('$destroy', () => {\n          $window.removeEventListener('resize', reGrid)\n        })\n      } else {\n        analytics.logSegmentEvent('store.view_department', departmentAnalytics)\n      }\n\n      // Determine noItemsFoundMsg\n\n      if (\n        ($scope.location === 'coupons' || $scope.location === 'offers') &&\n        auth.user.status === 'trial'\n      ) {\n        $scope.noItemsFoundMsg = lang.values.loginToViewOffers\n      } else if ($scope.location === 'catalog' || $scope.location === 'recipes') {\n        const currentContext = auth.user.context.intent\n        if (currentContext) {\n          $scope.noItemsFoundMsg = lang.template(lang.values.noItemsInCategory[$scope.location], {\n            category: currentCategoryName,\n            context: config.shoppingSelector[currentContext].title,\n          })\n        } else {\n          $scope.noItemsFoundMsg = lang.values.noItemsFound\n        }\n      } else {\n        $scope.noItemsFoundMsg = lang.values.noItemsFound\n      }\n\n      // Function to trigger the promo code modal\n      const openPromoCodeModal = () => {\n        promoCodeService.open({\n          isUserLoggedIn: false,\n        })\n      }\n\n      // The promoCodeButton object, this is injected on the loyalty page\n      const promoCodeButton = {\n        label: lang.values.addAPromoCode,\n        onclick: openPromoCodeModal,\n      }\n\n      // Check if we need any buttons\n      $scope.checkForButtons = () => {\n        if ($state.current.name === 'main.shop.coupons' && config.enablePromoCodes.coupons) {\n          return promoCodeButton\n        }\n        return tree.current.pageHeaderButton\n      }\n\n      $scope.getTagName = tag => {\n        return facetedSearchService.getTagName(tag)\n      }\n\n      // Set a flag to switch cell containers\n      // Grids need to start getting refactored to use flexbox/fluid widths in order to use the new product cells\n      // This will allow us to move sections 1 at a time and not cause any unintended bugs with existing css (specifically promoted placements)\n      // Add section names here as they move to the new flexbox grid.\n      // Corresponding code in the cellContainer.html must be moved too\n      const updatedGrids = ['recipes', 'savedRecipes']\n      $scope.flexGrid = updatedGrids.includes($scope.location)\n    }\n  )\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n"],"sourceRoot":""}