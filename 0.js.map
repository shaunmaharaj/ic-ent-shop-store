{"version":3,"sources":["webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemNameBase/ItemNameBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemName/ItemName.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemPriceBase/ItemPriceBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemPrice/ItemPrice.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/Top.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemImageBase/ItemImageBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemDynamicLabelBase/validations.ts","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemDynamicLabelBase/ItemDynamicLabelBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/Bottom.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/topBottomValidations.ts","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemRegularPriceBase/ItemRegularPriceBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemSalePrice/ItemSalePrice.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemPriceSetBase/ItemPriceSetBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemPriceSetBase/validations.ts","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemWeightBase/ItemWeightBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemBase/ItemBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemBase/validations.ts","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemB.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/itemBValidations.ts","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemAttributeBase/ItemAttributeBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemAttribute/ItemAttribute.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/Overlay.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemImage/ItemImage.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemLinkBase/ItemLinkBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemBLink.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItemButton/AddItemButtonBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItemButton/AddItemButton.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/StepperBase/StepperBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItemStepperBase/AddItemStepperBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItemExpanded/AddItemExpanded.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItemExpandedMessage/AddItemExpandedDisclaimer.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/RadioButtonGroup/RadioButtonGroupBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/RadioButtonGroup/RadioPillBase.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/RadioButtonGroup/RadioPill.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItemExpandedUnit/AddItemExpandedUnit.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/AddItem/AddItem.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemBAddItem.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/CouponClipButton/CouponClipButton.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/ItemBCouponClipButton.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemPriceSet/ItemPriceSet.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemWeight/ItemWeight.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/index.ts","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/ItemB/AttributeList.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemDynamicLabel/ItemDynamicLabel.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemRegularPrice/ItemRegularPrice.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/atoms/ItemButton/ItemButton.tsx"],"names":["ItemNameBase","props","children","theme","useTheme","name","combineStyles","typography","bodyMedium2","color","colors","systemGrayscale70","lineClamp","getStyles","styles","title","css","ItemName","ItemPriceBase","span","bodyMedium1","ItemPrice","marginBottom","spacing","s8","Top","ItemImageBase","src","alt","rest","box","boxInside","img","borderRadius","radius","r12","maxHeight","maxWidth","aspectRatio","TextContent","CompositionEngineItemType","validator","CompositionValidator","engine","getAllChildren","findAllChildrenByType","childIndexOfByItemType","all","length","CompositionInvalidChildCount","findTextContentIndex","allTextContent","CompositionTooManyItemsError","CompositionTooFewItemsError","CompositionOrderError","ItemDynamicLabelBase","colorKey","container","containerCss","label","labelCss","icon","iconCss","display","justifyContent","margin","s4","flex","flexDirection","lineHeight","bodySmall1","marginTop","tree","Children","toArray","validate","isElement","cloneElement","size","flexGrow","expect","findAllByKind","toHaveLength","toBeLessThan","Bottom","ItemRegularPriceBase","root","bodyMedium3","systemGrayscale50","textDecoration","brandPromotionalRegular","marginRight","ItemSalePrice","getAll","flatIndexOfByKind","firstItemPriceIndex","firstItemRegularPriceIndex","ItemPriceSetBase","propStyles","hasRegularPrice","renderChildren","map","child","a","pointerToString","b","createElement","containerStyles","bodySmall2","ItemWeightBase","compareItemByKind","firstItemNameIndex","firstItemWeightIndex","firstItemRegularPriceParent","parent","ItemBase","forwardRef","ref","position","topIndex","bottomIndex","foundTops","filter","item","addtl","itemPriceIndex","itemNameIndex","ItemB","height","textAlign","ItemAttributeBase","attribute","style","circle","backgroundColor","fontSize","textTransform","width","ScreenReaderText","className","aria-hidden","ItemAttribute","left","top","zIndex","ItemLinkBase","focusRing","border","bottom","content","right","aStyles","outline","baseStyles","button","cursor","touchAction","userSelect","text","paddingLeft","paddingRight","wrapper","AddItemButtonBase","value","buttonCSS","textCSS","wrapperCSS","iconCSS","buttonSizeStyles","minWidth","responsive","down","buttonWrapper","padding","AddItemButton","alignItems","systemGrayscale00","systemGrayscale20","systemGrayscale10","brandPrimaryRegular","elevation","low","shadow","decrementButton","flexWrap","incrementButton","StepperBase","allowIncrement","allowDecrement","ariaIncrement","ariaDecrement","ariaValue","decrementType","disabled","onIncrement","onDecrement","incrementButtonRef","valueText","decrementCSS","incrementCSS","incrementDisabled","decrementDisabled","aria-label","onClick","e","preventDefault","aria-live","aria-atomic","getBorderRadius","side","highRadius","lowRadius","getButtonStyles","r4","undefined","up","s32","AddItemStepperBase","systemGrayscale30","minHeight","s40","AddItemExpanded","background","AddItemExpandedDisclaimer","disclaimer","addItemProps","wrapperCss","disclaimerCss","paddingBottom","whiteSpace","RadioButtonGroupBase","accessibleLabel","onChange","role","target","groupDisabled","selectedValue","input","A11Y","visuallyHidden","s12","inputWrapper","float","RadioPillBase","inputWrapperCSS","inputCSS","stopPropagation","defaultChecked","aria-checked","id","type","tabIndex","htmlFor","RadioPill","blendColors","boxSizing","radioGroupStyles","AddItemExpandedUnit","modes","modesCss","options","opt","onMouseDown","event","floatingInteractive","interactiveContainer","interactivePlaceholder","AddItem","isInteracting","setInteracting","buttonValueText","wrapperRef","useRef","useOnClickOutside","useEffect","current","focus","isExpandedMessage","isExpandedUnit","CouponClipButton","applied","active","brandPromotionalLight","brandPromotionalDark","r8","marginLeft","hover","paddingTop","AttributeList","attributes","data-test","Item","ItemDynamicLabel","ItemImage","ItemLink","ItemPriceSet","ItemRegularPrice","strikeThrough","ItemWeight","Overlay","ItemButton"],"mappings":"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","file":"0.js","sourcesContent":["import { useTheme, lineClamp, combineStyles } from '@instacart/ids-core'\nimport type { Theme, Base } from '@instacart/ids-core'\nimport type { FunctionComponent } from 'react'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    name: {\n      ...theme.typography.bodyMedium2,\n      color: theme.colors.systemGrayscale70,\n      ...lineClamp(2),\n    },\n  } as const)\n\nexport interface ItemNameBaseProps extends Base<typeof getStyles> {\n  children: string\n}\n\nexport const ItemNameBase: FunctionComponent<ItemNameBaseProps> = props => {\n  const { children } = props\n  const theme = useTheme()\n  const { name } = combineStyles(getStyles(theme), props.styles)\n\n  return (\n    <div title={children} css={name}>\n      {children}\n    </div>\n  )\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemNameBase } from '../ItemNameBase'\n\nexport interface ItemNameProps extends Variant<typeof ItemNameBase> {}\n\nexport const ItemName = (props: ItemNameProps) => {\n  return <ItemNameBase {...props} />\n}\n","import type { FunctionComponent, ReactNode } from 'react'\nimport { combineStyles, useTheme } from '@instacart/ids-core'\nimport type { Base, Theme } from '@instacart/ids-core'\n\nconst getStyles = ({ theme }: { theme: Theme }) =>\n  ({\n    span: { ...theme.typography.bodyMedium1, color: theme.colors.systemGrayscale70 },\n  } as const)\n\nexport interface ItemPriceBaseProps extends Base<typeof getStyles> {\n  children: ReactNode\n}\n\nexport const ItemPriceBase: FunctionComponent<ItemPriceBaseProps> = props => {\n  const { children, styles } = props\n  const theme = useTheme()\n  const { span } = combineStyles(getStyles({ theme }), styles)\n  return <span css={span}>{children}</span>\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemPriceBase } from '../ItemPriceBase'\n\nexport interface ItemPriceProps extends Variant<typeof ItemPriceBase> {}\n\nexport const ItemPrice = (props: ItemPriceProps) => {\n  return <ItemPriceBase {...props} />\n}\n","import { ReactNode } from 'react'\nimport { spacing } from '@instacart/ids-core'\n\nconst styles = {\n  marginBottom: spacing.s8,\n}\n\nexport interface TopProps {\n  children: ReactNode\n}\n\nexport const Top = (props: TopProps) => {\n  const { children } = props\n\n  return <div css={styles}>{children}</div>\n}\n","import type { ComponentPropsWithoutRef } from 'react'\nimport { Base, combineStyles, aspectRatio, Theme, useTheme } from '@instacart/ids-core'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    img: {\n      borderRadius: theme.radius.r12,\n      maxHeight: '100%',\n      maxWidth: '100%',\n    },\n    ...aspectRatio(1, 1),\n  } as const)\n\nexport interface ItemImageBaseProps\n  extends ComponentPropsWithoutRef<'img'>,\n    Base<typeof getStyles> {\n  alt: string\n}\n\nexport const ItemImageBase = (props: ItemImageBaseProps) => {\n  const { styles, src, alt, children, ...rest } = props\n  const theme = useTheme()\n  const { box, boxInside, img } = combineStyles(getStyles(theme), styles)\n\n  return (\n    <div css={box}>\n      <div css={boxInside}>\n        <img {...rest} css={img} src={src} alt={alt} />\n      </div>\n    </div>\n  )\n}\n","import type { Children } from 'react'\nimport {\n  CompositionOrderError,\n  CompositionTooFewItemsError,\n  CompositionTooManyItemsError,\n  CompositionInvalidChildCount,\n  CompositionEngineItemType,\n  CompositionEngine,\n} from '@instacart/ids-core'\n\nconst { TextContent } = CompositionEngineItemType\n\nexport type CompositionTree = ReturnType<typeof Children['toArray']>\n\nexport const validateDynamicLabelWithIcon = (engine: CompositionEngine) => {\n  const { getAllChildren, findAllChildrenByType, childIndexOfByItemType } = engine\n\n  const all = getAllChildren()\n\n  if (all.length !== 2) {\n    throw new CompositionInvalidChildCount(all.length, 2)\n  }\n\n  const findTextContentIndex = childIndexOfByItemType(TextContent)\n  const allTextContent = findAllChildrenByType(TextContent)\n\n  // make sure exactly one TextContent\n  if (allTextContent.length > 1) {\n    throw new CompositionTooManyItemsError(TextContent)\n  } else if (allTextContent.length < 1) {\n    throw new CompositionTooFewItemsError(TextContent)\n  }\n\n  // make sure TextContent is not first position\n  if (findTextContentIndex === 0) {\n    throw new CompositionOrderError(all[1], all[0])\n  }\n\n  // TODO find a way to solve matching on element (or non-exhaustive set of elements)\n  // make sure first item is an icon, by checking that the name ends in Icon\n  // const iconName = (all[0].type === Element && pointerToString(all[0].kind)) || ''\n  // if (!iconName.endsWith('Icon')) {\n  //   throw new CompositionInvalidChildError(\n  //     all[0],\n  //     all[0].parent?.kind || baseElement,\n  //     'Expected an IDS Icon'\n  //   )\n  // }\n}\n","import { Children, cloneElement, FunctionComponent, ReactNode } from 'react'\nimport { lineClamp, spacing, Color, useTheme, CompositionValidator } from '@instacart/ids-core'\nimport type { Theme } from '@instacart/ids-core'\nimport { isElement } from 'react-is'\nimport { validateDynamicLabelWithIcon } from './validations'\n\nconst styles = ({ theme, colorKey }: { theme: Theme; colorKey: Color }) =>\n  ({\n    container: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      margin: `${spacing.s4}px 0px`,\n    },\n    icon: {\n      // aligned to the bottom\n      display: 'flex',\n      flex: '0 0 20px',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      lineHeight: theme.typography.bodySmall1.lineHeight,\n      marginTop: 2,\n    },\n    label: {\n      color: theme.colors[colorKey],\n      ...theme.typography.bodySmall1,\n      ...lineClamp(2),\n    },\n  } as const)\n\nexport interface ItemDynamicLabelBaseProps {\n  children: ReactNode\n  color?: Color\n}\n\nconst iconSize = 16\n\nconst validator = new CompositionValidator([validateDynamicLabelWithIcon])\n\nexport const ItemDynamicLabelBase: FunctionComponent<ItemDynamicLabelBaseProps> = ({\n  children,\n  color: colorKey = 'systemGrayscale70',\n}) => {\n  const theme = useTheme()\n  const { container: containerCss, label: labelCss, icon: iconCss } = styles({ colorKey, theme })\n\n  if (typeof children === 'string' || typeof children === 'number') {\n    return (\n      <div css={containerCss}>\n        <div css={labelCss}>{children}</div>\n      </div>\n    )\n  }\n\n  const tree = Children.toArray(children)\n  validator.validate(children)\n\n  // Assumption because validateDynamicLabelWithIcon succeeded after this point is that element at index 0\n  // should be an IDS Icon and index 1 should be string | number\n\n  const label = tree[1]\n  // override Icon color and size\n  const icon =\n    isElement(tree[0]) &&\n    cloneElement(tree[0], { ...tree[0].props, color: colorKey, size: iconSize })\n\n  return (\n    <div css={containerCss}>\n      <div css={iconCss}>{icon}</div>\n      <div css={labelCss}>{label}</div>\n    </div>\n  )\n}\n","import type { ReactNode } from 'react'\nimport { CompositionValidator } from '@instacart/ids-core'\nimport { validateBottom } from './topBottomValidations'\n\nexport interface BottomProps {\n  children: ReactNode\n}\n\nconst styles = {\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n} as const\n\nconst validator = new CompositionValidator([validateBottom])\n\nexport const Bottom = (props: BottomProps) => {\n  const { children } = props\n\n  validator.validate(children)\n\n  return <div css={styles}>{children}</div>\n}\n","import { CompositionEngine, CompositionTooManyItemsError } from '@instacart/ids-core'\nimport { ItemImageBase } from '../../atoms/ItemImageBase'\nimport { ItemDynamicLabelBase } from '../../atoms/ItemDynamicLabelBase'\n\nexport const validateTop = (engine: CompositionEngine) => {\n  const { expect, getAll, compareItemByKind } = engine\n  const all = getAll()\n\n  // it should only contain a single element\n  expect(all).toHaveLength(1)\n\n  // that is an `ItemImageBase`\n  expect(compareItemByKind(all[0], ItemImageBase)).toEqual(true)\n}\n\nexport const validateBottom = (engine: CompositionEngine) => {\n  const { expect, findAllByKind } = engine\n\n  // it should never contain `ItemImageBase`\n  expect(findAllByKind(ItemImageBase)).toHaveLength(0)\n\n  try {\n    // item cards should only have one DynamicLabel\n    expect(findAllByKind(ItemDynamicLabelBase).length).toBeLessThan(3)\n  } catch {\n    throw new CompositionTooManyItemsError(ItemDynamicLabelBase)\n  }\n}\n","import type { FunctionComponent, ReactNode } from 'react'\nimport { combineStyles, useTheme } from '@instacart/ids-core'\nimport type { Theme, Base } from '@instacart/ids-core'\n\nconst getStyles = ({ theme }: { theme: Theme }) =>\n  ({\n    root: {\n      ...theme.typography.bodyMedium3,\n      color: theme.colors.systemGrayscale50,\n      textDecoration: 'none',\n    },\n  } as const)\n\nexport interface ItemRegularPriceBaseProps extends Base<typeof getStyles> {\n  children: ReactNode\n}\n\nexport const ItemRegularPriceBase: FunctionComponent<ItemRegularPriceBaseProps> = ({\n  children,\n  styles,\n}) => {\n  const theme = useTheme()\n  const { root } = combineStyles(getStyles({ theme }), styles)\n  return <span css={root}>{children}</span>\n}\n","import { Theme, useTheme, spacing, Variant } from '@instacart/ids-core'\nimport { ItemPriceBase } from '../ItemPriceBase'\n\nconst { s4 } = spacing\n\nexport interface ItemSalePriceProps extends Variant<typeof ItemPriceBase> {}\n\nconst getStyles = (theme: Theme) => {\n  const {\n    colors: { brandPromotionalRegular },\n  } = theme\n  return {\n    span: {\n      color: brandPromotionalRegular,\n      marginRight: s4,\n    },\n  }\n}\n\nexport const ItemSalePrice = (props: ItemSalePriceProps) => {\n  const theme = useTheme()\n  return <ItemPriceBase styles={getStyles(theme)} {...props} />\n}\n","import { Children, cloneElement, createElement } from 'react'\nimport type { ReactNode } from 'react'\nimport { Base, combineStyles, pointerToString, CompositionValidator } from '@instacart/ids-core'\nimport { isElement } from 'react-is'\nimport { validateItemPriceSet } from './validations'\nimport { ItemRegularPriceBase } from '../ItemRegularPriceBase'\nimport { ItemSalePrice } from '../ItemSalePrice'\nimport { ItemPrice } from '../ItemPrice'\n\nconst getStyles = () =>\n  ({\n    container: {},\n  } as const)\n\nexport interface ItemPriceSetBaseProps extends Base<typeof getStyles> {\n  children: ReactNode\n}\n\nconst validator = new CompositionValidator([validateItemPriceSet])\n\nexport const ItemPriceSetBase = (props: ItemPriceSetBaseProps) => {\n  const { children, styles: propStyles, ...rest } = props\n\n  const styles = combineStyles(getStyles(), propStyles)\n\n  const engine = validator.validate(children)\n\n  const hasRegularPrice = engine.flatIndexOfByKind(ItemRegularPriceBase) > -1\n\n  const renderChildren = Children.map(children, child => {\n    // replace ItemPrice with ItemSalePrice\n    // when ItemRegularPrice also exists as a\n    if (isElement(child)) {\n      const a = pointerToString(child)\n      const b = pointerToString(ItemPrice)\n      if (hasRegularPrice && isElement(child) && a === b) {\n        return cloneElement(createElement(ItemSalePrice), child.props)\n      }\n    }\n    return child\n  })\n\n  return (\n    <div {...rest} css={styles.container}>\n      {renderChildren}\n    </div>\n  )\n}\n","import {\n  CompositionEngine,\n  CompositionOrderError,\n  CompositionTooFewItemsError,\n  CompositionTooManyItemsError,\n} from '@instacart/ids-core'\nimport { ItemPriceBase } from '../ItemPriceBase'\nimport { ItemRegularPriceBase } from '../ItemRegularPriceBase'\n\nexport const validateItemPriceSet = (engine: CompositionEngine) => {\n  const { expect, getAll, flatIndexOfByKind, findAllByKind } = engine\n\n  const all = getAll()\n  const firstItemPriceIndex = flatIndexOfByKind(ItemPriceBase)\n  const firstItemRegularPriceIndex = flatIndexOfByKind(ItemRegularPriceBase)\n\n  try {\n    // require one and only one ItemPrice\n    expect(findAllByKind(ItemPriceBase)).toHaveLength(1)\n  } catch {\n    throw new CompositionTooFewItemsError(ItemPriceBase, 'one and only one (required)')\n  }\n\n  if (firstItemRegularPriceIndex > -1) {\n    if (firstItemPriceIndex > -1) {\n      try {\n        // do not allow ItemRegularPrice before ItemPrice\n        expect(firstItemPriceIndex).toBeLessThan(firstItemRegularPriceIndex)\n      } catch {\n        throw new CompositionOrderError(all[firstItemRegularPriceIndex], all[firstItemPriceIndex])\n      }\n    }\n    try {\n      // one and only one ItemRegularPrice\n      expect(findAllByKind(ItemRegularPriceBase)).toHaveLength(1)\n    } catch {\n      throw new CompositionTooManyItemsError(ItemRegularPriceBase, 'one and only one (optional)')\n    }\n  }\n}\n","import { useTheme, Theme } from '@instacart/ids-core'\n\nimport type { FunctionComponent } from 'react'\n\nconst containerStyles = ({ theme }: { theme: Theme }) => ({\n  ...theme.typography.bodySmall2,\n  color: theme.colors.systemGrayscale50,\n})\n\nexport interface ItemWeightBaseProps {\n  children: string\n}\n\nexport const ItemWeightBase: FunctionComponent<ItemWeightBaseProps> = ({ children }) => {\n  const theme = useTheme()\n  return (\n    <div title={children} css={containerStyles({ theme })}>\n      {children}\n    </div>\n  )\n}\n","import { forwardRef, ReactNode } from 'react'\nimport { Base, combineStyles, CompositionValidator } from '@instacart/ids-core'\nimport { validateItem } from './validations'\n\nexport interface ItemBaseProps extends Base<typeof getStyles> {\n  children: ReactNode\n}\n\nconst getStyles = () =>\n  ({\n    container: {\n      position: 'relative',\n    },\n  } as const)\n\nconst validator = new CompositionValidator([validateItem])\n\nexport type ItemBaseRef = HTMLDivElement\n\nexport const ItemBase = forwardRef<ItemBaseRef, ItemBaseProps>(function ItemBase(props, ref) {\n  const { children, styles: propStyles, ...rest } = props\n\n  const styles = combineStyles(getStyles(), propStyles)\n\n  validator.validate(children)\n\n  return (\n    <div ref={ref} {...rest} css={styles.container}>\n      {children}\n    </div>\n  )\n})\n","import {\n  CompositionEngine,\n  CompositionOrderError,\n  CompositionTooManyItemsError,\n} from '@instacart/ids-core'\nimport { ItemPriceSetBase } from '../ItemPriceSetBase'\nimport { ItemRegularPriceBase } from '../ItemRegularPriceBase'\nimport { ItemNameBase } from '../ItemNameBase'\nimport { ItemWeightBase } from '../ItemWeightBase'\n\nexport const validateItem = (engine: CompositionEngine) => {\n  const { expect, getAll, flatIndexOfByKind, compareItemByKind } = engine\n\n  const all = getAll()\n  const firstItemRegularPriceIndex = flatIndexOfByKind(ItemRegularPriceBase)\n  const firstItemNameIndex = flatIndexOfByKind(ItemNameBase)\n  const firstItemWeightIndex = flatIndexOfByKind(ItemWeightBase)\n\n  const firstItemRegularPriceParent = all[firstItemRegularPriceIndex]?.parent\n\n  if (\n    firstItemRegularPriceIndex > -1 &&\n    (!firstItemRegularPriceParent ||\n      (firstItemRegularPriceParent &&\n        compareItemByKind(firstItemRegularPriceParent, ItemPriceSetBase) === false))\n  ) {\n    throw new CompositionTooManyItemsError(\n      ItemRegularPriceBase,\n      'not allowed outside of ItemPriceSet'\n    )\n  }\n\n  if (firstItemWeightIndex > -1) {\n    if (firstItemNameIndex > -1) {\n      try {\n        // do not allow ItemWeight before ItemName\n        expect(firstItemNameIndex).toBeLessThan(firstItemWeightIndex)\n      } catch {\n        throw new CompositionOrderError(all[firstItemWeightIndex], all[firstItemNameIndex])\n      }\n    }\n  }\n}\n","import type { CSSObject } from '@emotion/core'\nimport { useTheme, CompositionValidator, StylesOf, Variant } from '@instacart/ids-core'\nimport { forwardRef } from 'react'\nimport { validateItem } from './itemBValidations'\n\nimport { ItemBase, ItemBaseRef, ItemBaseProps } from '../../atoms/ItemBase'\n\nexport interface ItemBProps extends Omit<ItemBaseProps, 'styles'>, Variant<typeof ItemBase> {\n  styles?: CSSObject\n}\n\nconst validator = new CompositionValidator([validateItem])\n\nexport const ItemB = forwardRef<ItemBaseRef, ItemBProps>(function ItemB(props, ref) {\n  const { children, styles: containerStyles } = props\n  const theme = useTheme()\n\n  validator.validate(children)\n\n  const styles: StylesOf<typeof ItemBase> = {\n    container: {\n      ...containerStyles,\n      // TODO: spec says r16 but it doesn't exist in ids-core\n      // TODO: verify with design if this should be on the container, figma is not consistent\n      //       it's definately on the focus ring\n      borderRadius: theme.radius.r12,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      textAlign: 'left',\n    },\n  }\n\n  return <ItemBase ref={ref} {...props} styles={styles} />\n})\n","import {\n  CompositionOrderError,\n  CompositionTooFewItemsError,\n  CompositionTooManyItemsError,\n} from '@instacart/ids-core'\nimport type { CompositionEngine } from '@instacart/ids-core'\nimport { ItemName } from '../../atoms/ItemName'\nimport { ItemPrice } from '../../atoms/ItemPrice'\nimport { Top } from './Top'\nimport { Bottom } from './Bottom'\n\nexport const validateItem = (engine: CompositionEngine): void => {\n  const { expect, getAll, flatIndexOfByKind, compareItemByKind } = engine\n  const all = getAll()\n  const topIndex = flatIndexOfByKind(Top)\n  const bottomIndex = flatIndexOfByKind(Bottom)\n\n  // it must contain one and only one Top\n  const foundTops = all.filter(item => compareItemByKind(item, Top))\n  try {\n    expect(foundTops).toHaveLength(1)\n  } catch {\n    const addtl = 'one and only one'\n    if (foundTops.length < 1) {\n      throw new CompositionTooFewItemsError(Top, addtl)\n    } else {\n      throw new CompositionTooManyItemsError(Bottom, addtl)\n    }\n  }\n\n  // it must contain one and only one Bottom\n  const foundBottoms = all.filter(item => compareItemByKind(item, Bottom))\n  expect(foundBottoms).toHaveLength(1)\n\n  try {\n    // Top must be before Bottom\n    expect(topIndex).toBeLessThan(bottomIndex)\n  } catch {\n    throw new CompositionOrderError(all[topIndex], all[bottomIndex])\n  }\n\n  const itemPriceIndex = flatIndexOfByKind(ItemPrice)\n  const itemNameIndex = flatIndexOfByKind(ItemName)\n  if (itemPriceIndex > -1 && itemNameIndex > -1) {\n    try {\n      expect(itemPriceIndex).toBeLessThan(itemNameIndex)\n    } catch {\n      throw new CompositionOrderError(all[itemPriceIndex], all[itemNameIndex])\n    }\n  }\n}\n","import React from 'react'\nimport { Tag } from '../../organisms/ItemTile/ItemTile.types'\nimport { ScreenReaderText } from '../ScreenReaderText'\n\nconst DEFAULT_BACKGROUND_COLOR = '#ffffff'\n\nconst containerStyles = ({ attribute }: { attribute: Tag }) => {\n  // because the default value for circle is assumed to be true, we need to check if the\n  // config value has been explicitly set to false\n  // if no background color is set, we default to white\n  const colors =\n    attribute.circle === false\n      ? {\n          backgroundColor: attribute.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n          color: attribute.color,\n        }\n      : {\n          backgroundColor: attribute.color,\n          color: attribute.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n        }\n\n  return {\n    ...colors,\n    borderRadius: '50%',\n    fontSize: attribute.fontSize || 12,\n    height: 21,\n    lineHeight: '21px',\n    margin: 2,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    width: 21,\n  } as const\n}\n\nexport interface ItemAttributeBaseProps {\n  attribute: Tag\n}\n\nexport const ItemAttributeBase = ({ attribute }: ItemAttributeBaseProps) => {\n  const { name, icon } = attribute\n  const style = containerStyles({ attribute })\n\n  return (\n    <div css={style} title={name}>\n      <ScreenReaderText>{name}</ScreenReaderText>\n      <span className={`icon-${icon}`} aria-hidden=\"true\" />\n    </div>\n  )\n}\n","import type { Variant } from '@instacart/ids-core'\nimport React from 'react'\nimport { ItemAttributeBase } from '../ItemAttributeBase'\n\nexport interface ItemAttributeProps extends Variant<typeof ItemAttributeBase> {}\n\nexport const ItemAttribute = (props: ItemAttributeProps) => {\n  return <ItemAttributeBase {...props} />\n}\n","import { CSSObject } from '@emotion/core'\nimport { ReactNode } from 'react'\nimport { spacing } from '@instacart/ids-core'\n\nconst styles: CSSObject = {\n  left: spacing.s4,\n  position: 'absolute',\n  top: spacing.s4,\n  zIndex: 1,\n}\n\nexport interface OverlayProps {\n  children: ReactNode\n}\n\nexport const Overlay = ({ children }: OverlayProps) => {\n  return <div css={styles}>{children}</div>\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemImageBase } from '../ItemImageBase'\n\nexport interface ItemImageProps extends Variant<typeof ItemImageBase> {}\n\nexport const ItemImage = (props: ItemImageProps) => {\n  return <ItemImageBase {...props} />\n}\n","import type { ComponentPropsWithRef, FunctionComponent } from 'react'\nimport { useTheme, combineStyles } from '@instacart/ids-core'\nimport type { Base, Theme } from '@instacart/ids-core'\n\ninterface AnchorProps extends ComponentPropsWithRef<'a'> {}\n\nconst getStyles = (theme: Theme) =>\n  ({\n    a: {\n      // so we get one solid focus ring\n      display: 'block',\n      // so the focus ring can use position: absolute\n      position: 'relative',\n      textDecoration: 'none',\n    },\n    focusRing: {\n      border: `2px solid ${theme.colors.systemGrayscale70}`,\n      bottom: -4,\n      content: '\"\"',\n      display: 'block',\n      left: -4,\n      position: 'absolute',\n      right: -4,\n      top: -4,\n    },\n  } as const)\n\nexport interface ItemLinkBaseProps extends Omit<AnchorProps, 'href'>, Base<typeof getStyles> {\n  // force href to be required\n  href: NonNullable<AnchorProps['href']>\n}\n\nexport const ItemLinkBase: FunctionComponent<ItemLinkBaseProps> = (props: ItemLinkBaseProps) => {\n  const { children, styles, ...rest } = props\n  const theme = useTheme()\n  const { a, focusRing } = combineStyles(getStyles(theme), styles)\n\n  const aStyles = [\n    a,\n    {\n      '&.focus-visible::after': focusRing,\n      '&:focus': {\n        // surpress the native focus ring\n        outline: 'none',\n        // surpress the native underlines\n        textDecoration: 'none',\n      },\n      '&:hover': {\n        // surpress the native underlines\n        textDecoration: 'none',\n      },\n    },\n  ]\n\n  return (\n    <a css={aStyles} {...rest}>\n      {children}\n    </a>\n  )\n}\n","import { CSSObject } from '@emotion/core'\nimport { useTheme } from '@instacart/ids-core'\nimport type { Variant } from '@instacart/ids-core'\nimport { ItemLinkBase } from '../../atoms/ItemLinkBase'\n\nexport interface ItemLinkProps extends Variant<typeof ItemLinkBase> {\n  styles?: CSSObject\n}\n\nexport const ItemBLink = (props: ItemLinkProps) => {\n  const theme = useTheme()\n  const styles = {\n    a: {\n      ...props.styles,\n    },\n    focusRing: {\n      // TODO: find a way to tie `a` borderRadius to the focusRing automagically\n      borderRadius: theme.radius.r12,\n    },\n  }\n  return <ItemLinkBase {...props} styles={styles} />\n}\n","import { ComponentPropsWithoutRef, forwardRef } from 'react'\nimport { AddIcon, Base, combineStyles, spacing } from '@instacart/ids-core'\n\nconst baseStyles = {\n  button: {\n    '&:disabled': {\n      cursor: 'default',\n    },\n    cursor: 'pointer',\n    margin: 0,\n    touchAction: 'manipulation',\n    userSelect: 'none',\n  },\n  icon: {\n    position: 'absolute', // svg corners push rounded corners in compact size\n  },\n  text: {\n    paddingLeft: spacing.s8,\n    paddingRight: spacing.s8,\n  },\n  wrapper: {},\n} as const\nconst iconColor = 'systemGrayscale70'\n\nexport interface AddItemButtonBaseProps\n  extends Omit<ComponentPropsWithoutRef<'button'>, 'disabled'>,\n    Base<typeof baseStyles> {\n  value?: string\n}\n\nexport const AddItemButtonBase = forwardRef<HTMLButtonElement, AddItemButtonBaseProps>(\n  function AddItemButtonBase({ styles, value, ...rest }, ref) {\n    const { button: buttonCSS, text: textCSS, wrapper: wrapperCSS, icon: iconCSS } = combineStyles(\n      baseStyles,\n      styles\n    )\n\n    return (\n      <div css={wrapperCSS}>\n        <button {...rest} ref={ref} css={buttonCSS}>\n          {(!value && <AddIcon css={iconCSS} size={24} color={iconColor} />) || (\n            <span css={textCSS}>{value}</span>\n          )}\n        </button>\n      </div>\n    )\n  }\n)\n","import { forwardRef } from 'react'\nimport { elevation, Theme, responsive, StylesOf, useTheme, Variant } from '@instacart/ids-core'\nimport { AddItemButtonBase } from './AddItemButtonBase'\n\nexport interface AddItemButtonProps extends Variant<typeof AddItemButtonBase> {}\n\nexport const buttonSizeStyles = {\n  button: {\n    border: 0,\n    borderRadius: 20,\n    height: 36,\n    minWidth: 36,\n    [responsive.down('c')]: {\n      height: 32,\n      minWidth: 32,\n    },\n  },\n  buttonWrapper: {\n    padding: 2,\n  },\n} as const\n\nconst getStyles = (theme: Theme): StylesOf<typeof AddItemButtonBase> =>\n  ({\n    button: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.systemGrayscale00,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      position: 'relative',\n      ...buttonSizeStyles.button,\n\n      '&.focus-visible::after': {\n        border: `2px solid ${theme.colors.systemGrayscale70}`,\n        borderRadius: 24,\n        bottom: -6,\n        content: '\"\"',\n        display: 'block',\n        left: -6,\n        position: 'absolute',\n        right: -6,\n        top: -6,\n      },\n      '&:active': {\n        backgroundColor: theme.colors.systemGrayscale20,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n      '&:focus, &:hover': {\n        backgroundColor: theme.colors.systemGrayscale10,\n      },\n    },\n    text: {\n      color: theme.colors.brandPrimaryRegular,\n      ...theme.typography.bodyMedium1,\n    },\n    wrapper: {\n      backgroundColor: theme.colors.systemGrayscale00,\n      border: 0,\n      borderRadius: 20,\n      display: 'inline-block',\n      ...buttonSizeStyles.buttonWrapper,\n      ...elevation.low.shadow,\n    },\n  } as const)\n\nexport const AddItemButton = forwardRef<HTMLButtonElement, AddItemButtonProps>(\n  function AddItemButton(props, ref) {\n    const theme = useTheme()\n    const styles = getStyles(theme)\n\n    return <AddItemButtonBase {...props} styles={styles} ref={ref} />\n  }\n)\n","import {\n  AddIcon,\n  Base,\n  combineStyles,\n  SubtractIcon,\n  TrashIcon,\n  VisuallyHidden,\n} from '@instacart/ids-core'\nimport { RefObject } from 'react'\n\nconst disabledColor = 'systemGrayscale30'\nconst enabledColor = 'systemGrayscale70'\n\nconst baseStyles = {\n  decrementButton: {\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'nowrap',\n    justifyContent: 'center',\n    // For iOS Safari issue where there's unnecessary padding applied\n    padding: 0,\n  },\n  incrementButton: {\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'nowrap',\n    justifyContent: 'center',\n    // iOS Safari issue where there's unnecessary padding applied\n    padding: 0,\n  },\n  text: {\n    userSelect: 'none',\n  },\n  wrapper: {\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'nowrap',\n    justifyContent: 'space-between',\n  },\n} as const\n\nexport interface StepperBaseProps extends Base<typeof baseStyles> {\n  allowIncrement: boolean\n  allowDecrement: boolean\n  ariaIncrement: string\n  ariaDecrement: string\n  ariaValue: string\n  decrementType: 'subtract' | 'trash'\n  onIncrement: () => void\n  onDecrement: () => void\n  disabled?: boolean\n  value: number\n  valueText?: string\n  incrementButtonRef?: RefObject<HTMLButtonElement>\n}\n\nexport const StepperBase = ({\n  allowIncrement,\n  allowDecrement,\n  ariaIncrement,\n  ariaDecrement,\n  ariaValue,\n  decrementType,\n  disabled,\n  onIncrement,\n  onDecrement,\n  styles,\n  incrementButtonRef,\n  value,\n  valueText,\n}: StepperBaseProps) => {\n  const {\n    decrementButton: decrementCSS,\n    incrementButton: incrementCSS,\n    text: textCSS,\n    wrapper: wrapperCSS,\n  } = combineStyles(baseStyles, styles)\n\n  const incrementDisabled = !allowIncrement || disabled\n  const decrementDisabled = !allowDecrement || disabled\n\n  return (\n    <span css={wrapperCSS}>\n      <button\n        aria-label={ariaDecrement}\n        css={decrementCSS}\n        onClick={e => {\n          e.preventDefault()\n          onDecrement()\n        }}\n        disabled={decrementDisabled}\n      >\n        {decrementType === 'trash' ? (\n          <TrashIcon size={24} color={decrementDisabled ? disabledColor : enabledColor} />\n        ) : (\n          <SubtractIcon size={24} color={decrementDisabled ? disabledColor : enabledColor} />\n        )}\n      </button>\n\n      <span aria-live=\"polite\" aria-atomic css={textCSS}>\n        <VisuallyHidden>{ariaValue}</VisuallyHidden>\n        <span>{valueText || value}</span>\n      </span>\n\n      <button\n        aria-label={ariaIncrement}\n        css={incrementCSS}\n        onClick={e => {\n          e.preventDefault()\n          onIncrement()\n        }}\n        disabled={incrementDisabled}\n        ref={incrementButtonRef}\n      >\n        <AddIcon size={24} color={incrementDisabled ? disabledColor : enabledColor} />\n      </button>\n    </span>\n  )\n}\n","import { CSSObject } from '@emotion/core'\nimport { Theme, spacing, useTheme, responsive, combineStyles } from '@instacart/ids-core'\nimport { ComponentProps } from 'react'\nimport { StepperBase, StepperBaseProps } from '../../StepperBase'\n\nexport interface AddItemStepperBaseProps extends StepperBaseProps {}\n\nexport type Side = 'left' | 'right'\n\n/**\n * Returns the border radius like `18px 4px 4px 4px` to get intended button radius\n * @param side left or right\n * @param highRadius more pronounced radius, to be applied to whichever side is passed in (top only)\n * @param lowRadius less pronounced radius, to be applied to the other side\n */\nconst getBorderRadius = (side: Side, highRadius: number, lowRadius: number) => {\n  const topLeft = `${side === 'left' ? highRadius : lowRadius}px`\n  const topRight = `${side === 'right' ? highRadius : lowRadius}px`\n  const bottom = `${lowRadius}px`\n  return `${topLeft} ${topRight} ${bottom} ${bottom}`\n}\n\n/**\n * Returns the styling for the increment and decrement buttons since they have many\n * common styles except the side position and the border radius\n * @param theme theme object\n * @param side left or right\n * @param disabled styles change depending on whether button is disabled\n */\nconst getButtonStyles = (theme: Theme, side: Side, disabled: undefined | boolean) =>\n  ({\n    '&.focus-visible::after': {\n      border: `2px solid ${theme.colors.systemGrayscale70}`,\n      // based on side\n      borderRadius: getBorderRadius(side, 20, theme.radius.r4),\n      bottom: -4,\n      content: '\"\"',\n      display: 'block',\n      left: -4,\n      position: 'absolute',\n      right: -4,\n      top: -4,\n    },\n    '&:active': {\n      backgroundColor: (!disabled && theme.colors.systemGrayscale20) || undefined,\n    },\n    '&:disabled': {},\n    '&:focus': {\n      outline: 'none',\n    },\n    '&:hover': {\n      backgroundColor: (!disabled && theme.colors.systemGrayscale10) || undefined,\n    },\n    backgroundColor: theme.colors.systemGrayscale00,\n    border: 0,\n    [responsive.up('r')]: {\n      borderRadius: getBorderRadius(side, 18, theme.radius.r4),\n      height: 36,\n      width: 36,\n    },\n    borderRadius: getBorderRadius(side, 16, theme.radius.r4),\n    height: spacing.s32,\n    position: 'relative',\n    // based on side\n    [side]: 2,\n    width: spacing.s32,\n  } as const)\n\n// TODO: @matthew base system improvement\n// remove Required when we support base-nesting\nconst getStyles = (\n  theme: Theme,\n  { allowIncrement, allowDecrement, disabled }: AddItemStepperBaseProps\n): Required<ComponentProps<typeof StepperBase>['styles']> =>\n  ({\n    decrementButton: {\n      ...getButtonStyles(theme, 'left', !allowDecrement || disabled),\n    },\n    incrementButton: {\n      ...getButtonStyles(theme, 'right', !allowIncrement || disabled),\n    },\n    text: {\n      ...theme.typography.bodyMedium1,\n      color: disabled ? theme.colors.systemGrayscale30 : theme.colors.systemGrayscale70,\n      padding: `0 ${spacing.s4}px`,\n    },\n    wrapper: {\n      minHeight: 36,\n      minWidth: 136,\n      [responsive.up('r')]: {\n        minHeight: spacing.s40,\n        minWidth: 144,\n      },\n    },\n  } as const)\n\nexport const AddItemStepperBase = (props: AddItemStepperBaseProps) => {\n  const theme = useTheme()\n  const baseStyles = getStyles(theme, props)\n\n  // TODO: @matthew base system improvement\n  // remove bang and as cast when we support base-nesting\n  /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n  const styles = combineStyles(baseStyles!, props.styles) as Record<\n    'decrementButton' | 'incrementButton' | 'text' | 'wrapper',\n    CSSObject\n  >\n\n  return <StepperBase {...props} styles={styles} />\n}\n","import { elevation, responsive, StylesOf, Theme, useTheme, Variant } from '@instacart/ids-core'\nimport { AddItemStepperBase, Side } from '../AddItemStepperBase'\n\nexport interface AddItemExpandedProps extends Variant<typeof AddItemStepperBase> {}\n\n/**\n * Returns the border radius like `18px 4px 4px 18px` to get intended button radius\n * @param side left or right\n * @param highRadius more pronounced radius, to be applied to whichever side is passed in\n * @param lowRadius less pronounced radius, to be applied to the other side\n */\nconst getBorderRadius = (side: Side, highRadius: number, lowRadius: number) => {\n  const left = `${side === 'left' ? highRadius : lowRadius}px`\n  const right = `${side === 'right' ? highRadius : lowRadius}px`\n  return `${left} ${right} ${right} ${left}`\n}\n\n/**\n * Returns the styling for the increment and decrement buttons since they have many\n * common styles except the side position and the border radius\n * @param theme theme object\n * @param side left or right\n * @param disabled styles change depending on whether button is disabled\n */\nconst getButtonStyles = (side: Side, theme: Theme) =>\n  ({\n    '&.focus-visible::after': {\n      // based on side\n      borderRadius: getBorderRadius(side, 20, theme.radius.r4),\n    },\n\n    [responsive.up('r')]: {\n      borderRadius: getBorderRadius(side, 18, theme.radius.r4),\n    },\n\n    borderRadius: getBorderRadius(side, 16, theme.radius.r4),\n  } as const)\n\nconst getStyles = (theme: Theme): StylesOf<typeof AddItemStepperBase> =>\n  ({\n    decrementButton: {\n      ...getButtonStyles('left', theme),\n    },\n    incrementButton: {\n      ...getButtonStyles('right', theme),\n    },\n    wrapper: {\n      background: theme.colors.systemGrayscale00,\n      borderRadius: 20,\n      ...elevation.low.shadow,\n    },\n  } as const)\n\nexport const AddItemExpanded = (props: AddItemExpandedProps) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  return <AddItemStepperBase {...props} styles={styles} />\n}\n","import { spacing, elevation, responsive, Theme, useTheme, Variant } from '@instacart/ids-core'\nimport { AddItemStepperBase } from '../AddItemStepperBase'\n\nconst styles = (theme: Theme) => {\n  return {\n    disclaimer: {\n      color: theme.colors.systemGrayscale70,\n      cursor: 'default',\n      marginTop: 2,\n      paddingBottom: spacing.s8,\n      paddingLeft: spacing.s8,\n      paddingRight: spacing.s8,\n      textAlign: 'center',\n      ...theme.typography.bodySmall2,\n    },\n    wrapper: {\n      background: theme.colors.systemGrayscale00,\n      borderRadius: 18,\n      display: 'inline-block',\n      // unlike other AddItemExpanded* this is fixed as we prefer text to wrap\n      maxWidth: 136,\n      ...elevation.low.shadow,\n      [responsive.up('r')]: {\n        borderRadius: 20,\n        // unlike other AddItemExpanded* this is fixed as we prefer text to wrap\n        maxWidth: 144,\n      },\n    },\n  } as const\n}\nexport type AddItemExpandedDisclaimerProps = Variant<typeof AddItemStepperBase> & {\n  /**\n   * This disclaimer will be announced every time it changes\n   * TODO: JSDoc comment doesn't reflect in storybook\n   */\n  disclaimer: string\n}\n\nexport const AddItemExpandedDisclaimer = ({\n  disclaimer,\n  ...addItemProps\n}: AddItemExpandedDisclaimerProps) => {\n  const theme = useTheme()\n  const { wrapper: wrapperCss, disclaimer: disclaimerCss } = styles(theme)\n\n  return (\n    <div css={wrapperCss}>\n      <AddItemStepperBase {...addItemProps} />\n      <div aria-live=\"polite\" css={disclaimerCss}>\n        {disclaimer}\n      </div>\n    </div>\n  )\n}\n","import { ChangeEvent, Children, cloneElement } from 'react'\nimport { Base, combineStyles } from '@instacart/ids-core'\n\nexport type OptionIdentifierType = string\n\nconst baseStyles = {\n  wrapper: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'left',\n    whiteSpace: 'nowrap',\n  },\n} as const\n\nexport interface RadioButtonGroupBaseProps extends Base<typeof baseStyles> {\n  accessibleLabel: string\n  name: string\n  disabled?: boolean\n  onChange: (id: OptionIdentifierType) => void\n  value: OptionIdentifierType\n  // children?: Array<ReactElement>\n  children?: JSX.Element | JSX.Element[]\n}\n\nexport const RadioButtonGroupBase = ({\n  name,\n  accessibleLabel,\n  disabled,\n  onChange,\n  styles,\n  value,\n  children,\n}: RadioButtonGroupBaseProps) => {\n  const { wrapper: wrapperCSS } = combineStyles(baseStyles, styles)\n\n  return (\n    <div\n      css={wrapperCSS}\n      aria-label={accessibleLabel}\n      role=\"radiogroup\"\n      onChange={(e: ChangeEvent<HTMLInputElement>) => {\n        onChange(e.target.value)\n      }}\n    >\n      {children &&\n        Children.map(children, child => {\n          return cloneElement(child, {\n            groupDisabled: disabled,\n            name,\n            selectedValue: value,\n          })\n        })}\n    </div>\n  )\n}\n","import { A11Y, Base, combineStyles, spacing } from '@instacart/ids-core'\nimport { OptionIdentifierType } from './RadioButtonGroupBase'\n\nexport interface Option extends Base<typeof baseStyles> {\n  disabled?: boolean\n  groupDisabled?: boolean\n  value: OptionIdentifierType\n  selectedValue?: OptionIdentifierType\n  name?: string\n  children: string\n}\n\nconst baseStyles = {\n  input: {\n    ...A11Y.visuallyHidden,\n\n    // TODO: @aref-kashani when IDS pill designs are finalized, move this to a Pill implementation\n    '+label': {\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'center',\n      paddingLeft: spacing.s12,\n      paddingRight: spacing.s12,\n      position: 'relative',\n    },\n  },\n  inputWrapper: {\n    ':last-child': {\n      marginRight: 0,\n    },\n    float: 'left',\n    marginBottom: 4,\n    marginRight: 8,\n    marginTop: 4,\n  },\n} as const\n\nexport function RadioPillBase({\n  styles,\n  value,\n  selectedValue,\n  disabled,\n  groupDisabled,\n  name,\n  children,\n}: Option) {\n  const { inputWrapper: inputWrapperCSS, input: inputCSS } = combineStyles(baseStyles, styles)\n  return (\n    // we don't care bout a11y because we're not doing any handling, just fixing weird browser behaviors\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events\n    <span\n      key={value}\n      css={inputWrapperCSS}\n      onClick={e => {\n        // normally we don't want to stop propagation\n        // but here we explicitly want the browser to handle this event\n        // https://stackoverflow.com/questions/46993591/react-why-label-not-firing-onchange-for-checkbox\n        e.stopPropagation()\n      }}\n    >\n      <input\n        defaultChecked={value === selectedValue}\n        aria-checked={value === selectedValue}\n        css={inputCSS}\n        disabled={groupDisabled || disabled}\n        id={value}\n        name={name}\n        type=\"radio\"\n        value={value}\n        tabIndex={value === selectedValue ? 0 : -1} // Per aria, only one has to be 0, rest -1\n      />\n      <label htmlFor={value}>{children}</label>\n    </span>\n  )\n}\n","import { Theme, StylesOf, useTheme, Variant, blendColors } from '@instacart/ids-core'\nimport { RadioPillBase } from './RadioPillBase'\n\nexport interface RadioPillProps extends Variant<typeof RadioPillBase> {}\n\nconst BORDER_WIDTH = 2\n\nconst getStyles = (theme: Theme): StylesOf<typeof RadioPillBase> => ({\n  input: {\n    '&.focus-visible+label::after': {\n      border: `${BORDER_WIDTH}px solid ${theme.colors.systemGrayscale70}`,\n      borderRadius: 119,\n      bottom: -4 + -BORDER_WIDTH,\n      content: '\"\"',\n      display: 'block',\n      left: -4 + -BORDER_WIDTH,\n      position: 'absolute',\n      right: -4 + -BORDER_WIDTH,\n      // Designs call for -4 but need to add border since border-box sizing\n      top: -4 + -BORDER_WIDTH,\n    },\n    '&:checked+label': {\n      background: theme.colors.systemGrayscale20,\n      border: `${BORDER_WIDTH}px solid ${theme.colors.systemGrayscale70}`,\n    },\n    '&:disabled+label': {\n      color: theme.colors.systemGrayscale30,\n      cursor: 'default',\n    },\n    '&:disabled:checked+label': {\n      border: `${BORDER_WIDTH}px solid ${theme.colors.systemGrayscale30}`,\n      cursor: 'default',\n    },\n    '&:enabled:not(:checked):hover+label': {\n      background: blendColors(theme.colors.systemGrayscale10, theme.colors.systemGrayscale20, 51), // TODO: @aref-kashani follow up with Bruce\n    },\n    // TODO: @aref-kashani when IDS pill designs are finalized, move this to a Pill implementation\n    '+label': {\n      background: theme.colors.systemGrayscale10,\n      border: `${BORDER_WIDTH}px solid transparent`,\n      borderRadius: 14,\n      // We need a border box in all cases so the controls don't move, border is transparent in normal state\n      boxSizing: 'border-box',\n      color: theme.colors.systemGrayscale70,\n      height: 28,\n      minWidth: 58,\n      userSelect: 'none',\n      ...theme.typography.bodyMedium1,\n      cursor: 'pointer',\n    },\n    // TODO: @aref-kashani Designs call for active (pressed) style here, but per W3 standards active is only for buttons\n    // follow up with design. If we need to implement this, we'll have to flow styles for keydown\n    // and mouse click\n    // '&:active+label': {\n    //   boxSizing: 'border-box',\n    //   border: `${border_width}px solid ${theme.systemGrayscale20}`,\n    //   background: theme.systemGrayscale30,\n    //   ...elevation.high.shadow,\n    // },\n  },\n})\n\nexport const RadioPill = (props: RadioPillProps) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  return <RadioPillBase {...props} styles={styles} />\n}\n","import { elevation, responsive, Theme, useTheme, Variant } from '@instacart/ids-core'\nimport { ComponentProps } from 'react'\nimport { RadioButtonGroup, RadioButtonGroupBase, RadioPill } from '../../RadioButtonGroup'\nimport { AddItemStepperBase } from '../AddItemStepperBase'\n\nconst styles = (theme: Theme) => {\n  return {\n    modes: {\n      marginTop: 2,\n      paddingBottom: 8,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    wrapper: {\n      background: theme.colors.systemGrayscale00,\n      borderRadius: 18,\n      display: 'inline-block',\n      minWidth: 136,\n      ...elevation.low.shadow,\n\n      [responsive.up('r')]: {\n        borderRadius: 20,\n        minWidth: 144,\n      },\n    },\n  }\n}\n\nconst radioGroupStyles = { wrapper: { justifyContent: 'space-between' } } as const\n\nexport type AddItemExpandedUnitProps = Variant<typeof AddItemStepperBase> & {\n  // the supported units, radio option underneath\n  modes: ComponentProps<typeof RadioButtonGroup> & {\n    options: Array<{ id: string; label: string }>\n  }\n}\n\nexport const AddItemExpandedUnit = ({ modes, ...addItemProps }: AddItemExpandedUnitProps) => {\n  const theme = useTheme()\n  const { wrapper: wrapperCss, modes: modesCss } = styles(theme)\n\n  return (\n    <div css={wrapperCss}>\n      <AddItemStepperBase {...addItemProps} />\n      <div style={modesCss}>\n        <RadioButtonGroupBase {...modes} styles={radioGroupStyles}>\n          {modes.options.map(opt => (\n            <RadioPill key={opt.id} value={opt.id}>\n              {opt.label}\n            </RadioPill>\n          ))}\n        </RadioButtonGroupBase>\n      </div>\n    </div>\n  )\n}\n","import { useOnClickOutside } from '@instacart/ids-core'\nimport { MouseEvent, useEffect, useRef } from 'react'\nimport { AddItemButton, buttonSizeStyles } from './AddItemButton'\nimport { AddItemExpanded, AddItemExpandedProps } from './AddItemExpanded'\nimport { AddItemExpandedDisclaimer, AddItemExpandedDisclaimerProps } from './AddItemExpandedMessage'\nimport { AddItemExpandedUnit, AddItemExpandedUnitProps } from './AddItemExpandedUnit'\n\nexport type ComposedProps = Omit<\n  | Omit<AddItemExpandedUnitProps, 'modes'>\n  | Omit<AddItemExpandedDisclaimerProps, 'message'>\n  | AddItemExpandedProps,\n  'disabled'\n> &\n  Partial<Pick<AddItemExpandedUnitProps, 'modes'>> &\n  Partial<Pick<AddItemExpandedDisclaimerProps, 'disclaimer'>>\n\nfunction isExpandedMessage(props: ComposedProps): props is AddItemExpandedDisclaimerProps {\n  return !!props.disclaimer\n}\n\nfunction isExpandedUnit(props: ComposedProps): props is AddItemExpandedUnitProps {\n  return props.modes !== undefined\n}\n\nexport type AddItemProps = ComposedProps & {\n  accessibleLabel: string\n  isInteracting: boolean\n  setInteracting: (isInteracting: boolean) => void\n  buttonValueText: string | undefined\n  valueText?: string\n}\n\n// on mouseDown of this and child elements\nconst onMouseDown = (event: MouseEvent) => {\n  // prevent parent elements from becoming focused\n  // contain default events within the addItem experience\n  event.preventDefault()\n}\n\nconst styles = {\n  floatingInteractive: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  interactiveContainer: {\n    position: 'relative',\n    ...buttonSizeStyles.buttonWrapper,\n  },\n  interactivePlaceholder: {\n    ...buttonSizeStyles.button,\n  },\n} as const\n\nexport const AddItem = ({\n  accessibleLabel,\n  isInteracting,\n  setInteracting,\n  buttonValueText,\n  ...props\n}: AddItemProps) => {\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  const incrementButtonRef = useRef<HTMLButtonElement>(null)\n\n  // TODO - @mmarcuccio when adding popover, refactor the following to use it\n  useOnClickOutside(wrapperRef, () => {\n    // (to prevent needless callbacks)\n    if (isInteracting) {\n      setInteracting(false)\n    }\n  })\n\n  useEffect(() => {\n    // TODO: we should focus decrement button when disclaimer exists when disclaimer is a max one\n    // meaning that the increment button will be disabled\n    // maybe we should use allowIncrement allowDecrement and conditionally focus on the right one?\n    if (isInteracting) {\n      incrementButtonRef.current?.focus()\n    }\n  }, [isInteracting, incrementButtonRef])\n\n  const expandedComponent = () => {\n    // component with message has highest priority\n    if (isExpandedMessage(props)) {\n      return <AddItemExpandedDisclaimer {...props} incrementButtonRef={incrementButtonRef} />\n    }\n    if (isExpandedUnit(props)) {\n      return <AddItemExpandedUnit {...props} incrementButtonRef={incrementButtonRef} />\n    }\n    return <AddItemExpanded {...props} incrementButtonRef={incrementButtonRef} />\n  }\n\n  return (\n    // this isn't to handle user interaction, so we don't need a11y\n    // it's to prevent a parent item from becoming focused when child elements get clicked\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div ref={wrapperRef} onMouseDown={onMouseDown}>\n      {!isInteracting && (\n        <AddItemButton\n          aria-label={accessibleLabel}\n          value={buttonValueText}\n          onClick={event => {\n            event.preventDefault()\n            setInteracting(true)\n          }}\n        />\n      )}\n      {isInteracting && (\n        <div css={styles.interactiveContainer}>\n          {/* we need a placeholder so the document-flow doesn't change when addItem opens */}\n          <div css={styles.interactivePlaceholder} />\n          <div css={styles.floatingInteractive}>{expandedComponent()}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { spacing } from '@instacart/ids-core'\nimport { AddItem, AddItemProps } from '../AddItem'\n\nconst { s4 } = spacing\n\nexport interface ItemBAddItemProps extends AddItemProps {}\n\nconst styles = {\n  // because ItemBLink sets it's own pointer, we need to override here\n  cursor: 'auto',\n  position: 'absolute',\n  right: s4,\n  top: s4,\n  // make sure this is above the item itself for clicking\n  zIndex: 2,\n} as const\n\nexport const ItemBAddItem = (props: ItemBAddItemProps) => {\n  return (\n    // this isn't to handle user interaction, so we don't need a11y\n    // it's to prevent a parent item from taking the default action when an element in the\n    // addItem popover is clicked\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events\n    <div\n      css={styles}\n      onClick={e => {\n        e.preventDefault()\n      }}\n    >\n      <AddItem {...props} />\n    </div>\n  )\n}\n","import { forwardRef } from 'react'\nimport {\n  ButtonBase,\n  ButtonBaseProps,\n  responsive,\n  spacing,\n  useTheme,\n  Variant,\n} from '@instacart/ids-core'\n\nexport interface CouponClipButtonProps extends Exclude<Variant<typeof ButtonBase>, 'disabled'> {\n  applied?: boolean\n}\n\nexport const CouponClipButton = forwardRef<HTMLButtonElement, CouponClipButtonProps>(\n  function CouponClipButton({ children, applied, ...rest }, ref) {\n    const theme = useTheme()\n\n    const styles: ButtonBaseProps['styles'] = {\n      active: {\n        backgroundColor: theme.colors.brandPromotionalLight,\n        color: theme.colors.brandPromotionalDark,\n      },\n      button: {\n        backgroundColor: theme.colors.brandPromotionalLight,\n        borderRadius: theme.radius.r8,\n        color: theme.colors.brandPromotionalRegular,\n        height: 32,\n        width: '100%',\n      },\n      content: {\n        // TODO: @aref-kashani size too big for mobile, circle back when mobile items have min-width\n        ...theme.typography.bodySmall1,\n        marginLeft: spacing.s12,\n        marginRight: spacing.s12,\n        [responsive.up('r')]: {\n          ...theme.typography.bodyMedium1,\n        },\n      },\n      disabled: {\n        // button is disabled when coupon is applied\n        backgroundColor: theme.colors.systemGrayscale00,\n        color: theme.colors.brandPromotionalDark,\n      },\n      focusRing: {\n        borderRadius: theme.radius.r12,\n      },\n      hover: {\n        color: theme.colors.brandPromotionalDark,\n      },\n    }\n\n    return (\n      <ButtonBase {...rest} styles={styles} ref={ref} disabled={applied}>\n        {children}\n      </ButtonBase>\n    )\n  }\n)\n","import { spacing } from '@instacart/ids-core'\nimport { CouponClipButton, CouponClipButtonProps } from '../CouponClipButton'\n\nconst { s4 } = spacing\n\nexport interface ItemBCouponClipButtonProps extends CouponClipButtonProps {}\n\nconst styles = {\n  // because ItemBLink sets it's own pointer, we need to override here\n  cursor: 'auto',\n  paddingTop: s4,\n} as const\n\nexport const ItemBCouponClipButton = (props: ItemBCouponClipButtonProps) => {\n  return (\n    // this isn't to handle user interaction, so we don't need a11y\n    // it's to prevent a parent item from taking the default action when an element in the\n    // addItem popover is clicked\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events\n    <div\n      css={styles}\n      onClick={e => {\n        e.preventDefault()\n      }}\n    >\n      <CouponClipButton {...props} />\n    </div>\n  )\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemPriceSetBase } from '../ItemPriceSetBase'\n\nexport interface ItemPriceSetProps extends Variant<typeof ItemPriceSetBase> {}\n\nexport const ItemPriceSet = (props: ItemPriceSetProps) => {\n  return <ItemPriceSetBase {...props} />\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemWeightBase } from '../ItemWeightBase'\n\nexport interface ItemWeightProps extends Variant<typeof ItemWeightBase> {}\n\nexport const ItemWeight = (props: ItemWeightProps) => {\n  return <ItemWeightBase {...props} />\n}\n","import { ItemB as Item } from './ItemB'\nimport { AttributeList } from './AttributeList'\nimport { Bottom } from './Bottom'\nimport { Top } from './Top'\nimport { Overlay } from './Overlay'\n\nimport { ItemAttribute } from '../../atoms/ItemAttribute'\nimport { ItemDynamicLabel } from '../../atoms/ItemDynamicLabel'\nimport { ItemImage } from '../../atoms/ItemImage'\nimport { ItemBLink as ItemLink } from './ItemBLink'\nimport { ItemBAddItem as AddItem } from './ItemBAddItem'\nimport { ItemBCouponClipButton as CouponClipButton } from './ItemBCouponClipButton'\nimport { ItemName } from '../../atoms/ItemName'\nimport { ItemPrice } from '../../atoms/ItemPrice'\nimport { ItemPriceSet } from '../../atoms/ItemPriceSet'\nimport { ItemRegularPrice } from '../../atoms/ItemRegularPrice'\nimport { ItemWeight } from '../../atoms/ItemWeight'\n\nexport const ItemB = {\n  AddItem,\n  AttributeList,\n  Bottom,\n  CouponClipButton,\n  Item,\n  ItemAttribute,\n  ItemDynamicLabel,\n  ItemImage,\n  ItemLink,\n  ItemName,\n  ItemPrice,\n  ItemPriceSet,\n  ItemRegularPrice,\n  ItemWeight,\n  Overlay,\n  Top,\n}\n","import { Tag } from '../../organisms/ItemTile/ItemTile.types'\nimport { ItemAttribute } from '../../atoms/ItemAttribute'\n\nconst containerStyles = () => {\n  return {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    marginLeft: -2,\n    marginTop: -2,\n    maxHeight: 150,\n  } as const\n}\n\nexport type AttributeListProps = {\n  attributes: Tag[]\n}\n\nexport const AttributeList = ({ attributes }: AttributeListProps) => {\n  const styles = containerStyles()\n\n  if (!attributes.length) return null\n\n  return (\n    <ul css={styles}>\n      {attributes.map(attribute => (\n        <li key={attribute.id} data-test={`tag-cell ${attribute.id}`}>\n          <ItemAttribute attribute={attribute} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemDynamicLabelBase } from '../ItemDynamicLabelBase'\n\nexport interface ItemDynamicLabelProps extends Variant<typeof ItemDynamicLabelBase> {}\n\nexport const ItemDynamicLabel = (props: ItemDynamicLabelProps) => {\n  return <ItemDynamicLabelBase {...props} />\n}\n","import type { Variant } from '@instacart/ids-core'\nimport { ItemRegularPriceBase } from '../ItemRegularPriceBase'\n\nexport interface ItemRegularPriceProps extends Variant<typeof ItemRegularPriceBase> {\n  strikeThrough?: boolean\n}\n\nexport const ItemRegularPrice = (props: ItemRegularPriceProps) => {\n  const { strikeThrough, ...rest } = props\n  const styles = strikeThrough ? { root: { textDecoration: 'line-through' } } : {}\n  return <ItemRegularPriceBase {...rest} styles={styles} />\n}\n","import { ComponentPropsWithoutRef, ReactNode } from 'react'\nimport { Base, combineStyles } from '@instacart/ids-core'\nimport type { FunctionComponent } from 'react'\n\nconst getStyles = () =>\n  ({\n    name: {\n      textAlign: 'unset',\n      width: '100%',\n    },\n  } as const)\n\nexport interface ItemButtonProps\n  extends ComponentPropsWithoutRef<'button'>,\n    Base<typeof getStyles> {\n  children: ReactNode\n}\n\nexport const ItemButton: FunctionComponent<ItemButtonProps> = props => {\n  const { children, ...rest } = props\n  const { name } = combineStyles(getStyles(), props.styles)\n\n  return (\n    <button {...rest} css={name}>\n      {children}\n    </button>\n  )\n}\n"],"sourceRoot":""}