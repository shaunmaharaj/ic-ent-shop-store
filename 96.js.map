{"version":3,"sources":["webpack://UnataWidgets/./packages/enterprise-ui-nutrition/NutritionLine.js","webpack://UnataWidgets/./packages/enterprise-ui-nutrition/CalorieLine.js","webpack://UnataWidgets/./packages/enterprise-ui-nutrition/NutritionDivider.js","webpack://UnataWidgets/./packages/enterprise-ui-nutrition/NutritionDisclaimerText.js","webpack://UnataWidgets/./packages/enterprise-ui-nutrition/NutritionFootnote.js","webpack://UnataWidgets/./packages/enterprise-ui-nutrition/Nutrition.js","webpack://UnataWidgets/./packages/enterprise-ui-nutrition/index.js"],"names":["fieldShape","name","PropTypes","string","isRequired","amount","daily_value","children","arrayOf","shape","propTypes","isChild","bool","padding","number","isFirst","useStyles","createStyles","tokens","nutritionLine","borderTop","utils","toPx","border","width","regular","color","neutral","grey3","nutritionNameLarge","fontSize","size","font","large","nutritionNameNormal","body","lineContainer","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingRight","spacing","small","whiteSpace","dailyValue","marginLeft","displayName","defaultLang","NutritionLine","forwardRef","props","ref","styles","useTokens","nestedPadding","css","undefined","data-test","id","align","component","bold","style","paddingLeft","map","child","memo","i18n","object","flexColContainer","flexRowContainer","justifyContent","perServing","lineHeight","margin","calorieLine","marginBottom","xxxSmall","calorieLineText","h2","CalorieLine","lang","parseInt","Math","round","divider","black","NutritionDivider","disclaimer","fontWeight","weight","fontStyle","NutritionDisclaimerText","footnote","marginTop","base","caption","NutritionFootnote","perContainer","fields","array","secondaryFields","nutritionDisclaimer","fullWidth","nutrition","maxWidth","label","borderBottom","thick","h1","containerPadding","largeFont","Nutrition","primaryFields","filter","field","toLowerCase","calorieField","find","tabIndex","aria-hidden","Fragment","index"],"mappings":"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","file":"96.js","sourcesContent":["import React, { forwardRef, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { ScreenReaderText, Text, createStyles, useTokens, utils } from '@instacart/cocktail'\n\nconst fieldShape = {\n  /** Nutrition Name to display */\n  name: PropTypes.string.isRequired,\n  /** Amount in Units to display */\n  amount: PropTypes.string.isRequired,\n  /** Value in Percentage to display */\n  daily_value: PropTypes.string,\n}\nfieldShape.children = PropTypes.arrayOf(PropTypes.shape(fieldShape))\n\nconst propTypes = {\n  /** Nutrition Name to display */\n  name: PropTypes.string.isRequired,\n  /** Amount in Unit to display */\n  amount: PropTypes.string.isRequired,\n  /** Value in Percentage to display */\n  daily_value: PropTypes.string,\n  /** Nested info */\n  children: PropTypes.arrayOf(PropTypes.shape(fieldShape)),\n  /** Is a child element */\n  isChild: PropTypes.bool,\n  /** Child line indent to be incrementally increased */\n  padding: PropTypes.number,\n  /** Flag for first rendered secondary field */\n  isFirst: PropTypes.bool,\n}\n\nconst useStyles = createStyles(\n  tokens => ({\n    nutritionLine: {\n      borderTop: utils.toPx`${tokens.border.width.regular} solid ${tokens.color.neutral.grey3}`,\n    },\n    nutritionNameLarge: {\n      fontSize: tokens.size.font.large,\n    },\n    nutritionNameNormal: {\n      fontSize: tokens.size.font.body,\n    },\n    lineContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingTop: '2px',\n      paddingBottom: '2px',\n    },\n    amount: {\n      fontSize: tokens.size.font.body,\n      paddingRight: tokens.size.spacing.small,\n      whiteSpace: 'nowrap',\n    },\n    dailyValue: {\n      fontSize: tokens.size.font.large,\n      marginLeft: 'auto',\n      whiteSpace: 'nowrap',\n    },\n  }),\n  { displayName: 'Nutrition Line' }\n)\n\nconst defaultLang = {\n  dailyValue: 'Daily Value',\n}\n\nconst NutritionLine = forwardRef((props, ref) => {\n  const styles = useStyles(props)\n  const tokens = useTokens()\n  const { amount, daily_value, name, children, isChild, padding = 0, isFirst } = props\n  const nestedPadding = padding + tokens.size.spacing.small\n\n  return (\n    <li\n      ref={ref}\n      css={!isFirst ? styles.nutritionLine : undefined}\n      data-test=\"nutrition-line\"\n      id=\"test\"\n    >\n      <div css={styles.lineContainer}>\n        <Text\n          align=\"left\"\n          component=\"span\"\n          css={isChild ? styles.nutritionNameNormal : styles.nutritionNameLarge}\n          bold={!isChild}\n          style={isChild ? { paddingLeft: `${padding}px` } : {}}\n          data-test={`nutrition-${name}`}\n        >\n          {name}&nbsp;\n        </Text>\n        <span css={styles.amount}> {amount}</span>\n        {daily_value && (\n          <>\n            <Text bold css={styles.dailyValue}>\n              {' '}\n              {daily_value}\n              {\n                // eslint-disable-next-line react/jsx-no-literals\n                ' %'\n              }\n            </Text>\n            <ScreenReaderText>{defaultLang.dailyValue}</ScreenReaderText>\n          </>\n        )}\n      </div>\n      {children && (\n        <ul>\n          {children.map(child => {\n            return (\n              <NutritionLine\n                key={`line-${name}`}\n                {...child}\n                isChild\n                padding={nestedPadding}\n                tokens={tokens}\n              />\n            )\n          })}\n        </ul>\n      )}\n    </li>\n  )\n})\n\nNutritionLine.propTypes = propTypes\n\nexport default memo(NutritionLine)\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, createStyles } from '@instacart/cocktail'\n\nconst propTypes = {\n  /** Serving Size to display */\n  amount: PropTypes.string.isRequired,\n  /** Nutrition Name to display */\n  name: PropTypes.string.isRequired,\n  /** Custom language strings */\n  // eslint-disable-next-line react/forbid-prop-types\n  i18n: PropTypes.object,\n}\n\nconst useStyles = createStyles(\n  tokens => ({\n    flexColContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    flexRowContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    amount: {\n      whiteSpace: 'nowrap',\n    },\n    perServing: {\n      fontSize: tokens.size.font.large,\n      lineHeight: 1.5,\n      margin: 0,\n    },\n    calorieLine: {\n      marginBottom: tokens.size.spacing.xxxSmall,\n    },\n    // Don't utilize built in variant for this\n    // Treating this as a h2 would change the font\n    calorieLineText: {\n      fontSize: tokens.size.font.h2,\n      lineHeight: 1,\n    },\n  }),\n  { displayName: 'CalorieLine' }\n)\n\nconst defaultLang = {\n  perServing: 'Amount per serving',\n}\n\nconst CalorieLine = forwardRef((props, ref) => {\n  const styles = useStyles(props)\n  const { amount, name, i18n } = props\n  const lang = { ...defaultLang, ...i18n }\n  return (\n    <div ref={ref}>\n      <div css={styles.flexColContainer}>\n        <h3 css={styles.perServing}>{lang.perServing}</h3>\n        <div css={[styles.flexRowContainer, styles.calorieLine]}>\n          <Text bold data-test=\"Calories\" css={[styles.calorieLineText]}>\n            {name}\n          </Text>\n          <Text bold css={[styles.amount, styles.calorieLineText]}>\n            {' '}\n            {parseInt(amount, 10) ? Math.round(parseInt(amount, 10)) : amount}\n          </Text>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nCalorieLine.propTypes = propTypes\n\nexport default CalorieLine\n","import React from 'react'\nimport { createStyles } from '@instacart/cocktail'\n\nconst useStyles = createStyles(\n  tokens => ({\n    divider: {\n      borderTop: `${tokens.color.neutral.black} 6px solid`,\n    },\n  }),\n  {\n    displayName: 'NutritionDivider',\n  }\n)\nconst NutritionDivider = props => {\n  const styles = useStyles(props)\n  return <div css={styles.divider} />\n}\n\nexport default NutritionDivider\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { createStyles } from '@instacart/cocktail'\n\nconst propTypes = {\n  /** Disclaimer to display */\n  disclaimer: PropTypes.string.isRequired,\n}\n\nconst useStyles = createStyles(\n  tokens => ({\n    disclaimer: {\n      fontSize: tokens.size.font.large,\n      fontWeight: tokens.font.weight.bold,\n      fontStyle: 'italic',\n    },\n  }),\n  { displayName: 'NutritionDisclaimerText' }\n)\n\nconst NutritionDisclaimerText = forwardRef((props, ref) => {\n  const styles = useStyles(props)\n  const { disclaimer } = props\n  return (\n    <p ref={ref} css={styles.disclaimer}>\n      {disclaimer}\n    </p>\n  )\n})\n\nNutritionDisclaimerText.propTypes = propTypes\n\nexport default NutritionDisclaimerText\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { createStyles } from '@instacart/cocktail'\n\nconst propTypes = {\n  /** Footnote to display */\n  footnote: PropTypes.string.isRequired,\n}\n\nconst useStyles = createStyles(\n  tokens => ({\n    footnote: {\n      marginTop: tokens.size.base,\n      fontSize: tokens.size.font.caption,\n    },\n  }),\n  { displayName: 'NutritionFootnote' }\n)\n\nconst NutritionFootnote = forwardRef((props, ref) => {\n  const styles = useStyles(props)\n  const { footnote } = props\n  return (\n    <div ref={ref} css={styles.footnote}>\n      {footnote}\n    </div>\n  )\n})\n\nNutritionFootnote.propTypes = propTypes\n\nexport default NutritionFootnote\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, createStyles, utils } from '@instacart/cocktail'\nimport NutritionLine from './NutritionLine'\nimport CalorieLine from './CalorieLine'\nimport NutritionDivider from './NutritionDivider'\nimport NutritionDisclaimerText from './NutritionDisclaimerText'\nimport NutritionFootnote from './NutritionFootnote'\n\nconst propTypes = {\n  /** Serving Size to display */\n  amount: PropTypes.string.isRequired,\n  /** Servings Per Container to display */\n  perContainer: PropTypes.string.isRequired,\n  /** Nutritional Type data */\n  // eslint-disable-next-line react/forbid-prop-types\n  fields: PropTypes.array.isRequired,\n  /** Optional Nutritional Type data */\n  // eslint-disable-next-line react/forbid-prop-types\n  secondaryFields: PropTypes.array,\n  /** Optional Nutrition Disclaimer */\n  nutritionDisclaimer: PropTypes.string,\n  /** Optional Footnote */\n  footnote: PropTypes.string,\n  /* Toggle for full width */\n  fullWidth: PropTypes.bool,\n  /** Custom language strings */\n  // eslint-disable-next-line react/forbid-prop-types\n  i18n: PropTypes.object,\n}\n\nconst useStyles = createStyles(\n  tokens => ({\n    nutrition: {\n      width: '100%',\n      maxWidth: '486px',\n    },\n    fullWidth: {\n      maxWidth: '100%',\n    },\n    label: {\n      borderBottom: utils.toPx`${tokens.color.neutral.black} solid ${tokens.border.width.thick}`,\n      fontSize: tokens.size.font.h1,\n      lineHeight: tokens.size.lineHeight.h2,\n      marginBottom: 0,\n      marginTop: 0,\n      paddingBottom: '4px',\n    },\n    containerPadding: {\n      paddingTop: '4px',\n      paddingBottom: '4px',\n    },\n    largeFont: {\n      fontSize: tokens.size.font.large,\n    },\n    flexRowContainer: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  }),\n  { displayName: 'Nutrition' }\n)\n\nconst defaultLang = {\n  label: 'Nutrition Facts',\n  amount: 'Serving Size',\n  perContainer: 'Servings Per Container',\n  dailyValue: '% Daily Value',\n}\n\nconst Nutrition = forwardRef((props, ref) => {\n  const styles = useStyles(props)\n  const {\n    amount,\n    fields,\n    secondaryFields,\n    perContainer,\n    fullWidth = false,\n    i18n,\n    nutritionDisclaimer,\n    footnote,\n  } = props\n  const lang = { ...defaultLang, ...i18n }\n  const primaryFields = fields.filter(field => field.name.toLowerCase() !== 'calories')\n  const calorieField = fields.find(field => {\n    return field.name.toLowerCase() === 'calories'\n  })\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    <div tabIndex=\"0\" ref={ref} css={[styles.nutrition, fullWidth && styles.fullWidth]}>\n      <h2 css={styles.label}>{lang.label}</h2>\n      {nutritionDisclaimer && <NutritionDisclaimerText disclaimer={nutritionDisclaimer} />}\n      <div css={styles.containerPadding}>\n        <Text css={styles.largeFont}>{perContainer}</Text>\n        <Text bold css={[styles.largeFont, styles.flexRowContainer]}>\n          <span aria-hidden=\"true\">{lang.amount}</span>\n          <span>{amount}</span>\n        </Text>\n      </div>\n      <NutritionDivider />\n      <div css={styles.containerPadding}>\n        <CalorieLine {...calorieField} />\n      </div>\n      <NutritionDivider />\n      <ul>\n        <li>\n          <Text css={styles.containerPadding} align=\"right\" bold>\n            {lang.dailyValue}\n          </Text>\n        </li>\n        {primaryFields.map(field => (\n          <NutritionLine key={field.name} {...field} />\n        ))}\n        {secondaryFields && (\n          <React.Fragment>\n            <NutritionDivider />\n            {secondaryFields.map((field, index) => {\n              return <NutritionLine key={field.name} {...field} isFirst={index === 0} />\n            })}\n          </React.Fragment>\n        )}\n      </ul>\n      {footnote && (\n        <React.Fragment>\n          <NutritionDivider />\n          <NutritionFootnote footnote={footnote} />\n        </React.Fragment>\n      )}\n    </div>\n  )\n})\n\nNutrition.propTypes = propTypes\n\nexport default Nutrition\n","import Nutrition from './Nutrition'\n\nexport default Nutrition\n"],"sourceRoot":""}