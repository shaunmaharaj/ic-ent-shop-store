{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/icExpress/ExpressPromoPlanChange/ExpressPromoPlanChangeModal.tsx"],"names":["useStyles","createStyles","theme","badgeContainer","alignItems","background","colors","brandExpressLight","display","flexDirection","img","marginTop","justifyContent","padding","body","fontSize","fontWeight","opacity","bodyContainer","button","margin","width","buttonGroup","finePrint","heading","modalContent","primaryButton","height","ExpressPromoPlanChangeModal","props","isMobile","useIsMobile","config","useConfig","lang","useLang","styles","plan","onPlanChange","onCancel","promoPrice","parseFloat","price","promoFullPrice","full_price","discountAmount","Math","round","formattedPrice","currencySymbol","formattedFullPrice","roundedCorners","onClick","data-test","css","layout","src","alt","component","variant","bold","align","interpolate","icExpress","profilePage","promoPlanChange","modalHeaderText","modalBodyText","fullPrice","term","term_length","id","modalAcceptButtonText","modalCancelButtonText","modalFinePrintText"],"mappings":"sIAAA,yOAsBA,MAAMA,EAAYC,YAAaC,IAAS,CACtCC,eAAgB,CACdC,WAAY,SACZC,WAAYH,EAAMI,OAAOC,kBACzBC,QAAS,OACTC,cAAe,SACfC,IAAK,CACH,kBAAmB,CACjBC,UAAW,KAGfC,eAAgB,SAChBC,QAAS,IAEXC,KAAM,CACJC,SAAU,UACVC,WAAY,IACZC,QAAS,KAEXC,cAAe,CACbL,QAAS,sBAEXM,OAAQ,CACNC,OAAQ,UACRC,MAAO,QAETC,YAAa,CACXX,UAAW,IAEbY,UAAW,CACTZ,UAAW,GAEba,QAAS,CACPT,SAAU,SACVC,WAAY,QAEdS,aAAc,CACZZ,QAAS,GAEXa,cAAe,CACbX,SAAU,MACVY,OAAQ,aA6EGC,UAzEsBC,IACnC,MAAMC,EAAWC,cACXC,EAASC,cACTC,EAAOC,cACPC,EAASpC,KACT,KAAEqC,EAAF,aAAQC,EAAR,SAAsBC,GAAaV,EAEnCW,EAAaC,WAAWJ,EAAKK,OAC7BC,EAAiBF,WAAWJ,EAAKO,YAAcP,EAAKK,OACpDG,EAAiBC,KAAKC,MAAMJ,EAAiBH,GAC7CQ,EAAkB,GAAEhB,EAAOiB,iBAAiBH,KAAKC,MAAMP,KACvDU,EAAsB,GAAElB,EAAOiB,iBAAiBH,KAAKC,MAAMJ,KAEjE,OACE,YAAC,IAAD,CAAgBQ,gBAAiBrB,EAAjC,WACIA,GACA,YAAC,IAAD,UACE,YAAC,IAAD,CAAcsB,QAAS,IAAMb,IAAYc,YAAU,0BAGvD,YAAC,IAAD,CAAcC,IAAKlB,EAAOX,aAAc8B,OAAO,SAA/C,UACE,mBAAKD,IAAKlB,EAAOjC,eAAjB,UACE,YAAC,IAAD,CACEqD,IAAK,8CACLC,IAAI,0BAEN,YAAC,IAAD,CAAYD,IAAK,sCAAuCC,IAAI,qBAE9D,mBAAKH,IAAKlB,EAAOlB,cAAjB,UACE,YAAC,KAAD,CAAMoC,IAAKlB,EAAOZ,QAASkC,UAAU,KAAKC,QAAQ,SAASC,MAAI,EAACC,MAAM,SAAtE,SACGC,YAAY5B,EAAK6B,UAAUC,YAAYC,gBAAgBC,gBAAiB,CACvErB,eAAiB,GAAEb,EAAOiB,iBAAiBJ,QAG/C,YAAC,KAAD,CAAMS,IAAKlB,EAAOtB,KAAM6C,QAAQ,QAAQE,MAAM,SAA9C,SACGC,YAAY5B,EAAK6B,UAAUC,YAAYC,gBAAgBE,cAAe,CACrEC,UAAWlB,EACXR,MAAOM,EACPqB,KAAMhC,EAAKiC,aAAe,OAG9B,mBAAKhB,IAAKlB,EAAOd,YAAjB,UACE,YAAC,IAAD,CACE+B,YAAU,wBACVC,IAAK,CAAClB,EAAOjB,OAAQiB,EAAOV,eAC5B0B,QAAS,IAAMd,EAAaD,EAAKkC,IAHnC,SAKGrC,EAAK6B,UAAUC,YAAYC,gBAAgBO,wBAE7C1C,GACC,YAAC,IAAD,CACEuB,YAAU,0BACVC,IAAKlB,EAAOjB,OACZwC,QAAQ,OACRP,QAASb,EAJX,SAMGL,EAAK6B,UAAUC,YAAYC,gBAAgBQ,2BAIlD,YAAC,KAAD,CAAMd,QAAQ,UAAUL,IAAKlB,EAAOb,UAApC,SACGuC,YAAY5B,EAAK6B,UAAUC,YAAYC,gBAAgBS,mBAAoB,CAC1EN,UAAWlB,EACXR,MAAOM,EACPqB,KAAMhC,EAAKiC,aAAe","file":"76.js","sourcesContent":["import React from 'react'\nimport {\n  Button,\n  ModalContainer,\n  ModalContainerAdornment,\n  ModalContent,\n  ModalXButton,\n  Text,\n} from '@instacart/cocktail'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport AssetImage from '@app/react/common/AssetImage'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { ExpressPlan } from '@app/services/express/types'\nimport { useIsMobile } from '@app/react/common/hooks/useIsMobile'\n\ninterface ExpressPromoPlanChangeModalProps {\n  plan: ExpressPlan\n  onPlanChange: (planId: number) => void\n  onCancel: () => void\n}\n\nconst useStyles = createStyles(theme => ({\n  badgeContainer: {\n    alignItems: 'center',\n    background: theme.colors.brandExpressLight,\n    display: 'flex',\n    flexDirection: 'column',\n    img: {\n      ':nth-of-type(2)': {\n        marginTop: 30,\n      },\n    },\n    justifyContent: 'center',\n    padding: 20,\n  },\n  body: {\n    fontSize: '0.975em',\n    fontWeight: 500,\n    opacity: 0.75,\n  },\n  bodyContainer: {\n    padding: '0px 25px 25px 25px',\n  },\n  button: {\n    margin: '4px 0px',\n    width: '100%',\n  },\n  buttonGroup: {\n    marginTop: 20,\n  },\n  finePrint: {\n    marginTop: 5,\n  },\n  heading: {\n    fontSize: '1.75em',\n    fontWeight: 'bold',\n  },\n  modalContent: {\n    padding: 0,\n  },\n  primaryButton: {\n    fontSize: '1em',\n    height: '2.85em',\n  },\n}))\n\nconst ExpressPromoPlanChangeModal = (props: ExpressPromoPlanChangeModalProps) => {\n  const isMobile = useIsMobile()\n  const config = useConfig()\n  const lang = useLang()\n  const styles = useStyles()\n  const { plan, onPlanChange, onCancel } = props\n\n  const promoPrice = parseFloat(plan.price)\n  const promoFullPrice = parseFloat(plan.full_price || plan.price)\n  const discountAmount = Math.round(promoFullPrice - promoPrice)\n  const formattedPrice = `${config.currencySymbol}${Math.round(promoPrice)}`\n  const formattedFullPrice = `${config.currencySymbol}${Math.round(promoFullPrice)}`\n\n  return (\n    <ModalContainer roundedCorners={!isMobile}>\n      {!isMobile && (\n        <ModalContainerAdornment>\n          <ModalXButton onClick={() => onCancel()} data-test=\"desktop-modal-close\" />\n        </ModalContainerAdornment>\n      )}\n      <ModalContent css={styles.modalContent} layout=\"dialog\">\n        <div css={styles.badgeContainer}>\n          <AssetImage\n            src={'images/ic-express/costco-plus-instacart.svg'}\n            alt=\"costco-plus-instacart\"\n          />\n          <AssetImage src={'images/ic-express/grocery-items.svg'} alt=\"grocery-items\" />\n        </div>\n        <div css={styles.bodyContainer}>\n          <Text css={styles.heading} component=\"h1\" variant=\"banner\" bold align=\"center\">\n            {interpolate(lang.icExpress.profilePage.promoPlanChange.modalHeaderText, {\n              discountAmount: `${config.currencySymbol}${discountAmount}`,\n            })}\n          </Text>\n          <Text css={styles.body} variant=\"large\" align=\"center\">\n            {interpolate(lang.icExpress.profilePage.promoPlanChange.modalBodyText, {\n              fullPrice: formattedFullPrice,\n              price: formattedPrice,\n              term: plan.term_length || '',\n            })}\n          </Text>\n          <div css={styles.buttonGroup}>\n            <Button\n              data-test=\"promo-plan-modal-save\"\n              css={[styles.button, styles.primaryButton]}\n              onClick={() => onPlanChange(plan.id)}\n            >\n              {lang.icExpress.profilePage.promoPlanChange.modalAcceptButtonText}\n            </Button>\n            {isMobile && (\n              <Button\n                data-test=\"promo-plan-modal-cancel\"\n                css={styles.button}\n                variant=\"link\"\n                onClick={onCancel}\n              >\n                {lang.icExpress.profilePage.promoPlanChange.modalCancelButtonText}\n              </Button>\n            )}\n          </div>\n          <Text variant=\"caption\" css={styles.finePrint}>\n            {interpolate(lang.icExpress.profilePage.promoPlanChange.modalFinePrintText, {\n              fullPrice: formattedFullPrice,\n              price: formattedPrice,\n              term: plan.term_length || '',\n            })}\n          </Text>\n        </div>\n      </ModalContent>\n    </ModalContainer>\n  )\n}\n\nexport default ExpressPromoPlanChangeModal\n"],"sourceRoot":""}