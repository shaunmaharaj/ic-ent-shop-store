{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/account/substitutions/substitutionsController.js"],"names":["angular","module","controller","$scope","Restangular","analytics","auth","config","imageURLService","productDetailsModal","allow","user","always_allow_substitution","categorizedItemComments","updateGlobalSubstitutions","logEvent","update","getCategorizedItemComments","all","getList","then","itemComments","itemCommentsFiltered","itemComment","store_product","categories","name","updateItemComment","one","id","customPUT","comment","allow_sub","deleteItemComment","itemCommentId","remove","hasComments"],"mappings":"mSAGeA,cACZC,OAAO,gCAAiC,IACxCC,WACC,0BAHW,4FAIX,SAAUC,EAAQC,EAAaC,EAAWC,EAAMC,EAAQC,EAAiBC,GACvEN,EAAOI,OAASA,EAChBJ,EAAOO,MAAQJ,EAAKK,KAAKC,0BACzBT,EAAOU,wBAA0B,KACjCV,EAAOM,oBAAsBA,EAC7BN,EAAOK,gBAAkBA,EAEzBL,EAAOW,0BAA4B,SAAUJ,GAC3CL,EAAUU,SAAS,wBAAyB,UAC5CT,EAAKU,OAAO,CAAEJ,0BAA2BF,KAG3CP,EAAOc,2BAA6B,WAClCb,EAAYc,IAAI,iBACbC,UACAC,KAAKC,IAEJ,MAAMC,EAAuB,IAASD,EAAc,+BACpDlB,EAAOU,wBAA0B,IAAUS,EAAsBC,GACxDA,EAAYC,cAAcC,WAAW,GACxCF,EAAYC,cAAcC,WAAW,GAAGC,KACxC,OAKZvB,EAAOwB,kBAAoB,SAAUJ,GACnCnB,EAAYwB,IAAI,gBAAiBL,EAAYM,IAAIC,UAAU,CACzDC,QAASR,EAAYQ,QACrBC,UAAWT,EAAYS,aAI3B7B,EAAO8B,kBAAoB,SAAUC,GACnC9B,EAAYwB,IAAI,gBAAiBM,GAC9BC,SACAf,KAAK,KACJjB,EAAOc,gCAIbd,EAAOiC,YAAc,WACnB,OAAQ,IAAUjC,EAAOU,0BAG3BV,EAAOc","file":"substitutionsController.js","sourcesContent":["import _ from 'lodash'\nimport angular from 'angular'\n\nexport default angular\n  .module('SubstitutionsControllerModule', [])\n  .controller(\n    'SubstitutionsController',\n    function ($scope, Restangular, analytics, auth, config, imageURLService, productDetailsModal) {\n      $scope.config = config\n      $scope.allow = auth.user.always_allow_substitution\n      $scope.categorizedItemComments = null\n      $scope.productDetailsModal = productDetailsModal\n      $scope.imageURLService = imageURLService\n\n      $scope.updateGlobalSubstitutions = function (allow) {\n        analytics.logEvent('account substitutions', 'submit')\n        auth.update({ always_allow_substitution: allow })\n      }\n\n      $scope.getCategorizedItemComments = function () {\n        Restangular.all('item_comments')\n          .getList()\n          .then(itemComments => {\n            // filter out items that have no categories\n            const itemCommentsFiltered = _.filter(itemComments, 'store_product.categories[0]')\n            $scope.categorizedItemComments = _.groupBy(itemCommentsFiltered, itemComment => {\n              return itemComment.store_product.categories[0]\n                ? itemComment.store_product.categories[0].name\n                : ''\n            })\n          })\n      }\n\n      $scope.updateItemComment = function (itemComment) {\n        Restangular.one('item_comments', itemComment.id).customPUT({\n          comment: itemComment.comment,\n          allow_sub: itemComment.allow_sub,\n        })\n      }\n\n      $scope.deleteItemComment = function (itemCommentId) {\n        Restangular.one('item_comments', itemCommentId)\n          .remove()\n          .then(() => {\n            $scope.getCategorizedItemComments()\n          })\n      }\n\n      $scope.hasComments = function () {\n        return !_.isEmpty($scope.categorizedItemComments)\n      }\n\n      $scope.getCategorizedItemComments()\n    }\n  )\n"],"sourceRoot":""}