{"version":3,"sources":["webpack://UnataWidgets/./packages/enterprise-account-import/components/AccountImportNotice.js","webpack://UnataWidgets/./packages/enterprise-account-import/components/AccountLinkedNotice.js","webpack://UnataWidgets/./packages/enterprise-account-import/components/AccountImportModal.js","webpack://UnataWidgets/./packages/enterprise-account-import/components/AccountImportSuccessModal.js","webpack://UnataWidgets/./packages/enterprise-account-import/components/AccountImportErrorModal.js","webpack://UnataWidgets/./packages/enterprise-account-import/assets/images/ic-logo.svg"],"names":["useStyles","createStyles","tokens","root","padding","size","spacing","small","background","color","neutral","grey1","borderRadius","border","radius","regular","heading","marginTop","footer","display","flexFlow","justifyContent","alignItems","utils","mediaQuery","maxWidth","breakpoint","button","width","logo","displayName","AccountImportNotice","onImportClick","restProps","styles","lang","configService","selectors","getLang","css","component","variant","bold","icImportAccount","title","intro","listTitle","featureList","map","feature","index","onClick","data-test","importAccount","src","InstacartLogo","alt","propTypes","PropTypes","func","isRequired","memo","AccountLinkedNotice","props","linkedTitle","accountLinked","margin","minWidth","fontSize","toPx","font","h3","textAlign","features","overflow","list","large","dontAskMeAgain","medium","AccountImportModal","cancel","desktop","useMediaQuery","icImportOptOut","setIcImportOptOut","useState","dismissModalParams","skippedButtonClicked","importOptOut","roundedCorners","position","layout","outro","id","inputSize","onChange","event","target","checked","style","skipForNow","AccountImportSuccessModal","close","success","inProgress","dangerouslySetInnerHTML","__html","pleaseWait","seeAccount","fullWidth","startShopping","AccountImportErrorModal","goToAccount","error","failed","tryAgain","module","exports"],"mappings":"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","file":"5.js","sourcesContent":["import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { config as configService } from '@instacart/enterprise-services'\nimport { createStyles, utils, Text, Button } from '@instacart/cocktail'\nimport InstacartLogo from '../assets/images/ic-logo.svg'\n\nconst useStyles = createStyles(\n  tokens => ({\n    root: {\n      padding: tokens.size.spacing.small,\n      background: tokens.color.neutral.grey1,\n      borderRadius: tokens.border.radius.regular,\n    },\n    heading: { marginTop: 0 },\n    footer: {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      justifyContent: 'space-between',\n      alignItems: 'flex-end',\n      [utils.mediaQuery.maxWidth(tokens.breakpoint.small)]: {\n        justifyContent: 'flex-end',\n      },\n    },\n    button: {\n      [utils.mediaQuery.maxWidth(tokens.breakpoint.small)]: {\n        width: '100%',\n      },\n    },\n    logo: {\n      [utils.mediaQuery.maxWidth(tokens.breakpoint.small)]: {\n        marginTop: tokens.size.spacing.small,\n      },\n    },\n  }),\n  { displayName: 'AccountImportNotice' }\n)\n\nconst AccountImportNotice = ({ onImportClick, ...restProps }) => {\n  const styles = useStyles()\n  const lang = configService.selectors.getLang()\n\n  return (\n    <div css={styles.root} {...restProps}>\n      <Text css={styles.heading} component=\"h2\" variant=\"body\" bold>\n        {lang.icImportAccount.title}\n      </Text>\n      <Text component=\"p\" variant=\"caption\">\n        {lang.icImportAccount.intro}\n      </Text>\n      <Text component=\"p\" variant=\"caption\">\n        {lang.icImportAccount.listTitle}\n      </Text>\n      <ul>\n        {lang.icImportAccount.featureList.map((feature, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={index}>\n            <Text variant=\"caption\">{feature}</Text>\n          </li>\n        ))}\n      </ul>\n      <div css={styles.footer}>\n        <Button css={styles.button} onClick={onImportClick} data-test=\"import-account-button\">\n          {lang.icImportAccount.importAccount}\n        </Button>\n        <img src={InstacartLogo} css={styles.logo} alt=\"Instacart Logo\" width=\"86px\" />\n      </div>\n    </div>\n  )\n}\n\nAccountImportNotice.propTypes = {\n  onImportClick: PropTypes.func.isRequired,\n}\n\nexport default memo(AccountImportNotice)\n","import React, { memo } from 'react'\nimport { config as configService } from '@instacart/enterprise-services'\nimport { createStyles, Text } from '@instacart/cocktail'\nimport InstacartLogo from '../assets/images/ic-logo.svg'\n\nconst useStyles = createStyles(\n  tokens => ({\n    root: {\n      padding: tokens.size.spacing.small,\n      background: tokens.color.neutral.grey1,\n      borderRadius: tokens.border.radius.regular,\n    },\n    heading: { marginTop: 0 },\n    footer: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n  }),\n  { displayName: 'AccountLinkedNotice' }\n)\n\nconst AccountLinkedNotice = props => {\n  const styles = useStyles()\n  const lang = configService.selectors.getLang()\n\n  return (\n    <div css={styles.root} {...props}>\n      <Text css={styles.heading} component=\"h3\" variant=\"body\" bold>\n        {lang.icImportAccount.linkedTitle}\n      </Text>\n      <Text component=\"p\" variant=\"caption\">\n        {lang.icImportAccount.accountLinked}\n      </Text>\n      <div css={styles.footer}>\n        <img src={InstacartLogo} alt=\"Instacart Logo\" width=\"86px\" />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(AccountLinkedNotice)\n","import React, { memo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { config as configService } from '@instacart/enterprise-services'\nimport {\n  utils,\n  createStyles,\n  useMediaQuery,\n  Text,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  ModalContainer,\n  ModalHeader,\n  ModalHeaderText,\n  ModalHeaderAdornment,\n  ModalXButton,\n  ModalContainerAdornment,\n  ModalContent,\n} from '@instacart/cocktail'\nimport InstacartLogo from '../assets/images/ic-logo.svg'\n\nconst useStyles = createStyles(\n  tokens => ({\n    heading: {\n      margin: 0,\n      [utils.mediaQuery.minWidth(tokens.breakpoint.small)]: {\n        fontSize: utils.toPx`${tokens.size.font.h3}`,\n      },\n    },\n    logo: {\n      textAlign: 'center',\n    },\n    features: {\n      background: tokens.color.neutral.grey1,\n      padding: utils.toPx`${tokens.size.spacing.small} ${tokens.size.spacing.small} ${tokens.size.spacing.small} 0`,\n      overflow: 'auto',\n    },\n    list: {\n      margin: 0,\n    },\n    footer: {\n      flexFlow: 'column nowrap',\n      marginTop: tokens.size.spacing.large,\n      [utils.mediaQuery.minWidth(tokens.breakpoint.small)]: {\n        flexFlow: 'row nowrap',\n        justifyContent: 'center',\n      },\n    },\n    dontAskMeAgain: {\n      padding: utils.toPx`${tokens.size.spacing.medium} 0`,\n    },\n  }),\n  { displayName: 'AccountImportModal' }\n)\n\nconst AccountImportModal = ({ onImportClick, cancel }) => {\n  const styles = useStyles()\n  const desktop = useMediaQuery(tokens => utils.mediaQuery.minWidth(tokens.breakpoint.small))\n  const lang = configService.selectors.getLang()\n  const [icImportOptOut, setIcImportOptOut] = useState(false)\n  const dismissModalParams = { skippedButtonClicked: false, importOptOut: false }\n\n  return (\n    <ModalContainer roundedCorners={desktop}>\n      {desktop && (\n        <ModalContainerAdornment>\n          <ModalXButton\n            onClick={() => cancel(dismissModalParams)}\n            data-test=\"desktop-modal-close\"\n          />\n        </ModalContainerAdornment>\n      )}\n      <ModalHeader>\n        <ModalHeaderText>\n          <Text css={styles.heading} component=\"h1\" variant=\"large\" color=\"inverse\">\n            {lang.icImportAccount.title}\n          </Text>\n        </ModalHeaderText>\n        {!desktop && (\n          <ModalHeaderAdornment position=\"right\">\n            <ModalXButton\n              onClick={() => cancel(dismissModalParams)}\n              data-test=\"mobile-modal-close\"\n            />\n          </ModalHeaderAdornment>\n        )}\n      </ModalHeader>\n      <ModalContent layout=\"medium\">\n        <div css={styles.logo}>\n          <img src={InstacartLogo} alt=\"Instacart Logo\" width=\"134px\" />\n        </div>\n        <Text component=\"p\" variant=\"body\">\n          {lang.icImportAccount.intro}\n        </Text>\n        <Text component=\"p\" variant=\"body\">\n          {lang.icImportAccount.listTitle}\n        </Text>\n        <div css={styles.features}>\n          <ul css={styles.list}>\n            {lang.icImportAccount.featureList.map((feature, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <li key={index}>\n                <Text variant=\"body\">{feature}</Text>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <Text component=\"p\" variant=\"body\">\n          {lang.icImportAccount.outro}\n        </Text>\n        <Checkbox\n          id=\"dont-ask-me-again-checkbox\"\n          data-test=\"dont-ask-me-again-checkbox\"\n          inputSize=\"small\"\n          onChange={event => setIcImportOptOut(event.target.checked)}\n          checked={icImportOptOut}\n          styles={styles.dontAskMeAgain}\n        >\n          {lang.icImportAccount.dontAskMeAgain}\n        </Checkbox>\n        <ButtonGroup style={styles.footer}>\n          <Button\n            onClick={() => onImportClick({ importOptOut: icImportOptOut })}\n            data-test=\"import-account-button\"\n          >\n            {lang.icImportAccount.importAccount}\n          </Button>\n          <Button\n            onClick={() => cancel({ skippedButtonClicked: true, importOptOut: icImportOptOut })}\n            variant=\"link\"\n            data-test=\"skip-button\"\n          >\n            {lang.skipForNow}\n          </Button>\n        </ButtonGroup>\n      </ModalContent>\n    </ModalContainer>\n  )\n}\n\nAccountImportModal.propTypes = {\n  /** Callback for clicking on the import account button */\n  onImportClick: PropTypes.func.isRequired,\n  /** Callback for closing the modal */\n  cancel: PropTypes.func.isRequired,\n}\n\nexport default memo(AccountImportModal)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  utils,\n  createStyles,\n  Text,\n  Button,\n  ModalContainer,\n  ModalHeader,\n  ModalHeaderText,\n  ModalContent,\n  Alert,\n} from '@instacart/cocktail'\nimport { config as configService } from '@instacart/enterprise-services'\n\nconst useStyles = createStyles(\n  tokens => ({\n    heading: {\n      margin: 0,\n      [utils.mediaQuery.minWidth(tokens.breakpoint.small)]: {\n        fontSize: utils.toPx`${tokens.size.font.h3}`,\n      },\n    },\n    footer: {\n      marginTop: tokens.size.spacing.large,\n    },\n  }),\n  { displayName: 'AccountImportSuccessModal' }\n)\n\nconst AccountImportSuccessModal = ({ close }) => {\n  const styles = useStyles()\n  const lang = configService.selectors.getLang()\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <ModalHeaderText>\n          <Text css={styles.heading} component=\"h1\" variant=\"large\" color=\"inverse\">\n            {lang.icImportAccount.title}\n          </Text>\n        </ModalHeaderText>\n      </ModalHeader>\n      <ModalContent layout=\"dialog\">\n        <Alert variant=\"success\">{lang.icImportAccount.success.inProgress}</Alert>\n        <Text\n          component=\"p\"\n          variant=\"body\"\n          dangerouslySetInnerHTML={{\n            __html: `${lang.icImportAccount.success.pleaseWait} ${lang.icImportAccount.success.seeAccount}`,\n          }}\n        />\n        <div css={styles.footer}>\n          <Button fullWidth onClick={close} data-test=\"start-shopping-button\">\n            {lang.startShopping}\n          </Button>\n        </div>\n      </ModalContent>\n    </ModalContainer>\n  )\n}\n\nAccountImportSuccessModal.propTypes = {\n  /** Callback to close modal */\n  close: PropTypes.func.isRequired,\n}\n\nexport default memo(AccountImportSuccessModal)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  utils,\n  createStyles,\n  Text,\n  Button,\n  ModalContainer,\n  ModalHeader,\n  ModalHeaderText,\n  ModalContent,\n  Alert,\n} from '@instacart/cocktail'\nimport { config as configService } from '@instacart/enterprise-services'\n\nconst useStyles = createStyles(\n  tokens => ({\n    heading: {\n      margin: 0,\n      [utils.mediaQuery.minWidth(tokens.breakpoint.small)]: {\n        fontSize: utils.toPx`${tokens.size.font.h3}`,\n      },\n    },\n    footer: {\n      marginTop: tokens.size.spacing.large,\n    },\n  }),\n  { displayName: 'AccountImportErrorModal' }\n)\n\nconst AccountImportErrorModal = ({ goToAccount, close }) => {\n  const styles = useStyles()\n  const lang = configService.selectors.getLang()\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <ModalHeaderText>\n          <Text css={styles.heading} component=\"h1\" variant=\"large\" color=\"inverse\">\n            {lang.icImportAccount.title}\n          </Text>\n        </ModalHeaderText>\n      </ModalHeader>\n      <ModalContent layout=\"dialog\">\n        <Alert variant=\"error\">{lang.icImportAccount.error.failed}</Alert>\n        <Text component=\"p\" variant=\"body\">\n          {lang.icImportAccount.error.tryAgain}\n        </Text>\n        <div css={styles.footer}>\n          <Button fullWidth onClick={goToAccount} data-test=\"go-to-account-button\">\n            {lang.icImportAccount.error.goToAccount}\n          </Button>\n          <Button fullWidth onClick={close} variant=\"link\" data-test=\"close-button\">\n            {lang.close}\n          </Button>\n        </div>\n      </ModalContent>\n    </ModalContainer>\n  )\n}\n\nAccountImportErrorModal.propTypes = {\n  /** Callback when the go to account button is clicked */\n  goToAccount: PropTypes.func.isRequired,\n  /** Callback for closing the modal */\n  close: PropTypes.func.isRequired,\n}\n\nexport default memo(AccountImportErrorModal)\n","module.exports = __webpack_public_path__ + \"images/ic-logo.f8c94f2928467da7d663eed9197ff80e.svg\";"],"sourceRoot":""}