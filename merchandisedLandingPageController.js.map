{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/shop/controllers/merchandisedLandingPageController.js"],"names":["angular","module","controller","canvas","collectionsService","merchandisedLandingPage","placementsService","shoppingSelectorService","titleService","tree","this","imageTransform","logImpression","merchandisedLandingPageName","current","name","merchandisedLandingPageContent","mlp_content","setTitle","breadcrumbs","parents","map","parent","label","state","params","push","active","handleImagePlacementClick","placement","index","formattedPlacement","formatImagePlacementForAnalytics","collections","getCollection","async","collection","COLLECTION_CONSTANTS","PRODUCT_LIMIT","userChangedContextOrStore"],"mappings":"sIAAA,oIAKeA,cACZC,OAAO,mDAAoD,IAC3DC,WACC,oCAHW,6HAIX,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAC,KAAKC,eAAiBA,IACtBD,KAAKE,cAAgBT,EAAOS,cAC5BF,KAAKG,4BAA8BJ,EAAKK,QAAQC,KAChDL,KAAKM,+BAAiCX,EAAwBY,YAE9DT,EAAaU,SAASR,KAAKG,6BAC3BH,KAAKS,YAAcV,EAAKW,QAAQC,IAAIC,IAAU,CAC5CC,MAAOD,EAAOP,KACdS,MAAOF,EAAOE,MACdC,OAAQH,EAAOG,UAEbhB,EAAKK,QAAQC,OACfP,EAAaU,SAAST,EAAKK,QAAQC,MACnCL,KAAKS,YAAYO,KAAK,CACpBH,MAAOd,EAAKK,QAAQC,KACpBY,QAAQ,KAIZjB,KAAKkB,0BAA4B,CAACC,EAAWC,KAC3C,MAAMC,EAAqBC,YAAiCH,EAAW,cACvEvB,EAAkBsB,0BAChBG,EACA,4BACAD,IAIJpB,KAAKuB,YAAc,GACnBvB,KAAKwB,cAAgBC,MAAOC,EAAYN,KAClCpB,KAAKuB,YAAYH,KAGrBpB,KAAKuB,YAAYH,SAAe1B,EAAmB8B,cACjDE,EACAC,IAAqBC,cACrB/B,EAAwBgC","file":"merchandisedLandingPageController.js","sourcesContent":["import angular from 'angular'\nimport { COLLECTION_CONSTANTS } from '@app/angular/constants/collections'\nimport { formatImagePlacementForAnalytics } from '@app/utils/placements'\nimport { imageTransform } from '@instacart/enterprise-services'\n\nexport default angular\n  .module('MerchandisedLandingPageControllerComponentModule', [])\n  .controller(\n    'MerchandisedLandingPageController',\n    function MerchandisedLandingPageController(\n      canvas,\n      collectionsService,\n      merchandisedLandingPage,\n      placementsService,\n      shoppingSelectorService,\n      titleService,\n      tree\n    ) {\n      this.imageTransform = imageTransform\n      this.logImpression = canvas.logImpression\n      this.merchandisedLandingPageName = tree.current.name\n      this.merchandisedLandingPageContent = merchandisedLandingPage.mlp_content\n\n      titleService.setTitle(this.merchandisedLandingPageName)\n      this.breadcrumbs = tree.parents.map(parent => ({\n        label: parent.name,\n        state: parent.state,\n        params: parent.params,\n      }))\n      if (tree.current.name) {\n        titleService.setTitle(tree.current.name)\n        this.breadcrumbs.push({\n          label: tree.current.name,\n          active: true,\n        })\n      }\n\n      this.handleImagePlacementClick = (placement, index) => {\n        const formattedPlacement = formatImagePlacementForAnalytics(placement, 'mlp_banner')\n        placementsService.handleImagePlacementClick(\n          formattedPlacement,\n          'merchandised landing page',\n          index\n        )\n      }\n\n      this.collections = []\n      this.getCollection = async (collection, index) => {\n        if (this.collections[index]) {\n          return\n        }\n        this.collections[index] = await collectionsService.getCollection(\n          collection,\n          COLLECTION_CONSTANTS.PRODUCT_LIMIT,\n          shoppingSelectorService.userChangedContextOrStore\n        )\n      }\n    }\n  )\n"],"sourceRoot":""}