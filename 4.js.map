{"version":3,"sources":["webpack://UnataWidgets/./app/services/collections/selectors.ts","webpack://UnataWidgets/./node_modules/use-resize-observer/dist/bundle.esm.js","webpack://UnataWidgets/./app/react/ids/enterprise/internal/utils/elementSelectors.ts","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/Carousel/useCarousel.ts","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/Carousel/CarouselButtonOverlay.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/Carousel/CarouselButton.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/Carousel/CarouselContent.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/molecules/Carousel/Carousel.tsx","webpack://UnataWidgets/./app/react/ids/enterprise/organisms/Collection/CollectionSeeMore.tsx","webpack://UnataWidgets/./app/services/promotedMedia/selectors.ts","webpack://UnataWidgets/./app/react/common/Image.tsx","webpack://UnataWidgets/./app/react/common/LazyImage.tsx","webpack://UnataWidgets/./app/react/components/promotedMedia/PromotedMedia.tsx","webpack://UnataWidgets/./app/react/common/collection/ProductCollection.tsx"],"names":["homePageFeaturedConfig","createSelector","configSelector","homepageFeaturedProducts","buyItAgainConfig","buyItAgain","passingCollectionQueryParamsConfig","allowPassingCollectionIDAsQueryParams","productCollectionLang","langSelector","langAriaSelector","next","viewCountMore","previous","carousel","carouselInstructions","carouselItem","featuredCollectionEnabledConfig","enabled","featuredCollectionDisplayNameConfig","displayName","featuredCollectionDisplayThresholdConfig","displayThreshold","featuredCollectionShouldDisplay","_","collection","threshold","item_count","featuredCollectionFormatting","name","buyItAgainEnabledConfig","buyItAgainDisplayNameConfig","buyItAgainCollectionEnabled","authService","selectors","isRegisteredUser","buyItAgainCollectionFormatting","items","map","item","store_product","tags","filter","tag","viewMoreCollectionLink","id","extractSize","entry","boxProp","sizeType","contentRect","useResizeObserver","opts","onResize","onResizeRef","undefined","current","round","Math","resizeObserverRef","_useState","width","height","size","setSize","didUnmount","subscriber","refOrElement","callbackRefElement","lastReportRef","cleanupRef","callSubscriber","refCallback","element","box","instance","ResizeObserver","entries","reportedWidth","reportedHeight","newWidth","newHeight","newSize","observe","unobserve","ref","HTMLElement","reporter","queryFocusableElements","querySelectorAll","Direction","CarouselButtonOverlay","children","styles","direction","rest","overlay","combineStyles","directionSpecificStyles","background","left","paddingLeft","spacing","s16","paddingRight","s32","right","alignItems","bottom","display","position","top","transition","zIndex","getStyles","css","DEFAULT_BUTTON_SIZE","DEFAULT_BUTTON_COLOR","CarouselButton","accessibleLabel","color","theme","useTheme","button","border","colors","systemGrayscale50","borderRadius","content","outline","brandPrimaryRegular","boxShadow","systemSuccessLight","fontSize","aria-label","data-test","CarouselContent","isMobile","carouselItemAccessibleLabel","translateX","transitionSpeedMs","containerRef","itemRefs","showNext","showPrevious","carouselContentWrapper","carouselContent","carouselItemWrapper","justifyContent","transform","overflow","marginLeft","Children","child","i","role","aria-hidden","interpolate","nthItem","totalItems","count","Carousel","lang","filteredChildren","toArray","Boolean","numItems","initTranslateX","useRef","useMemo","Array","from","length","createRef","containerWidth","scrollWidth","setTranslateX","useState","setShowPrevious","setShowNext","setDirection","Init","useEffect","slideTimeout","setTimeout","maxOffset","scrollLeft","firstVisibleItem","hasFoundFirstVisibleItem","forEach","itemOffsetLeft","offsetLeft","itemOffsetWidth","offsetWidth","leftBound","rightBound","hiddenOrPartiallyHidden","wasHidden","getAttribute","setAttribute","toString","elements","originalTabIndex","focus","clearTimeout","containerScrollWidth","slide","newDirection","cells","x","offset","Left","reverse","cellOffset","cell","cellOffsetLeft","cellOffsetWidth","newTranslateX","max","min","useCarousel","containerAccessibleLabel","carouselAccessibleInstructions","previousButtonAccessibleLabel","nextButtonAccessibleLabel","carouselWrapper","opacity","className","onClick","Right","CollectionSeeMore","anchor","flexDirection","padding","s8","whiteSpace","anchorButton","promotedImageSelector","isMobileSelector","props","promotedMedia","defaultImage","fallbackImage","mobile","fallback","image","escapeImageUrl","altText","isPromotedImage","imageTransform","image_url","alt_text","desktop","span","loadAssetImage","ENABLE_TRANSITION","TRANSITION_SPEED","WIDTH","HEIGHT","Image","fillStyle","transitionSpeed","enableTransition","createStyles","objectFit","root","maxWidth","visible","useStyles","src","alt","style","onLoad","restProps","loading","setLoading","Promise","resolve","img","document","createElement","onerror","onload","getImage","then","event","memo","forwardRef","LazyImage","options","imageOptions","Number","isNaN","useInView","isIntersecting","intersectionRatio","supportsNativeLazyLoading","supportsIntersectionObserver","PromotedMedia","placement","anchorImage","borderTopLeftRadius","radius","r4","borderTopRightRadius","margin","maxHeight","anchorImageShow","container","responsive","up","brandPromotionalLight","elevation","low","shadow","systemGrayscale10","down","imageWrapper","promoted","promoted_media","selectorProps","useSelectorWithProps","makeUseSelectorWithProps","childrenWrapper","fullWidthHeader","seeMoreWrapper","s40","ProductCollection","fullWidth","enableViewMore","enablePlacements","createClickHandler","logClickEvent","useAnalytics","useSelector","viewMoreLink","state","moreItems","href","logSeeMore","category","value","langService","placements","e","formattedPlacement","formatImagePlacementForAnalytics","eventEmitter","emit","EVENT_TYPES","LOG_IMAGE_PLACEMENT","location","handlePromotedClick","ItemTileContainer","product"],"mappings":"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","file":"4.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit'\nimport { Collection, CollectionId } from '@app/types/collection'\nimport { auth as authService } from '@instacart/enterprise-services'\nimport { configSelector, langAriaSelector, langSelector } from '../config/selectors'\n\n// base config selector\nexport const homePageFeaturedConfig = createSelector(\n  configSelector,\n  ({ homepageFeaturedProducts }) => homepageFeaturedProducts\n)\n\nexport const buyItAgainConfig = createSelector(configSelector, ({ buyItAgain }) => buyItAgain)\n\nexport const passingCollectionQueryParamsConfig = createSelector(\n  configSelector,\n  ({ allowPassingCollectionIDAsQueryParams }) => allowPassingCollectionIDAsQueryParams\n)\n\nexport const productCollectionLang = createSelector(\n  langSelector,\n  langAriaSelector,\n  ({ next, viewCountMore }, { previous, carousel, carouselInstructions, carouselItem }) => ({\n    carousel,\n    carouselInstructions,\n    carouselItem,\n    next,\n    previous,\n    viewCountMore,\n  })\n)\n\n// Featured collections\nexport const featuredCollectionEnabledConfig = createSelector(\n  homePageFeaturedConfig,\n  ({ enabled }) => enabled\n)\n\nexport const featuredCollectionDisplayNameConfig = createSelector(\n  homePageFeaturedConfig,\n  ({ displayName }) => displayName\n)\n\nexport const featuredCollectionDisplayThresholdConfig = createSelector(\n  homePageFeaturedConfig,\n  ({ displayThreshold }) => displayThreshold\n)\n\nexport const featuredCollectionShouldDisplay = createSelector(\n  featuredCollectionEnabledConfig,\n  featuredCollectionDisplayThresholdConfig,\n  (_: unknown, collection: Collection) => collection,\n  (enabled, threshold, collection) => enabled && collection && collection.item_count >= threshold\n)\n\n/**\n * Returns formatted collection data\n */\nexport const featuredCollectionFormatting = createSelector(\n  featuredCollectionDisplayNameConfig,\n  (_: unknown, collection: Collection) => collection,\n  (displayName, collection) => {\n    if (!collection) return\n\n    return {\n      ...collection,\n      name: displayName,\n    }\n  }\n)\n\n// Buy It again collections\n\n/**\n * Enable via config and also is isLoggedIn\n */\nexport const buyItAgainEnabledConfig = createSelector(buyItAgainConfig, ({ enabled }) => enabled)\n\nexport const buyItAgainDisplayNameConfig = createSelector(\n  buyItAgainConfig,\n  ({ displayName }) => displayName\n)\n\nexport const buyItAgainCollectionEnabled = createSelector(\n  buyItAgainEnabledConfig,\n  authService.selectors.isRegisteredUser,\n  (enabled, isRegisteredUser) => enabled && isRegisteredUser\n)\n\n/**\n * Returns formatted collection data\n */\nexport const buyItAgainCollectionFormatting = createSelector(\n  buyItAgainDisplayNameConfig,\n  (_: unknown, collection: Collection) => collection,\n  (displayName, collection) => {\n    if (!collection) return\n\n    return {\n      ...collection,\n      // rename tag\n      items: collection.items.map(item => ({\n        ...item,\n        store_product: {\n          ...item.store_product,\n          tags: item.store_product.tags.filter(tag => tag !== 'purchased'),\n        },\n      })),\n\n      name: displayName,\n    }\n  }\n)\n\n// util\nexport const viewMoreCollectionLink = createSelector(\n  (_: unknown, id: CollectionId | undefined) => id,\n  id => (id ? `/shop/collections/${id}` : '#')\n)\n","import { useRef, useState, useEffect, useCallback, useMemo } from 'react';\n\n// This of course could've been more streamlined with internal state instead of\n// refs, but then host hooks / components could not opt out of renders.\n// This could've been exported to its own module, but the current build doesn't\n// seem to work with module imports and I had no more time to spend on this...\nfunction useResolvedElement(subscriber, refOrElement) {\n  var callbackRefElement = useRef(null);\n  var lastReportRef = useRef(null);\n  var cleanupRef = useRef();\n  var callSubscriber = useCallback(function () {\n    var element = null;\n\n    if (callbackRefElement.current) {\n      element = callbackRefElement.current;\n    } else if (refOrElement) {\n      if (refOrElement instanceof HTMLElement) {\n        element = refOrElement;\n      } else {\n        element = refOrElement.current;\n      }\n    }\n\n    if (lastReportRef.current && lastReportRef.current.element === element && lastReportRef.current.reporter === callSubscriber) {\n      return;\n    }\n\n    if (cleanupRef.current) {\n      cleanupRef.current(); // Making sure the cleanup is not called accidentally multiple times.\n\n      cleanupRef.current = null;\n    }\n\n    lastReportRef.current = {\n      reporter: callSubscriber,\n      element: element\n    }; // Only calling the subscriber, if there's an actual element to report.\n\n    if (element) {\n      cleanupRef.current = subscriber(element);\n    }\n  }, [refOrElement, subscriber]); // On each render, we check whether a ref changed, or if we got a new raw\n  // element.\n\n  useEffect(function () {\n    // With this we're *technically* supporting cases where ref objects' current value changes, but only if there's a\n    // render accompanying that change as well.\n    // To guarantee we always have the right element, one must use the ref callback provided instead, but we support\n    // RefObjects to make the hook API more convenient in certain cases.\n    callSubscriber();\n  }, [callSubscriber]);\n  return useCallback(function (element) {\n    callbackRefElement.current = element;\n    callSubscriber();\n  }, [callSubscriber]);\n}\n\n// We're only using the first element of the size sequences, until future versions of the spec solidify on how\n// exactly it'll be used for fragments in multi-column scenarios:\n// From the spec:\n// > The box size properties are exposed as FrozenArray in order to support elements that have multiple fragments,\n// > which occur in multi-column scenarios. However the current definitions of content rect and border box do not\n// > mention how those boxes are affected by multi-column layout. In this spec, there will only be a single\n// > ResizeObserverSize returned in the FrozenArray, which will correspond to the dimensions of the first column.\n// > A future version of this spec will extend the returned FrozenArray to contain the per-fragment size information.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-entry-interface)\n//\n// Also, testing these new box options revealed that in both Chrome and FF everything is returned in the callback,\n// regardless of the \"box\" option.\n// The spec states the following on this:\n// > This does not have any impact on which box dimensions are returned to the defined callback when the event\n// > is fired, it solely defines which box the author wishes to observe layout changes on.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-interface)\n// I'm not exactly clear on what this means, especially when you consider a later section stating the following:\n// > This section is non-normative. An author may desire to observe more than one CSS box.\n// > In this case, author will need to use multiple ResizeObservers.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-interface)\n// Which is clearly not how current browser implementations behave, and seems to contradict the previous quote.\n// For this reason I decided to only return the requested size,\n// even though it seems we have access to results for all box types.\n// This also means that we get to keep the current api, being able to return a simple { width, height } pair,\n// regardless of box option.\nvar extractSize = function extractSize(entry, boxProp, sizeType) {\n  if (!entry[boxProp]) {\n    if (boxProp === \"contentBoxSize\") {\n      // The dimensions in `contentBoxSize` and `contentRect` are equivalent according to the spec.\n      // See the 6th step in the description for the RO algorithm:\n      // https://drafts.csswg.org/resize-observer/#create-and-populate-resizeobserverentry-h\n      // > Set this.contentRect to logical this.contentBoxSize given target and observedBox of \"content-box\".\n      // In real browser implementations of course these objects differ, but the width/height values should be equivalent.\n      return entry.contentRect[sizeType === \"inlineSize\" ? \"width\" : \"height\"];\n    }\n\n    return undefined;\n  } // A couple bytes smaller than calling Array.isArray() and just as effective here.\n\n\n  return entry[boxProp][0] ? entry[boxProp][0][sizeType] : // TS complains about this, because the RO entry type follows the spec and does not reflect Firefox's current\n  // behaviour of returning objects instead of arrays for `borderBoxSize` and `contentBoxSize`.\n  // @ts-ignore\n  entry[boxProp][sizeType];\n};\n\nfunction useResizeObserver(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Saving the callback as a ref. With this, I don't need to put onResize in the\n  // effect dep array, and just passing in an anonymous function without memoising\n  // will not reinstantiate the hook's ResizeObserver.\n  var onResize = opts.onResize;\n  var onResizeRef = useRef(undefined);\n  onResizeRef.current = onResize;\n  var round = opts.round || Math.round; // Using a single instance throughout the hook's lifetime\n\n  var resizeObserverRef = useRef();\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      size = _useState[0],\n      setSize = _useState[1]; // In certain edge cases the RO might want to report a size change just after\n  // the component unmounted.\n\n\n  var didUnmount = useRef(false);\n  useEffect(function () {\n    return function () {\n      didUnmount.current = true;\n    };\n  }, []); // Using a ref to track the previous width / height to avoid unnecessary renders.\n\n  var previous = useRef({\n    width: undefined,\n    height: undefined\n  }); // This block is kinda like a useEffect, only it's called whenever a new\n  // element could be resolved based on the ref option. It also has a cleanup\n  // function.\n\n  var refCallback = useResolvedElement(useCallback(function (element) {\n    // We only use a single Resize Observer instance, and we're instantiating it on demand, only once there's something to observe.\n    // This instance is also recreated when the `box` option changes, so that a new observation is fired if there was a previously observed element with a different box option.\n    if (!resizeObserverRef.current || resizeObserverRef.current.box !== opts.box || resizeObserverRef.current.round !== round) {\n      resizeObserverRef.current = {\n        box: opts.box,\n        round: round,\n        instance: new ResizeObserver(function (entries) {\n          var entry = entries[0];\n          var boxProp = opts.box === \"border-box\" ? \"borderBoxSize\" : opts.box === \"device-pixel-content-box\" ? \"devicePixelContentBoxSize\" : \"contentBoxSize\";\n          var reportedWidth = extractSize(entry, boxProp, \"inlineSize\");\n          var reportedHeight = extractSize(entry, boxProp, \"blockSize\");\n          var newWidth = reportedWidth ? round(reportedWidth) : undefined;\n          var newHeight = reportedHeight ? round(reportedHeight) : undefined;\n\n          if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n            var newSize = {\n              width: newWidth,\n              height: newHeight\n            };\n            previous.current.width = newWidth;\n            previous.current.height = newHeight;\n\n            if (onResizeRef.current) {\n              onResizeRef.current(newSize);\n            } else {\n              if (!didUnmount.current) {\n                setSize(newSize);\n              }\n            }\n          }\n        })\n      };\n    }\n\n    resizeObserverRef.current.instance.observe(element, {\n      box: opts.box\n    });\n    return function () {\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.instance.unobserve(element);\n      }\n    };\n  }, [opts.box, round]), opts.ref);\n  return useMemo(function () {\n    return {\n      ref: refCallback,\n      width: size.width,\n      height: size.height\n    };\n  }, [refCallback, size ? size.width : null, size ? size.height : null]);\n}\n\nexport { useResizeObserver as default };\n","export const queryFocusableElements = (element: HTMLElement) =>\n  element.querySelectorAll<HTMLElement>(\n    'a, button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n  )\n","import { useEffect, useState, useRef, useMemo, createRef } from 'react'\nimport useResizeObserver from 'use-resize-observer'\nimport { queryFocusableElements } from '../../internal/utils/elementSelectors'\n\nexport enum Direction {\n  Init = 0,\n  Left = -1,\n  Right = 1,\n}\n\nconst TRANSITION_SPEED = 200\n\nconst TABINDEX_DATA_NAME = 'data-tabindex'\nconst HIDDEN_DATA_NAME = 'data-hidden'\n\nexport const useCarousel = (numItems: number, isMobile = false, initTranslateX = 0) => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const itemRefs = useMemo(\n    () => Array.from({ length: numItems }).map(() => createRef<HTMLDivElement>()),\n    [numItems]\n  )\n\n  const { width: containerWidth = 0 } = useResizeObserver({ ref: containerRef })\n  const scrollWidth = containerRef.current?.scrollWidth || 0\n  const [translateX, setTranslateX] = useState(initTranslateX)\n  const [showPrevious, setShowPrevious] = useState(!isMobile && translateX > 0)\n  const [showNext, setShowNext] = useState(!isMobile && translateX < scrollWidth - containerWidth)\n  const [direction, setDirection] = useState(Direction.Init)\n  const transitionSpeedMs = TRANSITION_SPEED\n\n  // update cells\n  useEffect(() => {\n    if (numItems < 1) return\n\n    const updateCells = () => {\n      if (!itemRefs.length || !containerWidth || isMobile) return\n      const minOffset = 0\n      const maxOffset = containerWidth\n      const scrollLeft = translateX\n      let hasFoundFirstVisibleItem = false\n      let firstVisibleItem: HTMLElement | undefined\n      itemRefs.forEach(({ current: item }) => {\n        if (!item) return\n        const itemOffsetLeft = item.offsetLeft || 0\n        const itemOffsetWidth = item.offsetWidth || 0\n        const leftBound = itemOffsetLeft - scrollLeft\n        const rightBound = leftBound + itemOffsetWidth\n        const hiddenOrPartiallyHidden =\n          leftBound > maxOffset ||\n          rightBound < minOffset ||\n          (leftBound < maxOffset && rightBound > maxOffset) ||\n          (rightBound > minOffset && leftBound < minOffset)\n\n        const wasHidden = item.getAttribute(HIDDEN_DATA_NAME) === 'true'\n\n        if (direction === Direction.Init || hiddenOrPartiallyHidden !== wasHidden) {\n          item.setAttribute(HIDDEN_DATA_NAME, hiddenOrPartiallyHidden.toString())\n          item.setAttribute('aria-hidden', hiddenOrPartiallyHidden.toString()) // aria-hidden for item not visible or partially visible\n\n          const elements = queryFocusableElements(item)\n          if (elements && elements.length) {\n            queryFocusableElements(item).forEach(element => {\n              if (direction === Direction.Init) {\n                const originalTabIndex = element.getAttribute('tabIndex') || '0'\n                element.setAttribute(TABINDEX_DATA_NAME, originalTabIndex) // save original tab index to custom attribute data-tab-index\n              }\n              const originalTabIndex = element.getAttribute(TABINDEX_DATA_NAME) || '0' // load  original tab index from custom attribute data-tab-index\n              element.setAttribute('tabIndex', hiddenOrPartiallyHidden ? '-1' : originalTabIndex)\n            })\n          }\n        }\n\n        if (!hasFoundFirstVisibleItem && !hiddenOrPartiallyHidden) {\n          firstVisibleItem = item\n          hasFoundFirstVisibleItem = true\n        }\n      })\n      // Focus the first visible cell after scrolling for a11y.\n      if (firstVisibleItem && direction !== Direction.Init) {\n        const elements = queryFocusableElements(firstVisibleItem)\n        if (elements && elements.length) {\n          elements[0].focus()\n        }\n      }\n    }\n\n    const slideTimeout = setTimeout(updateCells, transitionSpeedMs)\n    return () => {\n      clearTimeout(slideTimeout)\n    }\n  }, [containerWidth, direction, itemRefs, transitionSpeedMs, translateX, numItems, isMobile])\n\n  // update buttons\n  useEffect(() => {\n    if (numItems < 1 || !containerWidth) return\n    const containerScrollWidth = containerRef.current?.scrollWidth || 0\n    setShowPrevious(!isMobile && translateX > 0)\n    setShowNext(!isMobile && translateX < containerScrollWidth - containerWidth)\n  }, [containerRef, containerWidth, isMobile, numItems, translateX])\n\n  // slide handler\n  const slide = (newDirection: Direction) => {\n    const cells = itemRefs.map(x => x)\n    const scrollLeft = translateX\n\n    if (!cells.length) return\n\n    let offset\n    if (cells.length) {\n      if (newDirection === Direction.Left) {\n        cells.reverse()\n      }\n\n      let cellOffset = 0\n      for (let i = 0; i < cells.length; i += 1) {\n        const cell = cells[i]\n        if (offset !== undefined) break\n        const cellOffsetLeft = cell.current?.offsetLeft || 0\n        const cellOffsetWidth = cell.current?.offsetWidth || 0\n        cellOffset = (cellOffsetLeft - scrollLeft) * newDirection\n        if (cellOffset + cellOffsetWidth > containerWidth) {\n          offset = cellOffset\n        }\n      }\n\n      offset ??= cellOffset\n    }\n\n    if (!offset) return\n\n    const containerScrollWidth = containerRef.current?.scrollWidth || 0\n    let newTranslateX = scrollLeft + offset * newDirection\n    newTranslateX = Math.max(newTranslateX, 0)\n    newTranslateX = Math.min(newTranslateX, containerScrollWidth - containerWidth)\n    setTranslateX(newTranslateX)\n    setDirection(newDirection)\n  }\n\n  return {\n    containerRef,\n    itemRefs,\n    showNext,\n    showPrevious,\n    slide,\n    transitionSpeedMs,\n    translateX,\n  }\n}\n\nexport type UseCarouselResults = ReturnType<typeof useCarousel>\n","import type { ComponentPropsWithoutRef, FunctionComponent } from 'react'\nimport { spacing, Base, combineStyles } from '@instacart/ids-core'\n\nconst getStyles = ({ direction }: { direction: Direction }) => {\n  let directionSpecificStyles = {}\n  if (direction === 'left') {\n    directionSpecificStyles = {\n      background:\n        'linear-gradient(to right, rgba(255, 255, 255, 0.85) 75%, rgba(255, 255, 255, 0))',\n      left: 0,\n      paddingLeft: spacing.s16,\n      paddingRight: spacing.s32,\n    }\n  } else if (direction === 'right') {\n    directionSpecificStyles = {\n      background: 'linear-gradient(to left, rgba(255, 255, 255, 0.85) 75%, rgba(255, 255, 255, 0))',\n      paddingLeft: spacing.s32,\n      paddingRight: spacing.s16,\n      right: 0,\n    }\n  }\n\n  return {\n    overlay: {\n      alignItems: 'center',\n      bottom: 0,\n      display: 'flex',\n      position: 'absolute',\n      top: 0,\n      transition: 'opacity 300ms',\n      zIndex: 1,\n      ...directionSpecificStyles,\n    },\n  } as const\n}\n\ntype Direction = 'left' | 'right'\n\nexport interface CarouselButtonOverlayProps\n  extends ComponentPropsWithoutRef<'span'>,\n    Base<typeof getStyles> {\n  direction: Direction\n}\n\nexport const CarouselButtonOverlay: FunctionComponent<CarouselButtonOverlayProps> = ({\n  children,\n  styles,\n  direction,\n  ...rest\n}) => {\n  const { overlay } = combineStyles(getStyles({ direction }), styles)\n\n  return (\n    <span {...rest} css={overlay}>\n      {children}\n    </span>\n  )\n}\n","import { ComponentPropsWithoutRef } from 'react'\nimport {\n  Base,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  combineStyles,\n  Theme,\n  useTheme,\n  Color,\n} from '@instacart/ids-core'\nimport type { FunctionComponent } from 'react'\n\nconst DEFAULT_BUTTON_SIZE = 48\nconst DEFAULT_BUTTON_COLOR = 'systemGrayscale00'\n\nconst getStyles = ({\n  theme,\n  direction,\n  size,\n}: {\n  theme: Theme\n  direction: Direction\n  size?: number\n}) =>\n  ({\n    button: {\n      '& > svg': direction === 'left' ? { paddingLeft: '0.35em' } : { paddingRight: '0.35em' },\n      '&.focus-visible::after': {\n        border: `2px solid ${theme.colors.systemGrayscale50}`,\n        borderRadius: 24,\n        bottom: -3,\n        content: '\"\"',\n        display: 'block',\n        left: -3,\n        position: 'absolute',\n        right: -3,\n        top: -3,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n      background: theme.colors.brandPrimaryRegular,\n      borderRadius: '50%',\n      boxShadow: 'rgba(0, 0, 0, 0.26) 0 1px 2px 0, rgba(0, 0, 0, 0.16) 0 1px 4px 0',\n      color: theme.colors.systemSuccessLight,\n      fontSize: 'smaller',\n      height: size,\n      position: 'relative',\n\n      width: size,\n    },\n  } as const)\n\ntype Direction = 'left' | 'right'\n\nexport interface CarouselButtonProps\n  extends ComponentPropsWithoutRef<'button'>,\n    Base<typeof getStyles> {\n  direction: Direction\n  accessibleLabel: string\n  size?: number\n  color?: Color\n}\n\nexport const CarouselButton: FunctionComponent<CarouselButtonProps> = ({\n  styles,\n  direction,\n  accessibleLabel,\n  size = DEFAULT_BUTTON_SIZE,\n  color = DEFAULT_BUTTON_COLOR,\n  ...rest\n}) => {\n  const theme = useTheme()\n  const { button } = combineStyles(getStyles({ direction, size, theme }), styles)\n\n  return (\n    <button aria-label={accessibleLabel} {...rest} css={button}>\n      {direction === 'left' ? (\n        <ChevronLeftIcon data-test=\"chevron-left-icon\" size={size * 0.75} color={color} />\n      ) : (\n        <ChevronRightIcon data-test=\"chevron-right-icon\" size={size * 0.75} color={color} />\n      )}\n    </button>\n  )\n}\n","import interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { FC, Children } from 'react'\nimport { UseCarouselResults } from './useCarousel'\n\nconst getStyles = ({\n  isMobile,\n  transitionSpeedMs,\n  translateX,\n  showNext,\n  showPrevious,\n}: {\n  isMobile: boolean\n  transitionSpeedMs: number\n  translateX: number\n  showNext: boolean\n  showPrevious: boolean\n}) => {\n  const shouldCenter = !isMobile && !(showNext || showPrevious)\n  return {\n    carouselContent: {\n      display: 'flex',\n      justifyContent: shouldCenter ? 'center' : 'start',\n      transform: `translateX(${-translateX}px)`,\n      transition: `transform ${transitionSpeedMs}ms linear`,\n    },\n    carouselContentWrapper: {\n      overflow: isMobile ? 'scroll' : 'hidden',\n      width: '100%',\n    },\n    carouselItemWrapper: {\n      ':first-of-type': {\n        marginLeft: 0,\n      },\n      display: 'flex',\n    },\n  } as const\n}\n\ninterface CarouselContentProps {\n  isMobile: boolean\n  carousel: UseCarouselResults\n  carouselItemAccessibleLabel: string\n}\n\nexport const CarouselContent: FC<CarouselContentProps> = ({\n  children,\n  isMobile,\n  carousel,\n  carouselItemAccessibleLabel,\n}) => {\n  const { translateX, transitionSpeedMs, containerRef, itemRefs, showNext, showPrevious } = carousel\n\n  const { carouselContentWrapper, carouselContent, carouselItemWrapper } = getStyles({\n    isMobile,\n    showNext,\n    showPrevious,\n    transitionSpeedMs,\n    translateX,\n  })\n  return (\n    <div css={carouselContentWrapper}>\n      <div data-test=\"carousel-content\" ref={containerRef} css={carouselContent}>\n        {Children.map(children, (child, i) => (\n          <div\n            // eslint-disable-next-line react/no-array-index-key\n            key={`carouselItem-${i}`}\n            css={carouselItemWrapper}\n            ref={itemRefs[i]}\n            role=\"group\"\n            aria-hidden=\"false\"\n            aria-label={interpolate(carouselItemAccessibleLabel, {\n              nthItem: i + 1,\n              totalItems: Children.count(children),\n            })}\n          >\n            {child}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { Children, FC } from 'react'\nimport { useCarousel, Direction } from './useCarousel'\nimport { CarouselButtonOverlay } from './CarouselButtonOverlay'\nimport { CarouselButton } from './CarouselButton'\nimport { CarouselContent } from './CarouselContent'\n\nconst getStyles = () =>\n  ({\n    carouselWrapper: {\n      '&:hover, &:focus-within': {\n        // when focused, show the button overlay\n        '.carousel__overlay': {\n          button: {\n            // show button when focused\n            opacity: 1,\n          },\n          // show overlay when focused\n          opacity: 1,\n        },\n      },\n      '.carousel__overlay': {\n        '&--left': {\n          // hide left overlay by default\n          opacity: 0,\n        },\n        button: {\n          // hide button on directional arrow when not hovered or focused\n          opacity: 0,\n          transition: 'opacity 0.2s ease-in-out',\n        },\n        transition: 'opacity 0.2s ease-in-out',\n      },\n      display: 'flex',\n      position: 'relative',\n      width: '100%',\n    },\n  } as const)\n\nexport interface CarouselLang {\n  containerAccessibleLabel: string\n  carouselAccessibleInstructions: string\n  previousButtonAccessibleLabel: string\n  nextButtonAccessibleLabel: string\n  carouselItemAccessibleLabel: string\n}\nexport interface CarouselProps {\n  isMobile: boolean\n  lang: CarouselLang\n}\n\nexport const Carousel: FC<CarouselProps> = ({ children, lang, isMobile }) => {\n  const filteredChildren = Children.toArray(children).filter(Boolean)\n  const carousel = useCarousel(filteredChildren.length, isMobile)\n  const {\n    containerAccessibleLabel,\n    carouselAccessibleInstructions,\n    previousButtonAccessibleLabel,\n    nextButtonAccessibleLabel,\n    carouselItemAccessibleLabel,\n  } = lang\n\n  const { carouselWrapper } = getStyles()\n\n  const onClickPrevious = () => {\n    carousel.slide(Direction.Left)\n  }\n  const onClickNext = () => {\n    carousel.slide(Direction.Right)\n  }\n\n  return (\n    <section aria-label={containerAccessibleLabel} css={carouselWrapper}>\n      <p className=\"screen-reader-text\">{carouselAccessibleInstructions}</p>\n      {carousel.showPrevious && (\n        <CarouselButtonOverlay\n          direction=\"left\"\n          className=\"carousel__overlay carousel__overlay--left\"\n        >\n          <CarouselButton\n            direction=\"left\"\n            accessibleLabel={previousButtonAccessibleLabel}\n            onClick={onClickPrevious}\n          />\n        </CarouselButtonOverlay>\n      )}\n      <CarouselContent\n        isMobile={isMobile}\n        carousel={carousel}\n        carouselItemAccessibleLabel={carouselItemAccessibleLabel}\n      >\n        {filteredChildren}\n      </CarouselContent>\n      {carousel.showNext && (\n        <CarouselButtonOverlay\n          direction=\"right\"\n          className=\"carousel__overlay carousel__overlay--right\"\n        >\n          <CarouselButton\n            direction=\"right\"\n            accessibleLabel={nextButtonAccessibleLabel}\n            onClick={onClickNext}\n          />\n        </CarouselButtonOverlay>\n      )}\n    </section>\n  )\n}\n","import { FC, ComponentPropsWithoutRef } from 'react'\nimport { Theme, useTheme, spacing, Base } from '@instacart/ids-core'\n\nconst getStyles = (theme: Theme) =>\n  ({\n    anchor: {\n      color: theme.colors.brandPrimaryRegular,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      justifyContent: 'center',\n      padding: spacing.s8,\n      whiteSpace: 'nowrap',\n    },\n    anchorButton: {\n      fontSize: '40px',\n      marginLeft: spacing.s8,\n    },\n  } as const)\n\ninterface CollectionSeeMoreProps extends ComponentPropsWithoutRef<'a'>, Base<typeof getStyles> {}\n\nexport const CollectionSeeMore: FC<CollectionSeeMoreProps> = ({ ...rest }) => {\n  const theme = useTheme()\n  const styles = getStyles(theme)\n\n  return (\n    <a css={styles.anchor} {...rest}>\n      <span css={styles.anchorButton} className=\"icon-after-arrow-right\" aria-hidden=\"true\" />\n    </a>\n  )\n}\n","import { createSelector } from '@reduxjs/toolkit'\nimport { CollectionPromotedMedia } from '@app/types/placements'\nimport escapeImageUrl from '@app/utils/images/escapeImageUrl'\nimport loadAssetImage from '@app/utils/loadAssetImage'\nimport { isMobileSelector } from '@app/services/browser/selectors'\nimport imageTransform from '@instacart/enterprise-services/image-transform'\n\nexport const promotedMediaSelector = (\n  _: unknown,\n  props: Record<'promotedMedia', CollectionPromotedMedia | undefined>\n) => props.promotedMedia\n\nexport const defaultImageSelector = (\n  _: unknown,\n  props: Record<'defaultImage', string | undefined>\n) => props.defaultImage\n\nexport const fallbackImageSelector = (\n  _: unknown,\n  props: Record<'fallbackImage', string | undefined>\n) => props.fallbackImage\n\n/**\n * Returns the image URL for the given promoted media. or the default image if\n * the promoted media is not found.\n * And if the image is not found, returns the fallback image.\n */\nexport const promotedImageSelector = createSelector(\n  isMobileSelector,\n  promotedMediaSelector,\n  defaultImageSelector,\n  fallbackImageSelector,\n  // eslint-disable-next-line max-params\n  (mobile, promotedMedia, defaultImage, fallback) => {\n    // default value\n    let image = escapeImageUrl(defaultImage || '')\n    let altText = ''\n    let isPromotedImage = false\n\n    if (promotedMedia) {\n      if (promotedMedia.mobile && mobile) {\n        image = escapeImageUrl(imageTransform(promotedMedia.mobile.image_url || ''))\n        altText = promotedMedia.mobile.alt_text || ''\n        isPromotedImage = true\n      } else if (promotedMedia.desktop && (!mobile || promotedMedia.desktop.span <= 2)) {\n        image = escapeImageUrl(imageTransform(promotedMedia.desktop.image_url || ''))\n        altText = promotedMedia.desktop.alt_text || ''\n        isPromotedImage = true\n      }\n    }\n\n    // We have to check for the undefined string as escapeImageUrl() always returns a string\n    if (image === 'undefined' && fallback) {\n      image = loadAssetImage(fallback)\n    }\n\n    return { altText, image, isPromotedImage }\n  }\n)\n","import { CSSProperties, forwardRef, memo, useEffect, useState } from 'react'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\n\n// Default props\nconst ENABLE_TRANSITION = false\nconst TRANSITION_SPEED = 300\nconst WIDTH = 'auto'\nconst HEIGHT = 'auto'\n\nexport type ImageProps = {\n  /** URL of the image being displayed */\n  src: string\n  /** Alt tag for the image */\n  alt: string\n  /** String that sets how the image fills the container */\n  fillStyle?: 'cover' | 'contain' | 'fill' | 'none' | 'scale-down'\n  /** Enable onLoad transition */\n  enableTransition?: boolean\n  /** Transition speed (ms) */\n  transitionSpeed?: number\n  /** Class name */\n  className?: string\n  /** Style */\n  style?: CSSProperties\n  /** Loading */\n  loading?: 'auto' | 'lazy' | 'eager'\n  /** Fallback image */\n  fallback?: string\n} & React.ImgHTMLAttributes<HTMLImageElement>\n\nconst useStyles = (props: ImageProps) => {\n  const {\n    fillStyle,\n    width = WIDTH,\n    height = HEIGHT,\n    transitionSpeed = TRANSITION_SPEED,\n    enableTransition = ENABLE_TRANSITION,\n  } = props\n\n  return createStyles(() => ({\n    image: {\n      display: 'block',\n      height: fillStyle ? '100%' : height,\n      objectFit: fillStyle,\n      opacity: 0,\n      width: fillStyle ? '100%' : width,\n    },\n    root: {\n      display: 'block',\n      height,\n      maxWidth: '100%',\n      width,\n    },\n    visible: {\n      opacity: 1,\n      transition: enableTransition ? `opacity ${transitionSpeed}ms` : undefined,\n    },\n  }))()\n}\n\nfunction getImage(src: string) {\n  return new Promise(resolve => {\n    const img = document.createElement('img')\n    img.onerror = resolve\n    img.onload = resolve\n    img.src = src\n  })\n}\n\n/**\n * Load remote image without lazy loading\n */\nconst Image: React.ForwardRefRenderFunction<HTMLImageElement, ImageProps> = (props, ref) => {\n  const styles = useStyles(props)\n  const {\n    src,\n    alt,\n    style,\n    onLoad,\n    className,\n    fillStyle,\n    width = WIDTH,\n    height = HEIGHT,\n    transitionSpeed = TRANSITION_SPEED,\n    enableTransition = ENABLE_TRANSITION,\n    ...restProps\n  } = props\n\n  const [loading, setLoading] = useState(true)\n  /**\n   * We want to re-fetch the image if the `src` prop changes and show a loading state while the image is downloading.\n   * In an ideal world, we would bind to the img `loadstart` and `load` events and set some state based on these events.\n   * However, browsers might not implment the `loadstart` event: https://bugs.chromium.org/p/chromium/issues/detail?id=458851.\n   * We also have to be very careful to not cause race conditions by mananging `loading` state in multiple callbacks, effects.\n   * To solve the problem, we are creating an Image Element and wrapping it with our own loading logic.\n   * We re-create and download the Image Element any time the `src` prop changes.\n   * This may look like a hack because we also have an `img` Element in our JSX. You might think we download each image twice.\n   * However, modern browsers are smart enough to only fetch the image once, so this code works just fine.\n   */\n  useEffect(() => {\n    setLoading(true)\n    getImage(src).then(() => setLoading(false))\n  }, [src])\n\n  const handleLoad = (event: React.SyntheticEvent<HTMLImageElement>) => {\n    // Execute `onLoad` callback after transition finishes if the prop is present\n    if (onLoad) {\n      if (enableTransition) {\n        setTimeout(() => onLoad(event), transitionSpeed)\n      } else {\n        onLoad(event)\n      }\n    }\n  }\n\n  return (\n    <span css={styles.root} className={className} style={style}>\n      <img\n        src={src}\n        alt={alt}\n        ref={ref}\n        width={width}\n        height={height}\n        onLoad={handleLoad}\n        css={[styles.image, !loading && styles.visible]}\n        {...restProps}\n      />\n    </span>\n  )\n}\n\nexport default memo(forwardRef(Image))\n","import { forwardRef, memo } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { supportsIntersectionObserver, supportsNativeLazyLoading } from '@instacart/cocktail-utils'\nimport { ImageOptions } from '@app/types/config'\nimport transform from '@instacart/enterprise-services/image-transform'\nimport Image from './Image'\n\nexport type LazyImageProps = {\n  /** URL of the image being displayed */\n  src: string\n  /** Alt tag for the image */\n  alt: string\n  /** String that sets how the image fills the container */\n  fillStyle?: 'cover' | 'contain' | 'fill' | 'none' | 'scale-down'\n  /** Enable onLoad transition */\n  enableTransition?: boolean\n  /** Transition speed (ms) */\n  transitionSpeed?: number\n  /** Indicates at what percentage of the target's (image) visibility the observer's callback should be executed */\n  threshold?: number\n  // Image transformation options. See @instacart/enterprise-services/image-transform.\n  imageOptions?: ImageOptions\n} & React.ImgHTMLAttributes<HTMLImageElement>\n\n/**\n * Lazy Load external image with cloudinary optimization or fallback to standard Image.\n */\nconst LazyImage: React.ForwardRefRenderFunction<HTMLImageElement, LazyImageProps> = (\n  props,\n  ref\n) => {\n  const options: ImageOptions = { ...props.imageOptions }\n\n  if (props.width && !Number.isNaN(props.width) && !options.width) {\n    options.width = Number(props.width)\n  }\n\n  if (props.height && !!Number.isNaN(props.height) && !options.height) {\n    options.height = Number(props.height)\n  }\n\n  const { threshold = 0, enableTransition = true, ...restProps } = props\n  const { ref: containerRef, entry } = useInView({ threshold })\n\n  const isIntersecting = entry?.isIntersecting && entry?.intersectionRatio >= threshold\n\n  // Use native lazy loading when supported\n  if (supportsNativeLazyLoading()) {\n    return <Image ref={ref} loading=\"lazy\" enableTransition={enableTransition} {...restProps} />\n  }\n\n  // Use custom lazy loading when intersection observer is supported\n  if (supportsIntersectionObserver()) {\n    return (\n      <div ref={containerRef}>\n        {isIntersecting ? (\n          <Image\n            {...restProps}\n            ref={ref}\n            src={transform(props.src, options)}\n            enableTransition={enableTransition}\n          />\n        ) : (\n          <div\n            style={{\n              display: 'inline-block',\n              height: props.height,\n              width: props.width,\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n\n  // Otherwise use standard image\n  return <Image ref={ref} enableTransition={enableTransition} {...restProps} />\n}\n\nexport default memo(forwardRef(LazyImage))\n","import { useMemo, ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\nimport { elevation, spacing, responsive } from '@instacart/ids-core'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\n\nimport { CollectionPlacement, CollectionPromotedMedia } from '@app/types/placements'\nimport { promotedImageSelector } from '@app/services/promotedMedia/selectors'\nimport { makeUseSelectorWithProps } from '@app/react/common/hooks/useSelectorWithProps'\nimport LazyImage from '@app/react/common/LazyImage'\n\ninterface PromotedMediaProps\n  extends DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  placement?: CollectionPlacement\n  defaultImage?: string\n  fallbackImage?: string\n}\n\ninterface StyleProps {\n  promotedMedia?: CollectionPromotedMedia\n}\n\nconst useStyles = ({ promotedMedia }: StyleProps) => {\n  const DEFAULT_WIDTH = 200\n  const span = promotedMedia?.desktop?.span || 1\n\n  return createStyles(theme => ({\n    anchorImage: {\n      borderTopLeftRadius: theme.radius.r4,\n      borderTopRightRadius: theme.radius.r4,\n      display: 'block',\n      img: {\n        margin: 'auto',\n        maxHeight: '100%',\n        maxWidth: '100%',\n      },\n      opacity: 0,\n      transition: 'opacity 175ms ease-out',\n    },\n    anchorImageShow: {\n      opacity: 1,\n    },\n    container: {\n      borderRadius: theme.radius.r4,\n\n      margin: `${spacing.s8}px ${spacing.s8}px`,\n\n      position: 'relative',\n      // TODO: Find a better way https://github.com/instacart/unata-web-frontend/blob/dev/frontend-config/unata/styles/shared/cell.styl#L7\n      width: DEFAULT_WIDTH * span + (span - 1) * 30 - 2,\n      [responsive.up('r')]: {\n        '&:hover, &:focus': {\n          // TODO: Need to use primary light color\n          border: `1px solid ${theme.colors.brandPromotionalLight}`,\n          ...elevation.low.shadow,\n        },\n        border: `1px solid ${theme.colors.systemGrayscale10}`,\n        transition: 'box-shadow 175ms ease-in-out',\n      },\n      [responsive.down('r')]: {\n        border: 'none',\n\n        margin: '0',\n        // Fixed width for mobile\n        width: 130,\n      },\n    },\n    imageWrapper: {\n      borderRadius: theme.radius.r4,\n      height: '100%',\n      position: 'relative',\n    },\n    promoted: { padding: 0 },\n  }))()\n}\n\nconst PromotedMedia = ({ placement, defaultImage, fallbackImage, onClick }: PromotedMediaProps) => {\n  const styles = useStyles({ promotedMedia: placement?.promoted_media })\n\n  // promoted media useSelector props dependency\n  const selectorProps = useMemo(\n    () =>\n      ({\n        defaultImage,\n        fallbackImage,\n        promotedMedia: placement?.promoted_media,\n      } as const),\n    [defaultImage, fallbackImage, placement?.promoted_media]\n  )\n\n  //   Memo useSelectorwithProps\n  const useSelectorWithProps = useMemo(() => makeUseSelectorWithProps(selectorProps), [\n    selectorProps,\n  ])\n\n  // Promoted media image selector\n  const { image, altText, isPromotedImage } = useSelectorWithProps(promotedImageSelector)\n\n  if (!placement && !image) {\n    return null\n  }\n\n  return (\n    <button css={styles.container} onClick={onClick}>\n      <div css={[styles.imageWrapper, isPromotedImage && styles.promoted]}>\n        <span css={[styles.anchorImage, image && styles.anchorImageShow]}>\n          <LazyImage src={image} alt={altText} />\n        </span>\n      </div>\n    </button>\n  )\n}\n\nexport default PromotedMedia\n","import { MouseEvent } from 'react'\nimport { useSelector } from 'react-redux'\nimport { responsive, spacing } from '@instacart/ids-core'\nimport {\n  Collection,\n  CollectionHeader,\n  CollectionLink,\n  CollectionTitle,\n} from '@app/react/ids/enterprise/organisms'\nimport type { Collection as CollectionType, CollectionId } from '@app/types/collection'\nimport { Carousel } from '@app/react/ids/enterprise/molecules/Carousel'\nimport { ItemTileContainer } from '@app/react/components/itemTileContainer/ItemTileContainer'\nimport { productCollectionLang, viewMoreCollectionLink } from '@app/services/collections/selectors'\nimport { lang as langService } from '@instacart/enterprise-services'\nimport { isMobileSelector } from '@app/services/browser/selectors'\nimport { formatImagePlacementForAnalytics } from '@app/utils/placements'\nimport { useAnalytics } from '@app/react/common/hooks/useAnalytics'\nimport { eventEmitter, EVENT_TYPES } from '@app/utils/eventEmitter'\nimport { CollectionPlacement } from '@app/types/placements'\nimport { CollectionSeeMore } from '@app/react/ids/enterprise/organisms/Collection/CollectionSeeMore'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport PromotedMedia from '@app/react/components/promotedMedia/PromotedMedia'\n\ninterface ProductCollectionProps {\n  collection: CollectionType\n  fullWidth?: boolean\n  // enable view more button\n  enableViewMore?: boolean\n  // enable placement items to display when available\n  enablePlacements?: boolean\n}\n\nconst useStyles = createStyles(() => ({\n  childrenWrapper: {\n    margin: `0 ${spacing.s16}px`,\n    [responsive.down('r')]: {\n      '& > div': { height: 'auto', width: 130 },\n      margin: `0 ${spacing.s8}px`,\n      marginLeft: spacing.s16,\n    },\n  },\n  fullWidthHeader: {\n    margin: `20px ${spacing.s16}px`,\n    [responsive.down('r')]: {\n      margin: `10px ${spacing.s8}px`,\n    },\n  },\n  seeMoreWrapper: {\n    margin: `0 ${spacing.s40}px`,\n  },\n}))\n\nconst ProductCollection = ({\n  collection,\n  fullWidth,\n  enableViewMore,\n  enablePlacements,\n}: ProductCollectionProps) => {\n  const { createClickHandler, logClickEvent } = useAnalytics()\n  const styles = useStyles()\n\n  const isMobile = useSelector(isMobileSelector)\n  const lang = useSelector(productCollectionLang)\n  const viewMoreLink = useSelector(state => viewMoreCollectionLink(state, collection?.id))\n\n  const moreItems = collection.item_count - collection.items.length\n\n  // Promoted image click handler ( LOG_IMAGE_PLACEMENT controlls the navigation from Angular)\n  // TODO: Need to refactor this to navigate from react instead of Angular eventEmitter\n  const handlePromotedClick = (event: MouseEvent, placement: CollectionPlacement) =>\n    createClickHandler({ category: `catalog placement ID ${placement.id}` }, () => {\n      const formattedPlacement = formatImagePlacementForAnalytics(placement, 'collection_banner')\n      eventEmitter.emit(EVENT_TYPES.LOG_IMAGE_PLACEMENT, {\n        location: 'collection carousel',\n        placement: formattedPlacement,\n      })\n    })(event)\n\n  const logSeeMore = (id: CollectionId) => {\n    logClickEvent({ category: `homepage collection see more button`, value: id })\n  }\n\n  return (\n    <div data-test={`collection-${collection.id}`}>\n      <Collection fullWidth={fullWidth}>\n        <div css={[fullWidth && styles.fullWidthHeader]}>\n          <CollectionHeader>\n            <CollectionTitle>{collection.name}</CollectionTitle>\n            {enableViewMore && (\n              <CollectionLink\n                href={viewMoreLink}\n                onClick={() => logSeeMore(collection.id)}\n                data-test={`collection-more-${collection.id}`}\n              >\n                {langService.interpolate(lang.viewCountMore, {\n                  count: moreItems > 0 ? `${moreItems}` : '',\n                })}\n              </CollectionLink>\n            )}\n          </CollectionHeader>\n        </div>\n        <Carousel\n          isMobile={isMobile}\n          lang={{\n            carouselAccessibleInstructions: lang.carouselInstructions,\n            carouselItemAccessibleLabel: lang.carouselItem,\n            containerAccessibleLabel: `${collection.name} ${lang.carousel}`,\n            nextButtonAccessibleLabel: lang.next,\n            previousButtonAccessibleLabel: lang.previous,\n          }}\n        >\n          {/* Render placements */}\n          {enablePlacements &&\n            collection.placements?.map(placement => (\n              <div css={styles.childrenWrapper} key={placement.id}>\n                <PromotedMedia\n                  placement={placement}\n                  onClick={e => handlePromotedClick(e, placement)}\n                />\n              </div>\n            ))}\n          {/* Render item tile */}\n          {collection.items.map(i => (\n            <div css={styles.childrenWrapper} key={i.store_product.id}>\n              <ItemTileContainer product={i.store_product} />\n            </div>\n          ))}\n          {/* Mobile only addtional view more button */}\n          {isMobile && enableViewMore && moreItems && (\n            <div css={styles.seeMoreWrapper}>\n              <CollectionSeeMore href={viewMoreLink} />\n            </div>\n          )}\n        </Carousel>\n      </Collection>\n    </div>\n  )\n}\n\nexport default ProductCollection\n"],"sourceRoot":""}