{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/rating/RatingWithRightSlot.tsx","webpack://UnataWidgets/./packages/enterprise-user-reviews/common/constants.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/common/propTypes.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewAuthor.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/SyndicationAttributionContainer.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/SyndicationAttribution.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewContent.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewRating.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewsList.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewsListWrapper.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewStats.js","webpack://UnataWidgets/./app/react/components/rating/RatingWithCount.tsx","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/ReviewsHeading.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/RatingHelp.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/RatingFormControl.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/services/fingerprint.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/TextFieldLabel.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/AddReviewForm.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/components/CurrentRating.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/containers/AddReview.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/containers/Reviews.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/common/analytics.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/lang/initI18n.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/services/reviews.js","webpack://UnataWidgets/./packages/enterprise-user-reviews/containers/App.js","webpack://UnataWidgets/./app/react/components/rating/styles.ts","webpack://UnataWidgets/./app/react/components/rating/Rating.tsx"],"names":["useStyles","createStyles","root","alignItems","display","whiteSpace","slot","marginLeft","spacing","s8","RatingWithRightSlot","children","ratingProps","styles","rootStyles","fontSize","iconSize","lineHeight","css","userPropType","PropTypes","shape","id","string","name","location","isTrial","bool","isRequired","syndicationSourcePropType","logo_image_url","content_link","reviewPropType","message","rating","number","item_id","submission_time","title","username","total_reviews","syndication_source","commonPropTypes","entityId","entityExtId","onTermsClick","func","onShowAllClick","onLoginRequired","user","perPage","reviewType","oneOf","showPaging","tokens","marginRight","size","xxSmall","marginBottom","xxxSmall","utils","mediaQuery","minWidth","breakpoint","medium","width","font","body","fontWeight","weight","bold","caption","ReviewAuthor","memo","review","restProps","t","useTranslation","count","defaultProps","propTypes","SyndicationAttributionContainer","contentLink","href","rel","node","flexDirection","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","border","radius","regular","backgroundColor","color","neutral","grey2","text","primary","logo","maxWidth","alignSelf","source","overflowWrap","SyndicationAttribution","syndicationSource","lang","useLang","attributionText","interpolate","reviewSyndicationAttribution","attributionTextKnownSource","sourceName","attributionTextUnknownSource","retailer","clientName","logoAltText","logoAltKnownSource","logoAltUnknownSource","data-test","src","alt","large","syndicationAttributionContainer","marginTop","ReviewContent","timeAgo","xSmall","ReviewRating","date","Rating","list","item","borderBottom","toPx","padding","layout","empty","ReviewsList","reviews","length","map","arrayOf","row","col","flex","fontFamily","family","button","margin","height","sort","justifyContent","select","loadMore","textAlign","encodeSortOption","order","join","ReviewsWrapper","totalCount","onSortChange","sortBy","onMoreClick","loading","langAria","useLangAria","sortOptions","value","label","showMoreButton","encodedSortOrder","activeSort","find","start","end","total","onClick","variant","options","onChange","option","rest","decodedValue","split","decodeSortOption","inputSize","isSearchable","aria-label","reviewSortingSelect","middleStyles","unfilledBarStyles","unfilledColour","iconTextAligner","svg","flexShrink","svgAtributes","viewBox","preserveAspectRatio","focusable","pointerEvents","calcRating","ratingCount","totalReviews","ratingArray","Array","from","v","k","reverse","ReviewStats","ratingDistribution","filledColour","style","className","useTokens","rowBackgroundColour","rowFilledColour","brand","rightStyles","reviewStatStyles","flexWrap","filledBarStyles","small","iconStyles","ratingValue","numReviewsForRating","arr","obj","x","findValueFromRating","reviewsHaveRating","numReviews","numStars","aria-hidden","d","data","reduce","a","b","object","oneOfType","theme","clickable","cursor","textDecoration","typography","bodyMedium1","colors","brandPrimaryRegular","RatingWithCount","showAverage","labelStyles","roundedRating","toFixed","template","returnTemplate","templateToUse","ariaLabel","maxRating","header","secondary","h3","ReviewsHeading","average_rating","user_count","defaultLang","description","star1","star2","star3","star4","star5","RatingHelp","i18n","marginBotton","star","note","keys","i","tooltipIcon","verticalAlign","fill","controls","input","displayName","RatingFormControl","onAddClick","required","fullWidth","htmlFor","content","position","loaded","getFingerprint","async","Promise","resolve","reject","attempts","intervalId","setInterval","fingerprint","window","IGLOO","getBlackbox","res","finished","blackbox","getBlackboxString","clearInterval","Error","TextFieldLabel","array","terms","requiredContainer","requiredAsterisk","ui","error","AddReviewForm","open","onOpen","onClose","onSubmit","onInputChange","onRatingChange","formData","formDataIsValid","requireTitleAndMessage","useEffect","enable_rip","enable_flash","install_flash","loader","version","fp_static","initFingerprint","undefined","maxLength","multiline","type","disabled","CurrentRating","defaultFormData","success","AddReview","props","setOpen","useState","validationError","setValidationError","setFormData","userHasSubmitted","setUserHasSubmitted","perform","reset","useAction","params","api","post","userReview","apiFn","useCallback","getUser","sku","user_ext_id","result","useUserReviewEffect","config","configService","selectors","getConfig","isFormDataValid","values","userReviews","trim","currentRating","errorMsg","event","preventDefault","ext_id","target","_event","time","reviewPremoderationTime","stats","boxSizing","Reviews","useConfig","setSortBy","defaultSort","offset","setOffset","setLoading","setData","setError","previousOffset","useRef","fetchReviews","limit","response","get","prevData","newData","current","concat","e","useReviews","rating_distribution","analytics","log","segmentData","segmentArgs","review_count","review_type","segmentName","logShowAll","logSort","per_page","logSeeMore","init","use","initReactI18next","lng","fallbackLng","addResourceBundle","en","ReviewsApi","constructor","this","endpoint","getEndpoint","parameters","querystring","request","user_reviews","paramObj","method","reviewData","user_review","initI18n","apiEndpoints","products","recipes","App","reviewProps","fallback","styleVariables","createStyleVariables","filled","FILLED_STYLES","variables","icon","icons","overflow","left","unfilled","systemGrayscale30","filledWidth","langService"],"mappings":"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","file":"7.js","sourcesContent":["import type { ReactNode } from 'react'\nimport Rating, { RatingProps } from '@app/react/components/rating/Rating'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { spacing } from '@instacart/ids-core'\n\nconst useStyles = createStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    whiteSpace: 'nowrap',\n  },\n  slot: {\n    marginLeft: spacing.s8,\n  },\n})\n\ninterface Props extends RatingProps {\n  children?: ReactNode\n}\n\nconst RatingWithRightSlot = ({ children, ...ratingProps }: Props) => {\n  const styles = useStyles()\n  const rootStyles = {\n    ...styles.root,\n    fontSize: ratingProps.iconSize,\n    lineHeight: `${ratingProps.iconSize}px`,\n  }\n  return (\n    <div css={rootStyles}>\n      <Rating {...ratingProps} />\n      <div css={styles.slot}>{children}</div>\n    </div>\n  )\n}\n\nexport default RatingWithRightSlot\n","export const ENDPOINT_PRODUCTS = 'store_products'\nexport const ENDPOINT_RECIPES = 'recipes'\n\nexport const TYPE_PRODUCTS = 'products'\nexport const TYPE_RECIPES = 'recipes'\n","import PropTypes from 'prop-types'\n\nimport { TYPE_PRODUCTS, TYPE_RECIPES } from './constants'\n\nexport const userPropType = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  location: PropTypes.string,\n  isTrial: PropTypes.bool.isRequired,\n})\n\nexport const syndicationSourcePropType = PropTypes.shape({\n  logo_image_url: PropTypes.string,\n  content_link: PropTypes.string,\n  name: PropTypes.string,\n})\n\nexport const reviewPropType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  message: PropTypes.string,\n  rating: PropTypes.number.isRequired,\n  item_id: PropTypes.string.isRequired,\n  submission_time: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  username: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  total_reviews: PropTypes.number.isRequired,\n  syndication_source: syndicationSourcePropType,\n})\n\nexport const commonPropTypes = {\n  /**\n   * ID of the entity\n   */\n  entityId: PropTypes.string.isRequired,\n  /**\n   * Ext ID of the entity\n   */\n  entityExtId: PropTypes.string.isRequired,\n  /**\n   * Terms link click callback\n   */\n  onTermsClick: PropTypes.func,\n  /**\n   * Show all reviews click callback\n   */\n  onShowAllClick: PropTypes.func,\n  /**\n   * Callback when user triggers an action which requires login\n   */\n  onLoginRequired: PropTypes.func.isRequired,\n  /**\n   * User data\n   */\n  user: userPropType.isRequired,\n  /**\n   * Number of reviews shown per page\n   */\n  perPage: PropTypes.number,\n  /**\n   * Determine what type of review to display/save\n   */\n  reviewType: PropTypes.oneOf([TYPE_PRODUCTS, TYPE_RECIPES]),\n  /**\n   * Show pagination controls\n   */\n  showPaging: PropTypes.bool,\n}\n","import React, { memo } from 'react'\nimport { createStyles, utils } from '@instacart/cocktail'\nimport { useTranslation } from 'react-i18next'\nimport { reviewPropType } from '../common/propTypes'\n\nconst useStyles = createStyles(tokens => ({\n  root: {\n    marginRight: tokens.size.spacing.xxSmall,\n    marginBottom: tokens.size.spacing.xxxSmall,\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      width: 150,\n      minWidth: 150,\n    },\n  },\n  name: {\n    fontSize: tokens.size.font.body,\n    fontWeight: tokens.font.weight.bold,\n    marginBottom: tokens.size.spacing.xxxSmall,\n  },\n  caption: {\n    fontSize: tokens.size.font.caption,\n  },\n}))\n\nconst ReviewAuthor = memo(({ review, ...restProps }) => {\n  const styles = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div css={styles.root} {...restProps}>\n      <div css={styles.name}>{review.username}</div>\n      {review.location && <div css={styles.caption}>{review.location}</div>}\n      <div css={styles.caption}>{t('reviewsCount', { count: review.total_reviews })}</div>\n    </div>\n  )\n})\n\nReviewAuthor.defaultProps = {}\n\nReviewAuthor.propTypes = {\n  // Review data\n  review: reviewPropType.isRequired,\n}\n\nexport default ReviewAuthor\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\n// renders an anchor if a contentLink is given or a div otherwise. This is to make the component\n// more accessible; if there is a link any assitive technology will understand that there's a link,\n// and if there isn't assitive technology won't be confused by an unclickable anchor.\nconst SyndicationAttributionContainer = memo(({ contentLink, children, ...restProps }) => {\n  if (contentLink) {\n    return (\n      <a href={contentLink} rel=\"nofollow\" {...restProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return <span {...restProps}>{children}</span>\n})\n\nSyndicationAttributionContainer.propTypes = {\n  contentLink: PropTypes.string,\n  children: PropTypes.node.isRequired,\n}\n\nexport default SyndicationAttributionContainer\n","import React, { memo } from 'react'\nimport { createStyles } from '@instacart/cocktail'\nimport { useLang } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { syndicationSourcePropType } from '../common/propTypes'\nimport SyndicationAttributionContainer from './SyndicationAttributionContainer'\n\nconst useStyles = createStyles(tokens => ({\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    paddingTop: `${tokens.size.spacing.xxSmall}px`,\n    paddingBottom: `${tokens.size.spacing.xxSmall}px`,\n    // to create a space between the logo and the source text we play around with paddings and\n    // margins. here we halve the horizontal padding, the rest is added by the logo and text\n    paddingLeft: `${tokens.size.spacing.xxSmall / 2}px`,\n    paddingRight: `${tokens.size.spacing.xxSmall / 2}px`,\n\n    borderRadius: `${tokens.border.radius.regular}px`,\n    backgroundColor: tokens.color.neutral.grey2,\n    color: tokens.color.text.primary,\n  },\n\n  logo: {\n    maxWidth: '60px',\n\n    paddingLeft: `${tokens.size.spacing.xxSmall / 2}px`,\n    paddingRight: `${tokens.size.spacing.xxSmall / 2}px`,\n\n    alignSelf: 'baseline',\n  },\n\n  source: {\n    fontSize: tokens.size.font.caption,\n    overflowWrap: 'anywhere',\n\n    paddingLeft: `${tokens.size.spacing.xxSmall / 2}px`,\n    paddingRight: `${tokens.size.spacing.xxSmall / 2}px`,\n  },\n}))\n\nconst SyndicationAttribution = memo(({ syndicationSource, ...restProps }) => {\n  const styles = useStyles()\n  const lang = useLang()\n\n  const attributionText = syndicationSource.name\n    ? interpolate(lang.reviewSyndicationAttribution.attributionTextKnownSource, {\n        sourceName: syndicationSource.name,\n      })\n    : interpolate(lang.reviewSyndicationAttribution.attributionTextUnknownSource, {\n        retailer: lang.clientName,\n      })\n\n  const logoAltText = syndicationSource.name\n    ? interpolate(lang.reviewSyndicationAttribution.logoAltKnownSource, {\n        sourceName: syndicationSource.name,\n      })\n    : lang.reviewSyndicationAttribution.logoAltUnknownSource\n\n  return (\n    <SyndicationAttributionContainer\n      css={styles.root}\n      contentLink={syndicationSource.content_link}\n      {...restProps}\n    >\n      {syndicationSource.logo_image_url && (\n        <img\n          data-test=\"syndicated-review-logo\"\n          css={styles.logo}\n          src={syndicationSource.logo_image_url}\n          alt={logoAltText}\n        />\n      )}\n      <div css={styles.source} data-test=\"syndicated-review-source\">\n        {attributionText}\n      </div>\n    </SyndicationAttributionContainer>\n  )\n})\n\nSyndicationAttribution.propTypes = {\n  syndicationSource: syndicationSourcePropType.isRequired,\n}\n\nexport default SyndicationAttribution\n","import React, { memo } from 'react'\nimport { createStyles } from '@instacart/cocktail'\nimport { reviewPropType } from '../common/propTypes'\nimport SyndicationAttribution from './SyndicationAttribution'\n\nconst useStyles = createStyles(tokens => ({\n  root: {\n    marginRight: tokens.size.spacing.xxSmall,\n    marginBottom: tokens.size.spacing.xxxSmall,\n  },\n  title: {\n    fontSize: tokens.size.font.large,\n    fontWeight: tokens.font.weight.bold,\n    marginBottom: tokens.size.spacing.xxSmall,\n  },\n\n  body: {\n    fontSize: tokens.size.font.body,\n  },\n\n  syndicationAttributionContainer: {\n    marginTop: `${tokens.size.spacing.xxSmall}px`,\n  },\n}))\n\nconst ReviewContent = memo(({ review, ...restProps }) => {\n  const styles = useStyles()\n\n  return (\n    <div css={styles.root} {...restProps}>\n      <div css={styles.title}>{review.title}</div>\n      <div css={styles.body}>{review.message}</div>\n      {!!review.syndication_source && (\n        <div css={styles.syndicationAttributionContainer}>\n          <SyndicationAttribution syndicationSource={review.syndication_source} />\n        </div>\n      )}\n    </div>\n  )\n})\n\nReviewContent.propTypes = {\n  // Review data\n  review: reviewPropType.isRequired,\n}\n\nexport default ReviewContent\n","import { TimeToNow, createStyles } from '@instacart/cocktail'\nimport Rating from '@app/react/components/rating/Rating'\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useStyles = createStyles(tokens => ({\n  rating: {\n    fontSize: tokens.size.font.caption,\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: tokens.size.spacing.xxSmall,\n  },\n  timeAgo: {\n    marginLeft: tokens.size.spacing.xSmall,\n  },\n}))\n\nconst ReviewRating = memo(({ rating, date, ...restProps }) => {\n  const styles = useStyles()\n\n  return (\n    <div css={styles.rating} {...restProps}>\n      <Rating rating={rating} iconSize={14} />\n      <TimeToNow css={styles.timeAgo} date={date} />\n    </div>\n  )\n})\n\nReviewRating.defaultProps = {}\n\nReviewRating.propTypes = {\n  // Rating value\n  rating: PropTypes.number.isRequired,\n  // Submission time of the rating\n  date: PropTypes.string.isRequired,\n}\n\nexport default ReviewRating\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { createStyles, utils } from '@instacart/cocktail'\nimport { useTranslation } from 'react-i18next'\nimport ReviewAuthor from './ReviewAuthor'\nimport ReviewContent from './ReviewContent'\nimport ReviewRating from './ReviewRating'\nimport { reviewPropType } from '../common/propTypes'\n\nconst useStyles = createStyles(tokens => ({\n  list: {\n    width: '100%',\n  },\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      flexDirection: 'row',\n    },\n    borderBottom: utils.toPx`${tokens.border.width.regular} solid ${tokens.color.border.regular}`,\n    padding: utils.toPx`${tokens.size.layout.xxSmall} 0`,\n  },\n  empty: {\n    color: tokens.color.text.primary,\n    fontSize: tokens.size.font.body,\n  },\n}))\n\nconst ReviewsList = memo(({ reviews, ...restProps }) => {\n  const styles = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div css={styles.list} {...restProps}>\n      {reviews.length ? (\n        reviews.map(review => (\n          <div css={styles.item} key={review.id} data-test={`review-${review.id}`}>\n            <ReviewAuthor review={review} />\n            <div>\n              <ReviewRating rating={review.rating} date={review.submission_time} />\n              <ReviewContent review={review} />\n            </div>\n          </div>\n        ))\n      ) : (\n        <div css={styles.empty}>{t('noResults')}</div>\n      )}\n    </div>\n  )\n})\n\nReviewsList.defaultProps = {\n  reviews: [],\n}\n\nReviewsList.propTypes = {\n  // Object containing the list of reviews\n  reviews: PropTypes.arrayOf(reviewPropType),\n}\n\nexport default ReviewsList\n","import React, { memo, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTranslation } from 'react-i18next'\nimport { Button, createStyles, Select, utils } from '@instacart/cocktail'\nimport { useLangAria } from '@app/services/config/hooks'\nimport ReviewsList from './ReviewsList'\nimport { reviewPropType } from '../common/propTypes'\n\nconst useStyles = createStyles(tokens => ({\n  row: {\n    marginBottom: tokens.size.layout.xxSmall,\n    alignItems: 'center',\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      display: 'flex',\n      marginLeft: -tokens.size.spacing.xxSmall,\n      marginRight: -tokens.size.spacing.xxSmall,\n    },\n  },\n  col: {\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      flex: '1 1 auto',\n      marginLeft: tokens.size.spacing.xxSmall,\n      marginRight: tokens.size.spacing.xxSmall,\n    },\n  },\n  count: {\n    marginBottom: tokens.size.spacing.xxSmall,\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      alignItems: 'center',\n      marginBottom: 0,\n    },\n  },\n  text: {\n    fontFamily: tokens.font.family.primary,\n    color: tokens.color.text.primary,\n    fontSize: tokens.size.font.body,\n    lineHeight: tokens.size.lineHeight.body,\n  },\n  button: {\n    padding: 0,\n    margin: 0,\n    height: 'auto',\n    fontWeight: tokens.font.weight.bold,\n    marginLeft: tokens.size.spacing.xxSmall,\n  },\n  sort: {\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n  },\n  select: {\n    width: '100%',\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      marginLeft: tokens.size.spacing.xxSmall,\n      width: 'auto',\n    },\n  },\n  loadMore: {\n    padding: tokens.size.spacing.xSmall,\n    textAlign: 'center',\n  },\n}))\n\n/**\n * Converts a sort description into a string that can be used in the select value\n *\n * @param {object} { sort, order } The sort object to encode\n * @returns an underscore_separated string of the sort object\n */\nfunction encodeSortOption({ sort, order }) {\n  return [sort, order].join('_')\n}\n\n/**\n * Decodes a sort option received from the select box into a sort object\n *\n * @param {string} value an underscore_separated string of the sort object\n */\nfunction decodeSortOption(value) {\n  const [sort, order] = value.split('_')\n  return { sort, order }\n}\n\nconst ReviewsWrapper = ({\n  reviews,\n  totalCount,\n  onShowAllClick,\n  onSortChange,\n  sortBy,\n  perPage,\n  onMoreClick,\n  loading,\n}) => {\n  const styles = useStyles()\n  const { t } = useTranslation()\n  const langAria = useLangAria()\n\n  // The <Select /> component requires a string input for `value`, so encode\n  // it here and then decode when interacting with the parent components\n  const sortOptions = [\n    { value: { sort: 'SubmissionTime', order: 'desc' }, label: t('mostRecent') },\n    { value: { sort: 'Rating', order: 'desc' }, label: t('highestRated') },\n    { value: { sort: 'Rating', order: 'asc' }, label: t('lowestRated') },\n  ].map(({ value, label }) => ({\n    value: encodeSortOption(value),\n    label,\n  }))\n\n  const showMoreButton =\n    onMoreClick && !loading && reviews.length < totalCount && reviews.length > 0\n\n  const encodedSortOrder = encodeSortOption(sortBy)\n  const activeSort = sortOptions.find(({ value }) => value === encodedSortOrder)\n\n  return (\n    <Fragment>\n      {reviews.length > 0 && (\n        <div css={styles.row}>\n          <div css={[styles.col, styles.count]}>\n            <span css={styles.text}>\n              {t('pagedReviewsCount', { start: 1, end: reviews.length, total: totalCount })}\n            </span>\n            {onShowAllClick && (\n              <Button\n                onClick={onShowAllClick}\n                variant=\"link\"\n                css={styles.button}\n                data-test=\"show-all-button\"\n              >\n                {t('showAll')}\n              </Button>\n            )}\n          </div>\n          <div css={[styles.col, styles.sort]}>\n            <Select\n              value={activeSort}\n              options={sortOptions}\n              data-test=\"select-sort-options\"\n              onChange={(option, ...rest) => {\n                const { value, label } = option\n                const decodedValue = decodeSortOption(value)\n                return onSortChange({ value: decodedValue, label }, ...rest)\n              }}\n              inputSize=\"small\"\n              css={styles.select}\n              isSearchable={false}\n              aria-label={langAria.reviewSortingSelect}\n            />\n          </div>\n        </div>\n      )}\n      <ReviewsList reviews={reviews} />\n      {showMoreButton && (\n        <div css={styles.loadMore}>\n          <Button variant=\"outline\" onClick={onMoreClick} data-test=\"show-more-button\">\n            {t('moreReviews', { count: perPage })}\n          </Button>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nReviewsWrapper.defaultProps = {\n  sortBy: {\n    sort: 'SubmissionTime',\n    order: 'desc',\n  },\n  loading: false,\n}\n\nReviewsWrapper.propTypes = {\n  /**\n   * Array of reviews to be displayed\n   */\n  reviews: PropTypes.arrayOf(reviewPropType).isRequired,\n  /**\n   * Callback attached to show all button click\n   */\n  onShowAllClick: PropTypes.func,\n  /**\n   * Total count of reviews\n   */\n  totalCount: PropTypes.number.isRequired,\n  /**\n   * Callback when sort option changes\n   */\n  onSortChange: PropTypes.func,\n  /**\n   * Value to sort by\n   */\n  sortBy: PropTypes.shape({\n    sort: PropTypes.oneOf(['SubmissionTime', 'Rating']),\n    order: PropTypes.oneOf(['asc', 'desc']),\n  }),\n  /**\n   * Number of items per page\n   */\n  perPage: PropTypes.number.isRequired,\n  /**\n   * Callback when load more button clicked\n   */\n  onMoreClick: PropTypes.func,\n  /**\n   * Boolean indicating if more results are being loaded\n   */\n  loading: PropTypes.bool,\n}\n\nexport default memo(ReviewsWrapper)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTokens } from '@instacart/cocktail'\nimport { useLangAria } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\n\n// styles\nconst styles = {\n  fontSize: 10,\n}\n\nconst middleStyles = {\n  width: '100%',\n}\n\nconst unfilledBarStyles = unfilledColour => ({\n  width: '100%',\n  backgroundColor: unfilledColour,\n  textAlign: 'center',\n})\n\nconst iconTextAligner = {\n  display: 'flex',\n  alignItems: 'center',\n  svg: {\n    display: 'inline-block',\n    height: '1em',\n    width: '1em',\n    color: 'inherit',\n    flexShrink: 0,\n  },\n}\n\n// attributes\nconst svgAtributes = {\n  viewBox: '0 0 24 24',\n  preserveAspectRatio: 'xMidYMid meet',\n  focusable: 'false',\n  pointerEvents: 'none',\n}\n\n// functions\nconst isArrayEmpty = arr => {\n  return arr && arr.length === 0\n}\n\nconst findValueFromRating = (ratingDistribution, ratingValue) => {\n  const defaultRating = 0\n  const arrCheck = isArrayEmpty(ratingDistribution)\n  if (!arrCheck) {\n    const obj = ratingDistribution.find(x => x.rating === ratingValue)\n    return obj && obj.count ? obj.count : 0\n  }\n  return defaultRating\n}\n\nconst calcRating = (ratingCount, totalReviews) => {\n  const defaultPercent = '0%'\n  if (totalReviews > 0) {\n    return `${(ratingCount / totalReviews) * 100}%`\n  }\n  return defaultPercent\n}\n\nconst ratingArray = ratingCount => {\n  return Array.from({ length: ratingCount }, (v, k) => k + 1).reverse()\n}\n\nconst getTotalReviews = data => {\n  return data.reduce((a, b) => {\n    return a + b.count\n  }, 0)\n}\n\nconst ReviewStats = memo(\n  ({ ratingCount, ratingDistribution = [], filledColour, unfilledColour, style, className }) => {\n    const langAria = useLangAria()\n    const tokens = useTokens()\n\n    const rowBackgroundColour = unfilledColour || tokens.color.neutral.grey2\n    const rowFilledColour = filledColour || tokens.color.brand.primary.regular\n\n    const rightStyles = {\n      paddingLeft: tokens.size.spacing.xxxSmall,\n      textAlign: 'left',\n      width: 20,\n    }\n\n    const reviewStatStyles = {\n      display: 'flex',\n      flex: '0 1 auto',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      alignItems: 'baseline',\n      marginBottom: tokens.size.spacing.xxSmall,\n    }\n\n    const barStyles = {\n      height: 6,\n      borderRadius: tokens.border.radius.small,\n    }\n\n    const filledBarStyles = {\n      ...barStyles,\n      backgroundColor: rowFilledColour,\n    }\n\n    const filledRatingStyle = (rating, totalReviews) => ({\n      ...filledBarStyles,\n      width: `${calcRating(rating, totalReviews)}`,\n    })\n\n    const iconStyles = {\n      flex: '1 0 auto',\n      marginLeft: tokens.size.spacing.xxxSmall,\n      marginRight: tokens.size.spacing.xxxSmall,\n    }\n\n    return (\n      <div css={styles} style={style} className={className}>\n        {ratingArray(ratingCount).map(ratingValue => {\n          const numReviewsForRating = findValueFromRating(ratingDistribution, ratingValue)\n\n          return (\n            <div\n              css={reviewStatStyles}\n              key={ratingValue}\n              aria-label={interpolate(langAria.reviewsHaveRating, {\n                numReviews: numReviewsForRating,\n                numStars: ratingValue,\n              })}\n            >\n              <div>\n                <div aria-hidden css={iconTextAligner}>\n                  <span>{ratingValue}&nbsp;</span>\n                  <svg {...svgAtributes} css={iconStyles}>\n                    <g id=\"star\">\n                      <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n                    </g>\n                  </svg>\n                </div>\n              </div>\n              <div css={middleStyles}>\n                <div css={unfilledBarStyles(rowBackgroundColour)}>\n                  <div\n                    css={filledRatingStyle(\n                      numReviewsForRating,\n                      getTotalReviews(ratingDistribution)\n                    )}\n                  />\n                </div>\n              </div>\n              <div aria-hidden css={rightStyles}>\n                <span>{numReviewsForRating}</span>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\n\nReviewStats.defaultProps = {\n  ratingCount: 5,\n}\n\nReviewStats.propTypes = {\n  // the number of rating 'ranks' or 'stars' (5 star tatings)\n  ratingCount: PropTypes.number,\n  // Object array containg the number of ratings submitted for each 'rank'\n  ratingDistribution: PropTypes.arrayOf(\n    PropTypes.shape({\n      count: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n  // foreground colour on bar graph\n  filledColour: PropTypes.string,\n  // background colour on bar graph\n  unfilledColour: PropTypes.string,\n  // Custom style object for the containing element\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  // Custom emotion css object or class string for the containing element\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n}\n\nexport default ReviewStats\n","import { RatingProps } from '@app/react/components/rating/Rating'\nimport { CSSObject } from '@emotion/core'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport RatingWithRightSlot from '@app/react/components/rating/RatingWithRightSlot'\nimport { useLangAria } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\n\nconst MAX_RATING = 5\n\nconst useStyles = createStyles(theme => ({\n  clickable: {\n    '&:hover': {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n    },\n  },\n  label: {\n    fontFamily: theme.typography.bodyMedium1.fontFamily,\n    fontSize: theme.typography.bodyMedium1.fontSize,\n    fontWeight: theme.typography.bodyMedium1.fontWeight,\n    lineHeight: theme.typography.bodyMedium1.lineHeight,\n  },\n  root: {\n    color: theme.colors.brandPrimaryRegular,\n  },\n}))\n\nconst templateToUse = (roundedRating: number, ratingCount: number, showAverage: boolean) => {\n  let returnTemplate = ''\n\n  if (showAverage) {\n    if (ratingCount > 0 && roundedRating > 0) {\n      returnTemplate = `${roundedRating} (${ratingCount})`\n    } else if (roundedRating > 0) {\n      returnTemplate = `${roundedRating}`\n    }\n  } else if (ratingCount > 0) {\n    returnTemplate = `(${ratingCount})`\n  }\n\n  return returnTemplate\n}\n\nexport interface Props extends RatingProps {\n  /** Enable clickable styles */\n  clickable?: boolean\n  /** styles override for the label */\n  labelStyles?: CSSObject\n  /** Number of users who have rated the product */\n  ratingCount?: number\n  /** show/hide the rating average label */\n  showAverage?: boolean\n}\n\nconst RatingWithCount = ({\n  rating = 0,\n  ratingCount = 0,\n  showAverage = true,\n  labelStyles,\n  iconSize,\n  clickable = false,\n}: Props) => {\n  const styles = useStyles()\n  const langAria = useLangAria()\n  const roundedRating = +rating.toFixed(2)\n  const template = templateToUse(roundedRating, ratingCount, showAverage)\n\n  const ariaLabel = `${interpolate(langAria.rating, {\n    maxRating: MAX_RATING,\n    rating: roundedRating,\n  })}. ${interpolate(langAria.totalReviews, { numReviews: ratingCount })}`\n\n  return (\n    <div css={[styles.root, clickable && styles.clickable]}>\n      <RatingWithRightSlot rating={rating} iconSize={iconSize}>\n        {template && (\n          <>\n            <span className=\"screen-reader-text\">{ariaLabel}</span>\n            <span css={[styles.label, labelStyles]} data-test=\"product-rating-label\" aria-hidden>\n              {template}\n            </span>\n          </>\n        )}\n      </RatingWithRightSlot>\n    </div>\n  )\n}\n\nexport default RatingWithCount\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTranslation } from 'react-i18next'\nimport { createStyles, utils } from '@instacart/cocktail'\nimport RatingWithCount from '@app/react/components/rating/RatingWithCount'\n\nconst useStyles = createStyles(tokens => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: tokens.size.spacing.xxSmall,\n  },\n  header: {\n    fontFamily: tokens.font.family.secondary,\n    margin: 0,\n    marginRight: tokens.size.spacing.xxSmall,\n    fontSize: tokens.size.font.h3,\n    lineHeight: tokens.size.lineHeight.h3,\n    fontWeight: 600,\n    flex: '1 1 auto',\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      flex: '0 1 auto',\n    },\n  },\n}))\n\nconst ReviewsHeading = memo(({ rating }) => {\n  const styles = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div css={styles.root}>\n      <h2 css={styles.header}>{t('heading')}</h2>\n      <RatingWithCount\n        rating={rating.average_rating}\n        ratingCount={rating.user_count}\n        iconSize={20}\n      />\n    </div>\n  )\n})\n\nReviewsHeading.defaultProps = {\n  rating: {\n    average_rating: 0,\n    user_count: 0,\n  },\n}\n\nReviewsHeading.propTypes = {\n  /**\n   * Reviews rating data\n   */\n  rating: PropTypes.shape({\n    average_rating: PropTypes.number.isRequired,\n    user_count: PropTypes.number.isRequired,\n  }),\n}\n\nexport default ReviewsHeading\n","import React, { memo } from 'react'\nimport { Rating, useTokens } from '@instacart/cocktail'\nimport PropTypes from 'prop-types'\n\nconst defaultLang = {\n  description:\n    'Adding a rating or review is a great way for us to hear from you. Please also leave us a comment under your rating',\n  star1: \"Wouldn't try it again\",\n  star2: 'Not my favourite',\n  star3: 'It was ok',\n  star4: 'Pretty good',\n  star5: 'Would buy this again',\n}\n\nconst RatingHelp = memo(({ i18n }) => {\n  const tokens = useTokens()\n\n  const lang = { ...defaultLang, ...i18n }\n\n  const styles = {\n    description: {\n      marginTop: 0,\n    },\n    row: {\n      display: 'flex',\n      marginBotton: tokens.size.spacing.xxSmall,\n      alignItems: 'center',\n    },\n    star: {\n      flex: '0 0 auto',\n      padding: tokens.size.spacing.xxxSmall,\n    },\n    note: {\n      flex: '1 1 auto',\n      padding: tokens.size.spacing.xxxSmall,\n    },\n  }\n\n  return (\n    <div>\n      <p css={styles.description}>{lang.description}</p>\n      {[...Array(5).keys()].map(i => (\n        <div css={styles.row} key={i}>\n          <div css={styles.star}>\n            <Rating rating={i + 1} iconSize={15} />\n          </div>\n          <div css={styles.note}>{lang[`star${i + 1}`]}</div>\n        </div>\n      ))}\n    </div>\n  )\n})\n\nRatingHelp.defaultProps = {\n  i18n: {},\n}\n\nRatingHelp.propTypes = {\n  /**\n   * Customize language variables\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  i18n: PropTypes.object,\n}\n\nexport default RatingHelp\n","import React, { memo } from 'react'\nimport {\n  FormControl,\n  FormLabel,\n  Tooltip,\n  RatingInput,\n  Button,\n  createStyles,\n  utils,\n} from '@instacart/cocktail'\nimport PropTypes from 'prop-types'\nimport { useTranslation } from 'react-i18next'\nimport RatingHelp from './RatingHelp'\n\nconst useStyles = createStyles(\n  tokens => ({\n    tooltipIcon: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      marginLeft: tokens.size.spacing.xxxSmall,\n      svg: {\n        fill: tokens.color.brand.primary.regular,\n      },\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    input: {\n      marginRight: 'auto',\n      [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n        marginRight: tokens.size.spacing.small,\n      },\n    },\n    button: {\n      [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n        marginRight: 'auto',\n      },\n    },\n  }),\n  { displayName: 'RatingFormControl' }\n)\n\nconst RatingFormControl = memo(\n  ({ label, rating, onChange, tooltipIcon, onAddClick, ...restProps }) => {\n    const styles = useStyles()\n    const { t } = useTranslation()\n\n    return (\n      <FormControl required fullWidth {...restProps}>\n        <FormLabel htmlFor=\"rating\">\n          {label}\n          <Tooltip content={<RatingHelp />} position=\"bottom\">\n            <span css={styles.tooltipIcon}>{tooltipIcon}</span>\n          </Tooltip>\n        </FormLabel>\n        <div css={styles.controls}>\n          <RatingInput\n            rating={rating}\n            id=\"rating\"\n            onClick={onChange}\n            iconSize={36}\n            css={styles.input}\n          />\n          {onAddClick && (\n            <Button onClick={onAddClick} size=\"small\" data-test=\"add\" css={styles.button}>\n              {t('addReview')}\n            </Button>\n          )}\n        </div>\n      </FormControl>\n    )\n  }\n)\n\nRatingFormControl.defaultProps = {\n  tooltipIcon: (\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\">\n      <g id=\"info\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n      </g>\n    </svg>\n  ),\n}\n\nRatingFormControl.propTypes = {\n  /**\n   * Label for the input\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Rating value\n   */\n  rating: PropTypes.number,\n  /**\n   * Callback on input change\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Icon for the help tooltip\n   */\n  tooltipIcon: PropTypes.node,\n  /**\n   * Callback on add review click\n   */\n  onAddClick: PropTypes.func,\n}\n\nexport default RatingFormControl\n","let loaded = false\n\nconst getBlackboxString = () => {\n  if (window.IGLOO && typeof window.IGLOO.getBlackbox === 'function') {\n    // Try to get the blockbox value from iovation\n    const res = window.IGLOO.getBlackbox()\n\n    // If result is done, we can return the blackbox value\n    if (res.finished) {\n      return res.blackbox\n    }\n  }\n}\n\n/**\n * Initialize the iovation loader into the document.\n * The loader must be initialized before `getFingerprint` can be used.\n */\nexport const initFingerprint = async () => {\n  if (loaded) {\n    return\n  }\n\n  /**\n   * Configure the iovation options via window.IGLOO property\n   */\n  window.IGLOO = window.IGLOO || {\n    enable_rip: true, // Enable Real IP protection\n    enable_flash: false, // Disable flash\n    install_flash: false, // Don't ask user to install flash\n    loader: {\n      version: 'general5', // Non-experimental 5.x updates\n      fp_static: false, // Don't load 1st party resources\n    },\n  }\n\n  /**\n   * Dynamically import iovation loader\n   */\n  await import('../vendor/iovation-loader')\n\n  /**\n   * Set loaded flag so this only runs once\n   */\n  loaded = true\n}\n\n/**\n * This function gets a fingerprint which is required by BazaarVoice to submit user reviews.\n * Because of the load API, we wrap in a Promise and try on an inverval to get the fingerprint\n * until it returns a value or reaches the maximum number of attempts.\n *\n * Documentation: https://developer.bazaarvoice.com/conversations-api/tutorials/submission/device-fingerprinting/iovation-web\n */\nexport const getFingerprint = async () => {\n  return new Promise((resolve, reject) => {\n    let attempts = 0\n\n    const intervalId = setInterval(() => {\n      const fingerprint = getBlackboxString()\n\n      // Resolve the promise when we have a fingerprint\n      if (fingerprint) {\n        clearInterval(intervalId)\n        resolve(fingerprint)\n      }\n\n      attempts = attempts + 1\n\n      // Bail if too many attempts\n      if (attempts > 10) {\n        clearInterval(intervalId)\n        reject(new Error('Device fingerprint could not be found.'))\n      }\n    }, 500)\n  })\n}\n","/* eslint-disable react/jsx-no-literals */\n\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextFieldLabel = memo(({ label, required, style }) => {\n  if (required) {\n    return (\n      <>\n        {label} <span css={style}>*</span>\n      </>\n    )\n  }\n\n  return label\n})\nTextFieldLabel.propTypes = {\n  label: PropTypes.string,\n  required: PropTypes.bool,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n}\n\nexport default TextFieldLabel\n","/* eslint-disable react/jsx-no-literals */\n\nimport React, { memo, Fragment, useEffect } from 'react'\nimport { Button, createStyles, TextField } from '@instacart/cocktail'\nimport PropTypes from 'prop-types'\nimport { useTranslation } from 'react-i18next'\nimport RatingFormControl from './RatingFormControl'\nimport { initFingerprint } from '../services/fingerprint'\nimport TextFieldLabel from './TextFieldLabel'\n\nconst useStyles = createStyles(\n  tokens => ({\n    root: {},\n    terms: {\n      padding: 0,\n      height: 'auto',\n      marginTop: tokens.size.spacing.xSmall,\n      fontSize: tokens.size.font.caption,\n    },\n    requiredContainer: {\n      fontSize: tokens.size.font.caption,\n      marginBottom: tokens.size.spacing.medium,\n    },\n    requiredAsterisk: {\n      color: tokens.color.ui.error,\n    },\n  }),\n  { displayName: 'AddReviewForm' }\n)\n\nconst AddReviewForm = memo(\n  ({\n    open,\n    loading,\n    onOpen,\n    onClose,\n    onSubmit,\n    onInputChange,\n    onRatingChange,\n    formData,\n    formDataIsValid,\n    onTermsClick,\n    requireTitleAndMessage,\n  }) => {\n    const { t } = useTranslation()\n    const styles = useStyles()\n\n    useEffect(() => {\n      // Load the fingerprint service when the review form is opened\n      if (open) {\n        initFingerprint()\n      }\n    }, [open])\n\n    return (\n      <form onSubmit={onSubmit} css={styles.root} data-test=\"form\">\n        <div css={styles.requiredContainer}>\n          <span css={styles.requiredAsterisk}>*</span> {t('required')}\n        </div>\n\n        <Fragment>\n          <RatingFormControl\n            label={t('enterStarRating')}\n            rating={formData.rating}\n            onChange={onRatingChange}\n            data-test=\"rating\"\n            onAddClick={open ? undefined : onOpen}\n          />\n          {open && (\n            <>\n              <TextField\n                label={\n                  <TextFieldLabel\n                    label={t('reviewTitle')}\n                    required={requireTitleAndMessage}\n                    style={styles.requiredAsterisk}\n                  />\n                }\n                value={formData.title}\n                id=\"title\"\n                onChange={onInputChange('title')}\n                fullWidth\n                maxLength={200}\n              />\n              <TextField\n                label={\n                  <TextFieldLabel\n                    label={t('reviewMessage')}\n                    required={requireTitleAndMessage}\n                    style={styles.requiredAsterisk}\n                  />\n                }\n                value={formData.message}\n                id=\"message\"\n                onChange={onInputChange('message')}\n                multiline\n                fullWidth\n                maxLength={2000}\n              />\n              <div>\n                <Button type=\"submit\" disabled={!formDataIsValid || loading} loading={loading}>\n                  {t('submitReview')}\n                </Button>\n                <Button onClick={onClose} variant=\"link\" data-test=\"cancel\">\n                  {t('cancel')}\n                </Button>\n              </div>\n              {onTermsClick && (\n                <div>\n                  <Button\n                    onClick={onTermsClick}\n                    variant=\"link\"\n                    css={styles.terms}\n                    data-test=\"terms\"\n                  >\n                    {t('termsAndConditions')}\n                  </Button>\n                </div>\n              )}\n            </>\n          )}\n        </Fragment>\n      </form>\n    )\n  }\n)\n\nAddReviewForm.defaultProps = {\n  open: false,\n  loading: false,\n  formData: {\n    title: '',\n    message: '',\n    rating: undefined,\n  },\n}\n\nAddReviewForm.propTypes = {\n  /**\n   * Display the full form\n   */\n  open: PropTypes.bool,\n  /**\n   * Callback on form close\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback on form open\n   */\n  onOpen: PropTypes.func,\n  /**\n   * Callback on form submit\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Callback on form field change\n   */\n  onInputChange: PropTypes.func.isRequired,\n  /**\n   * Callback on rating field change\n   */\n  onRatingChange: PropTypes.func.isRequired,\n  /**\n   * Form data\n   */\n  formData: PropTypes.shape({\n    /**\n     * Value for the \"title\" field\n     */\n    title: PropTypes.string,\n    /**\n     * Value for the \"message\" field\n     */\n    message: PropTypes.string,\n    /**\n     * Value for the \"rating\" field\n     */\n    rating: PropTypes.number,\n  }),\n  /**\n   * Determines if the data inputted in the form is valid or not.\n   * Used to disable or enable the submit button\n   */\n  formDataIsValid: PropTypes.bool,\n  /**\n   * Callback attached to terms of use button click\n   */\n  onTermsClick: PropTypes.func,\n  /**\n   * Indicates that the parent component is doing some work and that no further input should be\n   * inputted.\n   * If \"true\" submit button will be disabled\n   */\n  loading: PropTypes.bool,\n  /**\n   * Add visual indicators to the title and message fields showing that they are required before\n   * submitting the review.\n   */\n  requireTitleAndMessage: PropTypes.bool,\n}\n\nexport default AddReviewForm\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { Rating, useTokens } from '@instacart/cocktail'\n\nconst defaultLang = {\n  label: 'Your Rating',\n}\n\nconst CurrentRating = memo(({ rating, i18n }) => {\n  const tokens = useTokens()\n\n  const lang = { ...defaultLang, ...i18n }\n\n  const styles = {\n    label: {\n      fontSize: tokens.size.font.body,\n      color: tokens.color.text.primary,\n      marginBottom: tokens.size.spacing.xxxSmall,\n    },\n  }\n\n  return (\n    <div>\n      <div css={styles.label}>{lang.label}</div>\n      <Rating rating={rating} iconSize={36} />\n    </div>\n  )\n})\n\nCurrentRating.defaultProps = {\n  i18n: {},\n}\n\nCurrentRating.propTypes = {\n  /**\n   * Customize language variables\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  i18n: PropTypes.object,\n  /**\n   * Rating to display\n   */\n  rating: PropTypes.number.isRequired,\n}\n\nexport default CurrentRating\n","import React, { memo, useState, useCallback, useEffect } from 'react'\nimport { Alert, createStyles, LoadingDots, useAction } from '@instacart/cocktail'\nimport { useTranslation } from 'react-i18next'\nimport { config as configService } from '@instacart/enterprise-services'\nimport AddReviewForm from '../components/AddReviewForm'\nimport CurrentRating from '../components/CurrentRating'\nimport { commonPropTypes } from '../common/propTypes'\n\nconst defaultFormData = {\n  title: '',\n  message: '',\n  rating: undefined,\n}\n\nconst useStyles = createStyles(tokens => ({\n  success: {\n    marginTop: tokens.size.layout.xxSmall,\n  },\n  error: {\n    marginBottom: tokens.size.layout.xSmall,\n  },\n}))\n\nconst useUserReviewEffect = ({ api, entityId, entityExtId, user }) => {\n  const apiFn = useCallback(\n    () =>\n      api.getUser({\n        id: entityId,\n        sku: entityExtId,\n        user_ext_id: user.id,\n      }),\n    [api, entityExtId, entityId, user.id]\n  )\n\n  const [result, perform] = useAction(apiFn)\n\n  useEffect(() => {\n    perform()\n  }, [perform])\n\n  return result\n}\n\nconst AddReview = memo(props => {\n  const styles = useStyles()\n  const { t } = useTranslation()\n  const [open, setOpen] = useState(false)\n  const [validationError, setValidationError] = useState(null)\n  const [formData, setFormData] = useState(defaultFormData)\n  const [userHasSubmitted, setUserHasSubmitted] = useState(false)\n  // Must pass function to useAction for the class to have proper scope\n  const [{ error, data, loading }, perform, reset] = useAction(params => props.api.post(params))\n  const userReview = useUserReviewEffect(props)\n  const config = configService.selectors.getConfig()\n\n  const handleOpen = () => {\n    if (props.user.isTrial) {\n      props.onLoginRequired()\n    } else {\n      setOpen(true)\n    }\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    reset()\n    setUserHasSubmitted(false)\n    setValidationError(null)\n    setFormData(defaultFormData)\n  }\n\n  const isFormDataValid = useCallback(\n    values => {\n      if (config.userReviews.requireTitleAndMessage) {\n        const { rating, title, message } = values\n        return !!rating && title.trim().length > 0 && message.trim().length > 0\n      }\n\n      return !!values.rating\n    },\n    [config.userReviews.requireTitleAndMessage]\n  )\n\n  const handleChange = name => event => {\n    setFormData({ ...formData, [name]: event.target.value })\n  }\n\n  const handleRating = (_event, value) => {\n    if (props.user.isTrial) {\n      props.onLoginRequired()\n    } else {\n      setOpen(true)\n      setFormData({ ...formData, rating: value })\n    }\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    setUserHasSubmitted(true)\n\n    if (!isFormDataValid(formData)) {\n      return false\n    }\n\n    await perform({\n      id: props.entityId,\n      ext_id: props.entityExtId,\n      body: {\n        ...formData,\n        username: props.user.name,\n        user_ext_id: props.user.id,\n        location: props.user.location,\n      },\n    })\n  }\n\n  useEffect(() => {\n    if (!userHasSubmitted) return\n\n    if (isFormDataValid(formData)) {\n      setValidationError(null)\n    } else {\n      setValidationError(t('validationError'))\n    }\n  }, [formData, userHasSubmitted, t, isFormDataValid])\n\n  const currentRating = data ? formData.rating : userReview.data ? userReview.data.rating : null\n  const errorMsg = error ? error.message : validationError\n\n  return (\n    <div>\n      {errorMsg && (\n        <Alert variant=\"error\" css={styles.error} data-test=\"alert\">\n          {errorMsg}\n        </Alert>\n      )}\n      {userReview.loading ? (\n        <LoadingDots />\n      ) : currentRating ? (\n        <CurrentRating rating={currentRating} data-test=\"rating\" />\n      ) : (\n        <AddReviewForm\n          open={open}\n          formData={formData}\n          formDataIsValid={!validationError}\n          onOpen={handleOpen}\n          onClose={handleClose}\n          onSubmit={handleSubmit}\n          onInputChange={handleChange}\n          onRatingChange={handleRating}\n          onTermsClick={props.onTermsClick}\n          loading={loading}\n          requireTitleAndMessage={config.userReviews.requireTitleAndMessage}\n          data-test=\"form\"\n        />\n      )}\n      {!!data && (\n        <Alert variant=\"success\" css={styles.success} data-test=\"alert\">\n          {t('submitSuccess', { time: config.reviewPremoderationTime })}\n        </Alert>\n      )}\n    </div>\n  )\n})\n\nAddReview.defaultProps = {}\n\nAddReview.propTypes = {\n  ...commonPropTypes,\n}\n\nexport default AddReview\n","import React, { memo, useState, useEffect, useCallback, useRef } from 'react'\nimport { createStyles, LoadingDots, Alert, utils } from '@instacart/cocktail'\nimport { useConfig } from '@app/services/config/hooks'\nimport ReviewsList from '../components/ReviewsListWrapper'\nimport ReviewStats from '../components/ReviewStats'\nimport ReviewsHeading from '../components/ReviewsHeading'\nimport AddReview from './AddReview'\nimport { logSort, logSeeMore, logShowAll } from '../common/analytics'\nimport { commonPropTypes } from '../common/propTypes'\n\nconst useStyles = createStyles(tokens => ({\n  root: {\n    color: tokens.color.text.primary,\n    lineHeight: tokens.size.lineHeight.body,\n  },\n  row: {\n    marginBottom: tokens.size.layout.xxSmall,\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      display: 'flex',\n      marginLeft: -tokens.size.spacing.xxSmall,\n      marginRight: -tokens.size.spacing.xxSmall,\n    },\n  },\n  col: {\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      flex: '1 1 auto',\n      marginLeft: tokens.size.spacing.xxSmall,\n      marginRight: tokens.size.spacing.xxSmall,\n    },\n  },\n  stats: {\n    marginBottom: tokens.size.layout.xSmall,\n    [utils.mediaQuery.minWidth(tokens.breakpoint.medium)]: {\n      flex: '0 0 30%',\n      marginBottom: 0,\n    },\n  },\n  loading: {\n    padding: tokens.size.spacing.small,\n    height: tokens.size.input.height.regular,\n    boxSizing: 'content-box',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}))\n\nconst useReviews = ({ api, entityId, entityExtId, sortBy, perPage, offset }) => {\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const previousOffset = useRef(offset)\n\n  const fetchReviews = useCallback(async () => {\n    const options = {\n      id: entityId,\n      ext_id: entityExtId,\n      limit: perPage,\n      offset,\n      sortBy,\n    }\n\n    try {\n      setLoading(true)\n      setError(null)\n\n      const response = await api.get(options)\n\n      setData(prevData => {\n        let newData = response\n        // If data exists and the offset has changed, append response to existing data\n        if (prevData && offset > previousOffset.current) {\n          newData = {\n            ...prevData,\n            reviews: prevData.reviews.concat(response.reviews),\n          }\n        }\n        // Update the offset ref\n        previousOffset.current = offset\n\n        // Otherwise return the whole response\n        return newData\n      })\n    } catch (e) {\n      setError(e)\n      // Reset offset to the previous value on failed requests\n    } finally {\n      setLoading(false)\n    }\n  }, [api, entityExtId, entityId, offset, perPage, sortBy])\n\n  // Fetch and replace existing loaded reviews\n  useEffect(() => {\n    fetchReviews()\n  }, [fetchReviews])\n\n  return { loading, data, error }\n}\n\nconst Reviews = memo(props => {\n  const styles = useStyles()\n  const { userReviews } = useConfig()\n  const [sortBy, setSortBy] = useState(userReviews.defaultSort)\n  const [offset, setOffset] = useState(0)\n\n  const { error, data, loading } = useReviews({\n    ...props,\n    sortBy,\n    offset,\n  })\n\n  const onSortChange = event => {\n    // reset the offset on sort\n    setOffset(0)\n    setSortBy(event.value)\n    logSort(props, sortBy)\n  }\n\n  const onMoreClick = () => {\n    setOffset(offset + props.perPage)\n    logSeeMore(props, data, offset)\n  }\n\n  const handleShowAllClick = e => {\n    logShowAll(props, data)\n    props.onShowAllClick(e)\n  }\n  return (\n    <div css={styles.root}>\n      <div css={styles.row}>\n        <div css={styles.col}>\n          <ReviewsHeading rating={data && data.rating ? data.rating : undefined} />\n          <AddReview {...props} />\n        </div>\n        <div css={[styles.col, styles.stats]}>\n          {data && data.rating_distribution.length > 0 && (\n            <ReviewStats ratingDistribution={data.rating_distribution} />\n          )}\n        </div>\n      </div>\n      {data && (\n        <ReviewsList\n          reviews={data.reviews}\n          totalCount={data.total_reviews}\n          onShowAllClick={props.onShowAllClick ? handleShowAllClick : undefined}\n          sortBy={sortBy}\n          onSortChange={onSortChange}\n          perPage={props.perPage}\n          onMoreClick={props.showPaging ? onMoreClick : undefined}\n          loading={loading}\n        />\n      )}\n      {loading ? (\n        <LoadingDots css={styles.loading} />\n      ) : error ? (\n        <Alert variant=\"error\" data-test=\"alert\">\n          {error.message}\n        </Alert>\n      ) : null}\n    </div>\n  )\n})\n\nReviews.defaultProps = {\n  perPage: 5,\n  showPaging: true,\n}\n\nReviews.propTypes = {\n  ...commonPropTypes,\n}\n\nexport default Reviews\n","import { analytics } from '@instacart/enterprise-services'\n\nexport const logSort = (props, sortBy) => {\n  const segmentName = 'store.sort_user_reviews'\n\n  analytics.log({\n    event: 'event',\n    data: {\n      segmentData: {\n        segmentArgs: {\n          id: props.entityId,\n          ext_id: props.entityExtId,\n          review_type: props.reviewType,\n          ...sortBy,\n        },\n      },\n      segmentName,\n    },\n  })\n}\n\nexport const logShowAll = (props, data) => {\n  const segmentName = 'store.view_all_user_reviews'\n\n  analytics.log({\n    event: 'event',\n    data: {\n      segmentData: {\n        segmentArgs: {\n          id: props.entityId,\n          ext_id: props.entityExtId,\n          review_count: data.total_reviews,\n          review_type: props.reviewType,\n        },\n      },\n      segmentName,\n    },\n  })\n}\n\nexport const logSeeMore = (props, data, offset) => {\n  const segmentName = 'store.view_more_user_reviews'\n\n  analytics.log({\n    event: 'event',\n    data: {\n      segmentData: {\n        segmentArgs: {\n          id: props.entityId,\n          ext_id: props.entityExtId,\n          review_count: data.total_reviews,\n          per_page: props.perPage,\n          offset: offset + props.perPage,\n          review_type: props.reviewType,\n        },\n      },\n      segmentName,\n    },\n  })\n}\n\nexport const logReview = (params, reviewData, reviewType) => {\n  const segmentName = 'store.add_user_review'\n\n  analytics.log({\n    event: 'event',\n    data: {\n      segmentData: {\n        segmentArgs: {\n          id: params.id,\n          ext_id: params.ext_id,\n          review_type: reviewType,\n          ...reviewData,\n        },\n      },\n      segmentName,\n    },\n  })\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport en from './en-US.json'\n\n// TODO: Accept locales from client configs probably through a config and/or i18n service.\nconst init = () => {\n  i18n.use(initReactI18next).init({\n    lng: 'en',\n    fallbackLng: 'en',\n  })\n\n  i18n.addResourceBundle('en', 'translation', en)\n}\n\nexport default init\n","import { utils } from '@instacart/enterprise-services'\nimport { getFingerprint } from './fingerprint'\nimport { logReview } from '../common/analytics'\nimport { TYPE_PRODUCTS } from '../common/constants'\n\nclass ReviewsApi {\n  constructor(options) {\n    this.endpoint = options.endpoint\n    this.type = options.type\n  }\n\n  getEndpoint() {\n    return this.endpoint\n  }\n\n  async get(parameters) {\n    const paramsValid = parameters && parameters.id && parameters.ext_id\n\n    if (!paramsValid) {\n      throw new Error('id and/or ext_id not provided')\n    }\n\n    const querystring = {\n      sort: parameters.sortBy.sort,\n      limit: parameters.limit,\n      offset: parameters.offset,\n      order: parameters.sortBy.order,\n    }\n\n    if (this.type === TYPE_PRODUCTS) {\n      querystring.sku = parameters.ext_id\n    }\n\n    const options = {\n      querystring,\n    }\n\n    const data = await utils.request(`/${this.endpoint}/${parameters.id}/review`, options)\n\n    return data.user_reviews\n  }\n\n  async post(parameters) {\n    const paramsValid = parameters && parameters.id && parameters.ext_id && parameters.body\n\n    if (!paramsValid) {\n      throw new Error('id, ext_id and/or body not provided')\n    }\n\n    const fingerprint = await getFingerprint()\n\n    const querystring = {}\n\n    if (this.type === TYPE_PRODUCTS) {\n      querystring.sku = parameters.ext_id\n    }\n\n    const { body } = parameters\n\n    const paramObj = {\n      querystring,\n      method: 'POST',\n      body: {\n        ...body,\n        fingerprint,\n      },\n    }\n\n    const result = await utils.request(`/${this.endpoint}/${parameters.id}/review/create`, paramObj)\n\n    if (result.success) {\n      logReview(parameters, body, this.type)\n    }\n\n    return result\n  }\n\n  async getUser(options = {}) {\n    const isValid = options.id && options.sku && options.user_ext_id\n\n    if (!isValid) {\n      throw new Error('id, sku, and user_ext_id is required.')\n    }\n\n    const data = {\n      querystring: {\n        user_ext_id: options.user_ext_id,\n      },\n    }\n\n    if (this.type === TYPE_PRODUCTS) {\n      data.querystring.sku = options.sku\n    }\n\n    const result = await utils.request(`/${this.endpoint}/${options.id}/review/user`, data)\n\n    return result.user_review\n  }\n}\n\nexport default ReviewsApi\n","import React, { memo, Suspense } from 'react'\nimport Reviews from './Reviews'\nimport initI18n from '../lang/initI18n'\nimport { commonPropTypes } from '../common/propTypes'\nimport { ENDPOINT_PRODUCTS, ENDPOINT_RECIPES, TYPE_PRODUCTS } from '../common/constants'\nimport ReviewsApi from '../services/reviews'\n\ninitI18n()\n\nconst apiEndpoints = {\n  // endpoint is store_products, but is referenced as products everywhere else in this app\n  products: ENDPOINT_PRODUCTS,\n  recipes: ENDPOINT_RECIPES,\n}\n\nconst App = memo(props => {\n  const endpoint = apiEndpoints[props.reviewType]\n  const api = new ReviewsApi({ endpoint, type: props.reviewType })\n\n  const reviewProps = {\n    ...props,\n    api,\n  }\n\n  return (\n    <Suspense fallback=\"Loading...\">\n      <Reviews {...reviewProps} />\n    </Suspense>\n  )\n})\n\nApp.defaultProps = {\n  reviewType: TYPE_PRODUCTS,\n}\n\nApp.propTypes = {\n  ...commonPropTypes,\n}\n\nexport default App\n","// This code is extracted into a separate file to avoid circular dependency issues\n\nimport { createStyleVariables } from '@app/react/common/hooks/createStyles'\nimport { RatingStyleVariables } from './types'\n\nexport const styleVariables = createStyleVariables<RatingStyleVariables>('rating', {\n  filled: 'brandPrimaryRegular',\n})\n","import { createStyles } from '@app/react/common/hooks/createStyles'\nimport { styleVariables } from '@app/react/components/rating/styles'\nimport { lang as langService } from '@instacart/enterprise-services'\nimport { useLangAria } from '@app/services/config/hooks'\n\nconst FILLED_STYLES = ['unfilled', 'filled'] as const\nconst MAX_RATING = 5\n\nexport type RatingProps = {\n  /** Size of star icon */\n  iconSize?: number\n  /** The current value/number of filled stars  */\n  rating: number\n}\n\nconst useStyles = createStyles(\n  (theme, variables) => ({\n    filled: {\n      fill: theme.colors[variables.filled],\n    },\n    icon: {\n      height: '1em',\n      width: '1em',\n    },\n    icons: {\n      ':nth-of-type(2)': {\n        overflow: 'hidden',\n      },\n      left: 0,\n      position: 'absolute',\n    },\n    root: {\n      height: '1em',\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: `${MAX_RATING}em`,\n    },\n    unfilled: {\n      fill: theme.colors.systemGrayscale30,\n    },\n  }),\n  styleVariables\n)\n\nconst svgAtributes = {\n  focusable: 'false',\n  pointerEvents: 'none',\n  preserveAspectRatio: 'xMidYMid meet',\n  viewBox: '0 0 24 24',\n} as const\n\nconst computeFillWidth = (value: number, count: number) =>\n  value ? `${(value / count) * 100}%` : '0%'\n\nconst Rating = ({ rating, iconSize = 24 }: RatingProps) => {\n  const styles = useStyles()\n  const langAria = useLangAria()\n  const roundedRating = +rating.toFixed(2)\n  let currentRating = rating\n\n  // Don't allow ratings greater than the max or less than 0\n  if (rating > MAX_RATING) {\n    currentRating = MAX_RATING\n  } else if (rating < 0) {\n    currentRating = 0\n  }\n\n  const filledWidth = {\n    width: `${computeFillWidth(currentRating, MAX_RATING)}`,\n  }\n  const rootStyles = {\n    ...styles.root,\n    fontSize: iconSize,\n  }\n\n  return (\n    <div\n      css={rootStyles}\n      aria-label={langService.interpolate(langAria.rating, {\n        maxRating: MAX_RATING,\n        rating: roundedRating,\n      })}\n    >\n      {FILLED_STYLES.map(filled => (\n        <div css={[styles.icons, filled === 'filled' && filledWidth]} key={filled}>\n          {[...Array(MAX_RATING).keys()].map(i => (\n            <svg key={i} {...svgAtributes} css={[styles.icon, styles[filled]]} aria-hidden=\"true\">\n              <g>\n                <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n              </g>\n            </svg>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Rating\n"],"sourceRoot":""}