{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/fulfillmentNotAvailableModal/FulfillmentNotAvailableModal.tsx"],"names":["useStyles","createStyles","theme","buttonStyle","margin","spacing","s4","width","imageContainer","position","modalContent","alignItems","display","flexDirection","justifyContent","paddingTop","s40","modalImage","height","retailerLogo","bottom","left","padding","root","background","colors","systemGrayscale00","FulfillmentNotAvailableModal","onClose","onContinue","styles","lang","useLang","langAria","useLangAria","css","src","alt","contentImageAlt","clientName","component","variant","align","fulfillmentNotAvailableDialog","modalText","onClick","switchContextButton","goBack"],"mappings":"sIAAA,mLAWA,MAAMA,EAAYC,YAAaC,IAAS,CACtCC,YAAa,CACXC,OAAQC,IAAQC,GAChBC,MAAO,SAETC,eAAgB,CACdC,SAAU,YAEZC,aAAc,CACZC,WAAY,SACZC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBV,OAAQ,OACRW,WAAYV,IAAQW,IACpBT,MAAO,OAETU,WAAY,CACVC,OAAQ,QACRX,MAAO,QAETY,aAAc,CACZC,OAAQ,EACRC,KAAM,EACNC,QAAS,OACTb,SAAU,WACVF,MAAO,SAETgB,KAAM,CACJC,WAAYtB,EAAMuB,OAAOC,kBAEzBR,OAAS,QACTd,OAAQ,aACRG,MAAQ,YAsCGoB,UAlCsB,EAAGC,UAASC,iBAC/C,MAAMC,EAAS9B,IACT+B,EAAOC,cACPC,EAAWC,cAEjB,OACE,mBAAKC,IAAKL,EAAOP,KAAjB,UACE,mBAAKY,IAAKL,EAAOtB,eAAjB,UACE,YAAC,IAAD,CACE2B,IAAKL,EAAOb,WACZmB,IAAK,8BACLC,IAAKJ,EAASK,kBAEhB,YAAC,IAAD,CACEH,IAAKL,EAAOX,aACZiB,IAAK,yBACLC,IAAKN,EAAKQ,gBAGd,mBAAKJ,IAAKL,EAAOpB,aAAjB,UACE,YAAC,KAAD,CAAM8B,UAAU,KAAKC,QAAQ,QAAQC,MAAM,SAA3C,SACGX,EAAKY,8BAA8BC,YAEtC,YAAC,IAAD,CAAQT,IAAKL,EAAO3B,YAAa0C,QAAShB,EAA1C,SACGE,EAAKY,8BAA8BG,sBAEtC,YAAC,IAAD,CAAQX,IAAKL,EAAO3B,YAAasC,QAAQ,OAAOI,QAASjB,EAAzD,SACGG,EAAKY,8BAA8BI","file":"71.js","sourcesContent":["import { useLang, useLangAria } from '@app/services/config/hooks'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { spacing } from '@instacart/ids-core'\nimport { Button, Text } from '@instacart/cocktail'\nimport AssetImage from '../../common/AssetImage'\n\nexport type ModalProps = {\n  onContinue: () => void\n  onClose: () => void\n}\n\nconst useStyles = createStyles(theme => ({\n  buttonStyle: {\n    margin: spacing.s4,\n    width: '240px',\n  },\n  imageContainer: {\n    position: 'relative',\n  },\n  modalContent: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    margin: 'auto',\n    paddingTop: spacing.s40,\n    width: '70%',\n  },\n  modalImage: {\n    height: '210px',\n    width: '100%',\n  },\n  retailerLogo: {\n    bottom: 0,\n    left: 0,\n    padding: '20px',\n    position: 'absolute',\n    width: '120px',\n  },\n  root: {\n    background: theme.colors.systemGrayscale00,\n    // mimicing platform's shopping modal margins\n    height: `495px`,\n    margin: '4.5vh auto',\n    width: `740px`,\n  },\n}))\n\nconst FulfillmentNotAvailableModal = ({ onClose, onContinue }: ModalProps) => {\n  const styles = useStyles()\n  const lang = useLang()\n  const langAria = useLangAria()\n\n  return (\n    <div css={styles.root}>\n      <div css={styles.imageContainer}>\n        <AssetImage\n          css={styles.modalImage}\n          src={'images/shopping-context.png'}\n          alt={langAria.contentImageAlt}\n        />\n        <AssetImage\n          css={styles.retailerLogo}\n          src={'images/header-logo.svg'}\n          alt={lang.clientName}\n        />\n      </div>\n      <div css={styles.modalContent}>\n        <Text component=\"h2\" variant=\"large\" align=\"center\">\n          {lang.fulfillmentNotAvailableDialog.modalText}\n        </Text>\n        <Button css={styles.buttonStyle} onClick={onContinue}>\n          {lang.fulfillmentNotAvailableDialog.switchContextButton}\n        </Button>\n        <Button css={styles.buttonStyle} variant=\"link\" onClick={onClose}>\n          {lang.fulfillmentNotAvailableDialog.goBack}\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FulfillmentNotAvailableModal\n"],"sourceRoot":""}