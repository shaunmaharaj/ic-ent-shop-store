{"version":3,"sources":["webpack://UnataWidgets/./packages/enterprise-ui-add-button/components/ActionButton.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/components/TraditionalListWrapper.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/components/AddToButton.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/components/ConfigurableProducts.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/AddToCartButton.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/AddToCartButtonWrapper.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/utils.js","webpack://UnataWidgets/./packages/enterprise-ui-add-button/index.js"],"names":["useStyles","createStyles","tokens","root","textTransform","borderRadius","border","radius","regular","position","button","noLeftBorderRadius","borderTopLeftRadius","borderBottomLeftRadius","noRightBorderRadius","borderTopRightRadius","borderBottomRightRadius","displayName","ActionButton","forwardRef","props","ref","styles","propStyles","restProps","removeRightBorderRadius","includes","removeLeftBorderRadius","css","defaultProps","icon","propTypes","PropTypes","string","onClick","func","object","memo","listContainer","cursor","height","width","selectButton","left","right","top","opacity","isDisabled","TraditionalListWrapper","children","disabled","placeholder","isList","items","onChange","value","selectButtonProps","tabIndex","list","map","item","itemValue","itemLabel","label","React","Children","toArray","child","cloneElement","array","oneOfType","node","element","number","bool","withTokens","AddToButton","emptyCartWidth","setEmptyCartWidth","useState","filledCartWidth","setFilledCartWidth","addIcon","onAdd","showAdd","removeIcon","onRemove","showRemove","onDropDownSelect","ariaLiveText","addButtonProps","loading","size","type","variant","fullWidth","active","color","tooltip","isOutlineVariant","isActive","backgroundColor","brand","dark","neutral","white","utils","darken","undefined","screenReaderText","clip","margin","padding","overflow","buttonGroup","addButton","removeButton","borderRight","zIndex","activeOutlineVariant","labelButton","spacing","small","labelButtonContent","flex","display","justifyContent","alignItems","iconBase","lineHeight","fontSize","iconBefore","marginRight","xxSmall","iconAfter","marginLeft","configurableProducts","pointerEvents","isDisabledRemove","loadingDots","content","useEffect","buttonGroupProps","removeProps","iconSize","labelPadding","pixelize","addProps","loadingButtonProps","traditionalListProps","dotColor","dangerouslySetInnerHTML","__html","clientWidth","style","aria-hidden","className","aria-live","oneOf","shape","baseItemLabelStyle","baseItemStyles","popover","dropdownItemBase","flexDirection","dropdownItemLabel","none","medium","triggerFullWidth","ConfigurableProducts","itemStyle","multi","buttonProps","key","component","autoAdjust","trigger","AddToCartButton","configurableProductsProps","configurableProductsButtonProps","arrayOf","AddToCartButtonWrapper","tokenOverrides","config","selectors","getConfig","themeOverrides","addToCartButton","buildWeightOptionsList","display_name","increment","max","min","opts","includeZeroOption","push","i"],"mappings":"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","file":"92.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { forwardRef, memo } from 'react'\nimport { Button, createStyles } from '@instacart/cocktail'\n\nconst useStyles = createStyles(\n  tokens => ({\n    root: {\n      textTransform: 'uppercase',\n      borderRadius: tokens.border.radius.regular,\n      position: 'absolute',\n    },\n    button: {},\n    noLeftBorderRadius: { borderTopLeftRadius: 0, borderBottomLeftRadius: 0 },\n    noRightBorderRadius: { borderTopRightRadius: 0, borderBottomRightRadius: 0 },\n  }),\n  { displayName: 'ActionButton' }\n)\n\nconst ActionButton = forwardRef((props, ref) => {\n  const { position, styles: propStyles, ...restProps } = props\n  const styles = useStyles(props)\n\n  const removeRightBorderRadius = ['start', 'middle'].includes(position)\n  const removeLeftBorderRadius = ['end', 'middle'].includes(position)\n\n  const css = [\n    styles.root,\n    removeRightBorderRadius && styles.noRightBorderRadius,\n    removeLeftBorderRadius && styles.noLeftBorderRadius,\n  ]\n\n  return <Button ref={ref} css={css} {...restProps} />\n})\n\nActionButton.defaultProps = {\n  icon: 'icon-plus',\n  position: 'middle',\n}\n\nActionButton.propTypes = {\n  /* Position of button in buttonGroup */\n  position: PropTypes.string,\n  /* Icon to show for button */\n  icon: PropTypes.string,\n  /* Click event for add button */\n  onClick: PropTypes.func,\n  /* Styles passed through */\n  // eslint-disable-next-line react/forbid-prop-types\n  styles: PropTypes.object,\n}\n\nexport default memo(ActionButton)\n","import PropTypes from 'prop-types'\nimport React, { cloneElement } from 'react'\nimport { createStyles, withTokens } from '@instacart/cocktail'\n\nconst useStyles = createStyles(\n  () => ({\n    listContainer: {\n      cursor: 'pointer',\n      height: '100%',\n      width: '100%',\n    },\n    selectButton: {\n      cursor: 'pointer',\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      right: 0,\n      top: 0,\n      opacity: 0,\n    },\n    isDisabled: {\n      cursor: 'not-allowed',\n    },\n  }),\n  {\n    displayName: 'TraditionalListWrapper',\n  }\n)\n\nconst TraditionalListWrapper = props => {\n  const { children, disabled, placeholder, isList, items = [], onChange, value } = props\n  const styles = useStyles(props)\n\n  const selectButtonProps = {\n    css: [styles.selectButton, disabled && styles.isDisabled],\n    onChange,\n    value,\n    disabled,\n    tabIndex: 0,\n    'aria-label': placeholder,\n  }\n\n  const list = (\n    <select {...selectButtonProps}>\n      <option disabled>{placeholder}</option>\n      {items.map(item => {\n        const itemValue = item.value || item\n        const itemLabel = item.label || itemValue\n\n        return (\n          <option key={itemValue} value={itemValue} label={itemLabel}>\n            {itemLabel}\n          </option>\n        )\n      })}\n    </select>\n  )\n\n  return isList ? (\n    <div css={styles.listContainer}>\n      {React.Children.toArray(children).map(child => {\n        // This is a bit of a hack to for accessibility\n        // Removing the button from the focus order since it is duplicated by the select element\n        // TODO - rewrite this component with a custom select menu\n        return cloneElement(child, { tabIndex: -1 })\n      })}\n      {list}\n    </div>\n  ) : (\n    children\n  )\n}\n\nTraditionalListWrapper.defaultProps = {\n  placeholder: '',\n  items: [],\n}\n\nTraditionalListWrapper.propTypes = {\n  /* Array of values for list variant */\n  // eslint-disable-next-line react/forbid-prop-types\n  items: PropTypes.array,\n  /* On Change event for list variant */\n  onChange: PropTypes.func,\n  /* Children of the traditional list wrapper */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.element, PropTypes.string]),\n  /* Text to display at the top of the select menu */\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /* Flag to display if it is a list */\n  isList: PropTypes.bool,\n  /* Flag to disable list */\n  disabled: PropTypes.bool,\n  /* Selected value in the select */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n}\n\nexport default withTokens(TraditionalListWrapper)\n","import PropTypes from 'prop-types'\nimport React, { memo, useState, useEffect } from 'react'\nimport { Button, createStyles, Icon, LoadingDots, utils, Tooltip } from '@instacart/cocktail'\n\nimport ActionButton from './ActionButton'\nimport TraditionalListWrapper from './TraditionalListWrapper'\n\nconst useStyles = props => {\n  const isOutlineVariant = props.variant === 'outline'\n  const isActive = props.active\n\n  return createStyles(\n    tokens => ({\n      active: {\n        backgroundColor: isOutlineVariant ? tokens.color.brand[props.color].dark : null,\n        color: isOutlineVariant ? tokens.color.neutral.white : null,\n        '&:active': {\n          backgroundColor: isOutlineVariant ? tokens.color.brand[props.color].dark : null,\n          color: isOutlineVariant ? tokens.color.neutral.white : null,\n        },\n        '&:hover, &:focus': {\n          backgroundColor: utils.color.darken(tokens.color.brand[props.color].dark, 20),\n          color: isOutlineVariant ? tokens.color.neutral.white : undefined,\n        },\n      },\n      screenReaderText: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        width: 1,\n        margin: -1,\n        padding: 0,\n        overflow: 'hidden',\n        position: 'absolute !important',\n      },\n      buttonGroup: {\n        position: 'relative',\n      },\n      button: {\n        border: !isOutlineVariant ? 0 : null,\n      },\n      addButton: {\n        right: 0,\n      },\n      removeButton: {\n        left: 0,\n        top: 0,\n        borderRight: `1px solid ${\n          isOutlineVariant && !isActive\n            ? tokens.color.brand[props.color].dark\n            : 'rgba(255, 255, 255, 0.35)'\n        }`,\n        zIndex: 1,\n      },\n      activeOutlineVariant: {\n        border: 0,\n      },\n      fullWidth: {\n        width: '100%',\n        padding: 0,\n      },\n      labelButton: {\n        textTransform: 'uppercase',\n        cursor: 'pointer',\n        padding: tokens.size.spacing.small,\n        borderRadius: tokens.border.radius.regular,\n      },\n      labelButtonContent: {\n        flex: '1 1 100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      iconBase: {\n        display: 'inline-flex',\n        lineHeight: 1,\n        fontSize: 12,\n      },\n      iconBefore: {\n        marginRight: tokens.size.spacing.xxSmall,\n      },\n      iconAfter: {\n        marginLeft: tokens.size.spacing.xxSmall,\n      },\n      configurableProducts: {\n        pointerEvents: 'inherit',\n      },\n      isDisabled: {\n        cursor: 'not-allowed',\n      },\n      isDisabledRemove: {\n        backgroundColor: 'transparent',\n        opacity: 1,\n        '&:hover, &:focus': {\n          backgroundColor: 'transparent',\n        },\n      },\n      loadingDots: {\n        color: tokens.color.neutral.white,\n      },\n    }),\n    { displayName: 'AddToButton' }\n  )(props)\n}\n\nconst AddToButton = props => {\n  const [emptyCartWidth, setEmptyCartWidth] = useState(0)\n  const [filledCartWidth, setFilledCartWidth] = useState(0)\n  const {\n    // Add Button Props\n    addIcon,\n    onAdd,\n    showAdd,\n    // Remove Button Props\n    removeIcon,\n    onRemove,\n    showRemove,\n    // List Props\n    items,\n    onDropDownSelect,\n    // Misc\n    ariaLiveText,\n    addButtonProps,\n    loading,\n    size,\n    type,\n    variant,\n    fullWidth,\n    children,\n    placeholder,\n    active,\n    color,\n    disabled,\n    tooltip,\n  } = props\n\n  const styles = useStyles(props)\n  const content = children || placeholder\n\n  // Used to reset padding to 0 when the buttons is not showing\n  useEffect(() => {\n    if (!showRemove) setEmptyCartWidth(0)\n  }, [showRemove])\n\n  useEffect(() => {\n    if (!showAdd) setFilledCartWidth(0)\n  }, [showAdd])\n\n  const buttonGroupProps = {\n    css: [styles.buttonGroup, fullWidth && styles.fullWidth],\n  }\n\n  const removeProps = {\n    variant,\n    size,\n    color,\n    disabled,\n    icon: removeIcon,\n    onClick: onRemove,\n    iconSize: 'small',\n    css: [\n      // TODO - update this in cocktail\n      active && variant === 'outline' && styles.activeOutlineVariant,\n      active && styles.active,\n      disabled && styles.isDisabled,\n      // Workaround due to positioning remove button on top of the add button\n      // TODO - remove absolute positioning\n      disabled && styles.isDisabledRemove,\n      // Make sure the border right is always visible\n      styles.removeButton,\n    ],\n    styles: { root: styles.button },\n  }\n\n  const labelPadding = {\n    padding: utils.pixelize` 0 ${filledCartWidth || styles.labelButton.padding} 0 ${\n      showRemove\n        ? emptyCartWidth + styles.labelButton.padding\n        : filledCartWidth || styles.labelButton.padding\n    }`,\n  }\n\n  const addProps = {\n    ...addButtonProps,\n    variant,\n    size,\n    color,\n    iconSize: size,\n    fullWidth: true,\n    disabled,\n    onClick: onAdd,\n    css: [\n      styles.labelButton,\n      styles.button,\n      // TODO - update this in cocktail\n      active && variant === 'outline' && styles.activeOutlineVariant,\n      active && styles.active,\n      disabled && styles.isDisabled,\n      // Should be last, includes offset for remove button\n      labelPadding,\n    ],\n  }\n\n  const loadingButtonProps = {\n    size,\n    color,\n    fullWidth: true,\n    disabled: true,\n    css: [styles.button, styles.isDisabled],\n  }\n\n  const traditionalListProps = {\n    items,\n    disabled,\n    value: content,\n    placeholder: content,\n    isList: type === 'list',\n    onChange: onDropDownSelect,\n  }\n\n  return (\n    <div {...buttonGroupProps}>\n      {loading ? (\n        <Button {...loadingButtonProps}>\n          <LoadingDots dotColor={styles.loadingDots.color} />\n        </Button>\n      ) : (\n        <Tooltip\n          disabled={!tooltip}\n          // eslint-disable-next-line react/no-danger\n          content={<span dangerouslySetInnerHTML={{ __html: tooltip }} />}\n        >\n          {showRemove && (\n            <ActionButton\n              ref={ref => ref && setEmptyCartWidth(ref.clientWidth)}\n              position=\"start\"\n              {...removeProps}\n            />\n          )}\n          <TraditionalListWrapper {...traditionalListProps}>\n            <Button {...addProps} iconBefore={null} iconAfter={null}>\n              <span css={[styles.labelButtonContent, fullWidth && styles.fullWidth]}>\n                {addProps.iconBefore && (\n                  <Icon\n                    icon={addProps.iconBefore}\n                    style={{ ...styles.iconBase, ...styles.iconBefore }}\n                  />\n                )}\n                {content}\n                {addProps.iconAfter && (\n                  <Icon\n                    icon={addProps.iconAfter}\n                    style={{ ...styles.iconBase, ...styles.iconAfter }}\n                  />\n                )}\n              </span>\n              {showAdd && (\n                <span\n                  css={[styles.iconBase, styles.iconAfter]}\n                  ref={ref => ref && setFilledCartWidth(ref.clientWidth)}\n                >\n                  <i aria-hidden=\"true\" css={[styles.iconBase]} className={addIcon} />\n                </span>\n              )}\n            </Button>\n            <span css={styles.screenReaderText} aria-live=\"polite\">\n              {ariaLiveText}\n            </span>\n          </TraditionalListWrapper>\n        </Tooltip>\n      )}\n    </div>\n  )\n}\n\nAddToButton.defaultProps = {\n  placeholder: 'Add to Cart',\n  fullWidth: false,\n  loading: false,\n  variant: 'filled',\n  size: 'regular',\n  showAdd: true,\n  showRemove: false,\n  addIcon: 'icon-plus',\n  removeIcon: 'icon-minus',\n  type: 'button',\n  items: [],\n  color: 'primary',\n}\n\nAddToButton.propTypes = {\n  /* Children that displays in the Add To Button */\n  children: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /* Text that appears when children is null */\n  placeholder: PropTypes.string,\n  /* Flag to indicate when the Add To Button is active */\n  active: PropTypes.bool,\n  /** Color and importance of the button */\n  color: PropTypes.oneOf(['primary', 'secondary', 'highlight']),\n  /* Flag for loading state */\n  loading: PropTypes.bool,\n  /* Flag to disable component */\n  disabled: PropTypes.bool,\n  /* Icon to show for add button */\n  addIcon: PropTypes.string,\n  /* Click event for remove button */\n  onAdd: PropTypes.func,\n  /* Hide/Show Add Button */\n  showAdd: PropTypes.bool,\n  /* Text to show in aria-live area */\n  ariaLiveText: PropTypes.string,\n  /* Icon to show for remove button */\n  removeIcon: PropTypes.string,\n  /* Click event for add button */\n  onRemove: PropTypes.func,\n  /* Hide/Show Remove Button */\n  showRemove: PropTypes.bool,\n  /* Array of values for list variant */\n  // eslint-disable-next-line react/forbid-prop-types\n  items: PropTypes.array,\n  /* On Change event for list variant */\n  onDropDownSelect: PropTypes.func,\n  /* Set styling to be 100% */\n  fullWidth: PropTypes.bool,\n  /* String for which variant to show */\n  variant: PropTypes.oneOf(['filled', 'outline']),\n  /* Changes the size of the add to button */\n  size: PropTypes.oneOf(['small', 'regular', 'large']),\n  /* Type of add to cart button to display */\n  type: PropTypes.oneOf(['button', 'configurable', 'list']),\n  /* Object of Props for Add Button */\n  addButtonProps: PropTypes.shape({\n    /* Icon to show before center counter */\n    iconBefore: PropTypes.string,\n    /* Icon to show after center counter */\n    iconAfter: PropTypes.string,\n  }),\n  tooltip: PropTypes.string,\n}\n\nexport default memo(AddToButton)\n","import PropTypes from 'prop-types'\nimport React, { memo } from 'react'\nimport { createStyles, Text, Popover, OverlayTrigger, utils } from '@instacart/cocktail'\n\nimport AddToButton from './AddToButton'\n\nconst useStyles = createStyles(\n  tokens => ({\n    baseItemLabelStyle: {\n      borderRadius: 0,\n    },\n    baseItemStyles: {},\n    popover: {\n      display: 'block',\n      padding: 0,\n    },\n    dropdownItemBase: {\n      display: 'table-row',\n      flexDirection: 'row',\n    },\n    dropdownItemLabel: {\n      padding: utils.pixelize`${tokens.size.spacing.none} ${tokens.size.spacing.medium}`,\n      display: 'table-cell',\n      alignItems: 'center',\n    },\n    triggerFullWidth: {\n      width: '100%',\n    },\n  }),\n  { displayName: 'ConfigurableProducts' }\n)\n\nconst ConfigurableProducts = props => {\n  const { color, fullWidth, items, itemStyle, size, children } = props\n  const styles = useStyles(props)\n\n  const baseItemStyles = {\n    labelButton: styles.baseItemLabelStyle,\n    ...itemStyle,\n  }\n\n  const multi = (\n    <Popover css={styles.popover}>\n      {items.map(item => (\n        <div key={item.key} css={styles.dropdownItemBase}>\n          <Text css={styles.dropdownItemLabel}>{item.label}</Text>\n          <AddToButton\n            {...item.buttonProps}\n            color={color}\n            showAdd\n            showRemove\n            fullWidth\n            size={size}\n            styles={baseItemStyles}\n            key={item.key}\n          />\n        </div>\n      ))}\n    </Popover>\n  )\n\n  return (\n    <OverlayTrigger component={multi} position=\"bottom\" autoAdjust trigger=\"click\">\n      {/*\n       * TODO: More work needed to Configurable Products to follow correct business logic\n       * Note - this must be wrapped in a div due to how the overlay trigger handles refs\n       */}\n      <div css={[fullWidth && styles.triggerFullWidth]}>{children}</div>\n    </OverlayTrigger>\n  )\n}\n\nConfigurableProducts.defaultProps = {\n  items: [],\n}\n\nConfigurableProducts.propTypes = {\n  /** Color and importance of the button */\n  color: PropTypes.oneOf(['primary', 'secondary', 'highlight']),\n  /* Set styling to be 100% */\n  fullWidth: PropTypes.bool,\n  /* Array of values for list variant */\n  // eslint-disable-next-line react/forbid-prop-types\n  items: PropTypes.array,\n  /* Changes the size of the add to button */\n  size: PropTypes.oneOf(['small', 'regular', 'large']),\n  /* Custom style object for the item elements */\n  // eslint-disable-next-line react/forbid-prop-types\n  itemStyle: PropTypes.object,\n  /* Children of the configurable product */\n  children: PropTypes.oneOfType([PropTypes.node]),\n}\n\nexport default memo(ConfigurableProducts)\n","import PropTypes from 'prop-types'\nimport React, { memo } from 'react'\n\nimport AddToButton from './components/AddToButton'\nimport ConfigurableProducts from './components/ConfigurableProducts'\n\nconst AddToCartButton = props => {\n  const { color, fullWidth, size, type, disabled, items, itemStyle } = props\n\n  if (!disabled && type === 'configurable') {\n    const configurableProductsProps = {\n      color,\n      fullWidth,\n      items,\n      itemStyle,\n      size,\n    }\n\n    const configurableProductsButtonProps = {\n      ...props,\n      addIcon: 'icon-chevron-down',\n      disabled,\n      fullWidth,\n      showRemove: false,\n      size,\n    }\n\n    return (\n      <ConfigurableProducts {...configurableProductsProps}>\n        <AddToButton {...configurableProductsButtonProps} />\n      </ConfigurableProducts>\n    )\n  }\n\n  return <AddToButton {...props} />\n}\n\nAddToCartButton.defaultProps = {\n  color: 'primary',\n  items: [],\n  type: 'button',\n  variant: 'filled',\n}\n\nexport const propTypes = {\n  /** Color and importance of the button */\n  color: PropTypes.oneOf(['primary', 'secondary', 'highlight']),\n  /* Array of values for list variant */\n  items: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.shape({\n        label: PropTypes.string,\n        key: PropTypes.string,\n        buttonProps: PropTypes.shape({}),\n      }),\n    ])\n  ),\n  /* Custom style object for the item elements */\n  // eslint-disable-next-line react/forbid-prop-types\n  itemStyle: PropTypes.object,\n  /* Changes the size of the add to button */\n  size: PropTypes.oneOf(['small', 'regular', 'large']),\n  /* Custom style object for the containing element */\n  // eslint-disable-next-line react/forbid-prop-types\n  styles: PropTypes.object,\n  /* String for which variant to show */\n  variant: PropTypes.oneOf(['filled', 'outline']),\n  /* Type of add to cart button to display */\n  type: PropTypes.oneOf(['button', 'list', 'configurable']),\n  /* Flag to disable component */\n  disabled: PropTypes.bool,\n  /* Set styling to be 100% */\n  fullWidth: PropTypes.bool,\n}\n\nAddToCartButton.propTypes = propTypes\n\nexport default memo(AddToCartButton)\n","import React, { memo } from 'react'\nimport { TokensProvider } from '@instacart/cocktail'\nimport { config } from '@instacart/enterprise-services'\nimport AddToCartButton from './AddToCartButton'\n\nconst AddToCartButtonWrapper = props => {\n  const tokenOverrides = config.selectors.getConfig().themeOverrides?.addToCartButton\n  if (tokenOverrides) {\n    return (\n      <TokensProvider tokens={tokenOverrides}>\n        <AddToCartButton {...props} />\n      </TokensProvider>\n    )\n  }\n  return <AddToCartButton {...props} />\n}\n\nexport default memo(AddToCartButtonWrapper)\n","/**\n * Build Weight List Options - Func to build the list used in add to cart from the ordering params\n * e.g. buildWeightListOptionsList({ display_name: 'lb.', increment: 0.25, max: 5.0, min: 0.25 }, { includeZeroOption: false })\n *\n * @param {object} orderingParams\n * @param {object} opts\n * @param {boolean} opts.includeZeroOption\n */\nexport const buildWeightOptionsList = (\n  { display_name = '', increment = 0, max = 0, min = 0 },\n  opts = { includeZeroOption: true }\n) => {\n  const list = []\n\n  if (opts.includeZeroOption && min === 0) {\n    list.push([\n      {\n        value: 0,\n        label: `0 ${display_name}`,\n      },\n    ])\n  }\n\n  for (let i = min; max >= i; i += increment) {\n    list.push({\n      value: i,\n      label: `${i} ${display_name}`,\n    })\n  }\n  return list\n}\n","import AddToCartButton from './AddToCartButtonWrapper'\nimport { propTypes } from './AddToCartButton'\nimport * as utils from './utils'\n\nexport { propTypes, utils }\n\nexport default AddToCartButton\n"],"sourceRoot":""}