{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/iwsRegulationAlertModal/IwsRegulationAlertModal.tsx"],"names":["useStyles","createStyles","theme","bulletedContent","backgroundColor","colors","brandPrimaryRegular","borderRadius","content","display","height","left","position","top","width","fontSize","typography","bodyMedium2","marginBottom","spacing","s4","heading","icon","alignSelf","color","marginRight","s12","modal","alignItems","radius","r4","flexDirection","margin","maxHeight","overflow","padding","s16","responsive","only","bottom","modalButtons","minHeight","modalContent","s24","subtitle","paddingBottom","s8","IwsRegulationAlertModal","onCancel","onContinue","storeProduct","isMobile","useIsMobile","styles","lang","useLang","user","useAuth","multipleBanners","useConfig","states","locations","currentStateShortCode","store","address","province","currentState","find","state","value","name","shoppingContext","context","intent","iwsBanner","getProductFulfillmentRetailer","store_banner","ext_id","currentModalContent","iwsRegulationAlertModal","titleText","interpolate","title","subtitleText","independentStore","modalContentFormatted","stateContent","map","each","i","css","className","aria-hidden","component","bold","variant","fullWidth","onClick","FulfillmentType","InStore","continueButtonLabelList","continueButtonLabelCart","cancel"],"mappings":"sIAAA,+TAmBA,MAAMA,EAAYC,YAAaC,IAAS,CACtCC,gBAAiB,CACf,WAAY,CACVC,gBAAiBF,EAAMG,OAAOC,oBAC9BC,aAAc,MACdC,QAAS,MACTC,QAAS,QACTC,OAAQ,EACRC,MAAO,GACPC,SAAU,WACVC,IAAK,EACLC,MAAO,GAETC,SAAUb,EAAMc,WAAWC,YAAYF,SACvCG,aAAcC,IAAQC,GACtBR,SAAU,YAEZS,QAAS,CACPZ,QAAS,QAEXa,KAAM,CACJC,UAAW,SACXC,MAAOtB,EAAMG,OAAOC,oBACpBmB,YAAaN,IAAQO,KAEvBC,MAAO,CACLC,WAAY,SACZxB,gBAAiB,UACjBG,aAAcL,EAAM2B,OAAOC,GAC3BrB,QAAS,OACTsB,cAAe,SACfC,OAAQ,YACRC,UAAW,oBACXC,SAAU,OACVC,QAAShB,IAAQiB,IACjBtB,MAAO,IACP,CAACuB,IAAWC,KAAK,MAAO,CACtB/B,aAAc,EACdgC,OAAQ,EACRP,OAAQ,EACRpB,SAAU,WACVE,MAAO,SAGX0B,aAAc,CACZR,OAAQb,IAAQC,GAChBqB,UAAW,OACXN,QAAS,UAEXO,aAAc,CACZjC,QAAS,QACT0B,QAAShB,IAAQwB,KAEnBC,SAAU,CACRC,cAAe1B,IAAQ2B,OA8EZC,UA1EiB,EAAGC,WAAUC,aAAYC,mBAA+B,UACtF,MAAMC,EAAWC,cACXC,EAASrD,IACTsD,EAAOC,eACP,KAAEC,GAASC,eACX,gBAAEC,GAAoBC,eACtB,OAAEC,GAAWC,IAEbC,EAAwBN,aAAH,EAAGA,EAAMO,MAAMC,QAAQC,SAC5CC,EAAY,UAAGN,EAAOO,KAAKC,GAASA,EAAMC,QAAUP,UAAxC,aAAG,EAA6DQ,KAC5EC,EAAkBf,aAAH,EAAGA,EAAMgB,QAAQC,OAChCC,EAAS,UAAGC,YAChBzB,EACAM,SAF6C,UAE7CA,EAAMO,MAAMa,oBAFiC,aAE7C,EAA0BC,OAC1BnB,UAHa,aAAG,EAIfY,KAEH,KAAKI,GAAcR,GAAiBK,GAAoBT,GAAuB,OAAO,KAEtF,MAAMgB,EAAsBxB,EAAKyB,wBAAwBrC,aAAa6B,GAEhES,EAAYC,YAAYH,EAAoBI,MAAO,CACvDd,MAAOF,IAGHiB,EAAeF,YAAYH,EAAoBlC,SAAU,CAC7DwC,iBAAkBV,IAGdW,EAAwBP,EAAoBQ,aAAaxB,GAAuByB,IACpF,CAACC,EAAMC,IAGH,WADA,CACA,MAAIC,IAAKrC,EAAOlD,gBAAhB,SACG8E,YAAYO,EAAM,CAAEJ,iBAAkBV,KADF,2BAA0Be,MAOvE,OACE,mBAAKC,IAAKrC,EAAO1B,MAAjB,UACE,mBAAK+D,IAAKrC,EAAOhC,QAAjB,UACE,oBAAMsE,UAAU,aAAaC,cAAY,OAAOF,IAAKrC,EAAO/B,OAC5D,YAAC,KAAD,CAAMuE,UAAU,KAAKC,MAAI,EAAzB,SACGd,OAGL,YAAC,KAAD,CAAMe,QAAQ,OAAOL,IAAKrC,EAAOT,SAAjC,SACGuC,IAEH,kBAAIO,IAAKrC,EAAOX,aAAhB,SAA+B2C,IAC/B,YAAC,IAAD,CACEW,UAAW7C,EACXuC,IAAKrC,EAAOb,aACZuD,QAAQ,SACRE,QAAS,IAAMhD,IAJjB,SAMGsB,IAAoB2B,IAAgBC,QACjC7C,EAAKyB,wBAAwBqB,wBAC7B9C,EAAKyB,wBAAwBsB,0BAEnC,YAAC,IAAD,CACEL,UAAW7C,EACXuC,IAAKrC,EAAOb,aACZuD,QAAQ,OACRE,QAAS,IAAMjD,IAJjB,SAMGM,EAAKgD","file":"78.js","sourcesContent":["import { useLang, useConfig } from '@app/services/config/hooks'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { useAuth } from '@app/react/common/hooks/useAuth'\n\nimport { useIsMobile } from '@app/react/common/hooks/useIsMobile'\nimport { Button, Text } from '@instacart/cocktail'\nimport { locations } from '@app/angular/constants/geo_locations'\nimport { responsive, spacing } from '@instacart/ids-core'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { getProductFulfillmentRetailer } from '@app/utils/banners'\nimport { StoreProduct } from '@app/types/product'\nimport { FulfillmentType } from '@app/types/config'\n\nexport type ModalProps = {\n  storeProduct: StoreProduct\n  onContinue: () => void\n  onCancel: () => void\n}\n\nconst useStyles = createStyles(theme => ({\n  bulletedContent: {\n    '&:before': {\n      backgroundColor: theme.colors.brandPrimaryRegular,\n      borderRadius: '50%',\n      content: '\" \"',\n      display: 'block',\n      height: 6,\n      left: -14,\n      position: 'absolute',\n      top: 6,\n      width: 6,\n    },\n    fontSize: theme.typography.bodyMedium2.fontSize,\n    marginBottom: spacing.s4,\n    position: 'relative',\n  },\n  heading: {\n    display: 'flex',\n  },\n  icon: {\n    alignSelf: 'center',\n    color: theme.colors.brandPrimaryRegular,\n    marginRight: spacing.s12,\n  },\n  modal: {\n    alignItems: 'center',\n    backgroundColor: '#FFF5EB',\n    borderRadius: theme.radius.r4,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '15vh auto',\n    maxHeight: 'calc(100% - 30vh)', // should be (100% - 2*vertical margin)\n    overflow: 'auto',\n    padding: spacing.s16,\n    width: 400,\n    [responsive.only('c')]: {\n      borderRadius: 0,\n      bottom: 0,\n      margin: 0,\n      position: 'absolute',\n      width: '100%',\n    },\n  },\n  modalButtons: {\n    margin: spacing.s4,\n    minHeight: '40px',\n    padding: '0 40px',\n  },\n  modalContent: {\n    display: 'block',\n    padding: spacing.s24,\n  },\n  subtitle: {\n    paddingBottom: spacing.s8,\n  },\n}))\n\nconst IwsRegulationAlertModal = ({ onCancel, onContinue, storeProduct }: ModalProps) => {\n  const isMobile = useIsMobile()\n  const styles = useStyles()\n  const lang = useLang()\n  const { user } = useAuth()\n  const { multipleBanners } = useConfig()\n  const { states } = locations\n\n  const currentStateShortCode = user?.store.address.province\n  const currentState = states.find(state => state.value === currentStateShortCode)?.name\n  const shoppingContext = user?.context.intent\n  const iwsBanner = getProductFulfillmentRetailer(\n    storeProduct,\n    user?.store.store_banner?.ext_id,\n    multipleBanners\n  )?.name\n\n  if (!iwsBanner || !currentState || !shoppingContext || !currentStateShortCode) return null\n\n  const currentModalContent = lang.iwsRegulationAlertModal.modalContent[shoppingContext]\n\n  const titleText = interpolate(currentModalContent.title, {\n    state: currentState,\n  })\n\n  const subtitleText = interpolate(currentModalContent.subtitle, {\n    independentStore: iwsBanner,\n  })\n\n  const modalContentFormatted = currentModalContent.stateContent[currentStateShortCode].map(\n    (each, i) => {\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <li css={styles.bulletedContent} key={`iws-alert-modal-content-${i}`}>\n          {interpolate(each, { independentStore: iwsBanner })}\n        </li>\n      )\n    }\n  )\n\n  return (\n    <div css={styles.modal}>\n      <div css={styles.heading}>\n        <span className=\"icon-error\" aria-hidden=\"true\" css={styles.icon} />\n        <Text component=\"h4\" bold>\n          {titleText}\n        </Text>\n      </div>\n      <Text variant=\"body\" css={styles.subtitle}>\n        {subtitleText}\n      </Text>\n      <ul css={styles.modalContent}>{modalContentFormatted}</ul>\n      <Button\n        fullWidth={isMobile}\n        css={styles.modalButtons}\n        variant=\"filled\"\n        onClick={() => onContinue()}\n      >\n        {shoppingContext === FulfillmentType.InStore\n          ? lang.iwsRegulationAlertModal.continueButtonLabelList\n          : lang.iwsRegulationAlertModal.continueButtonLabelCart}\n      </Button>\n      <Button\n        fullWidth={isMobile}\n        css={styles.modalButtons}\n        variant=\"link\"\n        onClick={() => onCancel()}\n      >\n        {lang.cancel}\n      </Button>\n    </div>\n  )\n}\n\nexport default IwsRegulationAlertModal\n"],"sourceRoot":""}