{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/externalPage/externalPageController.js"],"names":["cachedExternalPages","angular","module","controller","$sce","$scope","$state","$stateParams","Restangular","loading","pageId","id","setSrc","pageData","page","src","trustAsResourceUrl","target","url","go","one","getList","then","externalPages","iframes","iFrameResize","checkOrigin","resizedCallback","$apply","$element","$on","forEach","iframe","iFrameResizer","close"],"mappings":"yNAGA,IAAIA,EAEWC,cACZC,OAAO,+BAAgC,IAEvCC,WAAW,yBAHC,uDAGyB,SAAUC,EAAMC,EAAQC,EAAQC,EAAcC,GAClFH,EAAOI,SAAU,EACjB,MAAMC,EAASH,EAAaI,GAE5B,SAASC,IACP,MAAMC,EAAW,IAAOb,EAAqBc,GACpCA,EAAKH,IAAMD,GAEhBG,EACFR,EAAOU,IAAMX,EAAKY,mBAAmBH,EAASI,OAAOC,KAErDZ,EAAOa,GAAG,YAITnB,EAaHY,IAZAJ,EAAYY,IAAI,aAAc,kBAC3BC,UACAC,KACCC,IACEvB,EAAsBuB,EACtBX,KAEF,KACEN,EAAOa,GAAG,cAOlB,MAAMK,EAAUC,aACd,CACEC,aAAa,EACbC,gBAAiB,WACftB,EAAOI,SAAU,EACjBJ,EAAOuB,WAGXvB,EAAOwB,UAGTxB,EAAOyB,IAAI,WAAY,KACrBN,EAAQO,QAAQC,IACdA,EAAOC,cAAcC","file":"externalPageController.js","sourcesContent":["import _ from 'lodash'\nimport angular from 'angular'\n\nlet cachedExternalPages\n\nexport default angular\n  .module('ExternalPageControllerModule', [])\n\n  .controller('ExternalPageController', function ($sce, $scope, $state, $stateParams, Restangular) {\n    $scope.loading = true\n    const pageId = $stateParams.id\n\n    function setSrc() {\n      const pageData = _.find(cachedExternalPages, page => {\n        return page.id == pageId\n      })\n      if (pageData) {\n        $scope.src = $sce.trustAsResourceUrl(pageData.target.url)\n      } else {\n        $state.go('main.404')\n      }\n    }\n\n    if (!cachedExternalPages) {\n      Restangular.one('placements', 'external_pages')\n        .getList()\n        .then(\n          externalPages => {\n            cachedExternalPages = externalPages\n            setSrc()\n          },\n          () => {\n            $state.go('main.404')\n          }\n        )\n    } else {\n      setSrc()\n    }\n\n    const iframes = iFrameResize(\n      {\n        checkOrigin: false,\n        resizedCallback: function () {\n          $scope.loading = false\n          $scope.$apply()\n        },\n      },\n      $scope.$element\n    )\n\n    $scope.$on('$destroy', () => {\n      iframes.forEach(iframe => {\n        iframe.iFrameResizer.close()\n      })\n    })\n  })\n"],"sourceRoot":""}