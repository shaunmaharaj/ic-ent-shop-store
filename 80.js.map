{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/multipleBanners/FulfillmentBanner.tsx"],"names":["useStyles","createStyles","theme","bannerName","lineHeight","centerJustify","justifyContent","container","alignItems","display","flexDirection","flexWrap","margin","marginBottom","spacing","s4","marginTop","textAlign","fullWidth","width","imageContainer","leftJustify","soldByImage","height","marginRight","soldByText","color","colors","systemGrayscale50","withBorder","borderBottom","systemGrayscale20","withPadding","paddingLeft","s12","paddingRight","FulfillmentBanner","storeProduct","styles","lang","useLang","config","useConfig","user","useAuth","banner","getProductFulfillmentRetailer","store","store_banner","ext_id","multipleBanners","css","component","variant","align","fulfillmentBanner","src","logoImageUrl","alt","bannerSlug","name"],"mappings":"sIAAA,qQAkBA,MAAMA,EAAYC,YAAaC,IAAS,CACtCC,WAAY,CACVC,WAAY,OAEdC,cAAe,CACbC,eAAgB,UAElBC,UAAW,CACTC,WAAY,SACZC,QAAS,OACTC,cAAe,MACfC,SAAU,OACVC,OAAQ,OACRC,aAAcC,IAAQC,GACtBC,UAAWF,IAAQC,GACnBE,UAAW,QAEbC,UAAW,CACTC,MAAO,QAETC,eAAgB,CACdZ,WAAY,SACZC,QAAS,OACTC,cAAe,MACfC,SAAU,SACVL,eAAgB,OAChBO,aAAcC,IAAQC,GACtBC,UAAWF,IAAQC,GACnBE,UAAW,QAEbI,YAAa,CACXf,eAAgB,QAElBgB,YAAa,CACXb,QAAS,eACTc,OAAQ,OACRC,YAAaV,IAAQC,GACrBI,MAAO,QAETM,WAAY,CACVC,MAAOxB,EAAMyB,OAAOC,kBACpBJ,YAAaV,IAAQC,IAEvBc,WAAY,CACVC,aAAe,aAAY5B,EAAMyB,OAAOI,qBAE1CC,YAAa,CACXC,YAAanB,IAAQoB,IACrBC,aAAcrB,IAAQoB,QAmDXE,UA/CW,EACxBC,eACAR,aACAG,cACAd,YACAZ,iBAAiB,WACN,MACX,MAAMgC,EAAStC,IACTuC,EAAOC,cACPC,EAASC,eACT,KAAEC,GAASC,cAEXC,EAASC,YACbT,EACAM,SAF0C,UAE1CA,EAAMI,MAAMC,oBAF8B,aAE1C,EAA0BC,OAC1BR,EAAOS,iBAGT,OAAKL,EAGH,mBACEM,IAAK,CACHb,EAAO/B,UACY,SAAnBD,EAA4BgC,EAAOjB,YAAciB,EAAOjC,cACxDwB,GAAcS,EAAOT,WACrBG,GAAeM,EAAON,aAL1B,UAQE,YAAC,KAAD,CACEoB,UAAU,OACVC,QAAQ,UACRC,MAAM,OACNH,IAAK,CAACb,EAAOb,WAAYP,GAAaoB,EAAOpB,WAJ/C,SAMGqB,EAAKgB,oBAER,mBAAKJ,IAAKb,EAAOlB,eAAjB,UACE,YAAC,IAAD,CAAYoC,IAAKX,EAAOY,aAAcC,IAAKb,EAAOc,WAAYR,IAAKb,EAAOhB,cAC1E,YAAC,KAAD,CAAM8B,UAAU,OAAOC,QAAQ,UAAUC,MAAM,OAAOH,IAAKb,EAAOnC,WAAlE,SACG0C,EAAOe,aAtBI","file":"80.js","sourcesContent":["import React from 'react'\nimport { createStyles } from '@app/react/common/hooks/createStyles'\nimport { spacing } from '@instacart/ids-core'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport { Text } from '@instacart/cocktail'\nimport { StoreProduct } from '@app/types/product'\nimport { useAuth } from '@app/react/common/hooks/useAuth'\nimport { getProductFulfillmentRetailer } from '@app/utils/banners'\nimport AssetImage from '../../common/AssetImage'\n\ninterface Props {\n  storeProduct: StoreProduct\n  withBorder?: boolean\n  withPadding?: boolean\n  fullWidth?: boolean\n  justifyContent?: 'left' | 'center'\n}\n\nconst useStyles = createStyles(theme => ({\n  bannerName: {\n    lineHeight: '1.2',\n  },\n  centerJustify: {\n    justifyContent: 'center',\n  },\n  container: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 'auto',\n    marginBottom: spacing.s4,\n    marginTop: spacing.s4,\n    textAlign: 'left',\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  imageContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    justifyContent: 'left',\n    marginBottom: spacing.s4,\n    marginTop: spacing.s4,\n    textAlign: 'left',\n  },\n  leftJustify: {\n    justifyContent: 'left',\n  },\n  soldByImage: {\n    display: 'inline-block',\n    height: '18px',\n    marginRight: spacing.s4,\n    width: '18px',\n  },\n  soldByText: {\n    color: theme.colors.systemGrayscale50,\n    marginRight: spacing.s4,\n  },\n  withBorder: {\n    borderBottom: `1px solid ${theme.colors.systemGrayscale20}`,\n  },\n  withPadding: {\n    paddingLeft: spacing.s12,\n    paddingRight: spacing.s12,\n  },\n}))\n\nconst FulfillmentBanner = ({\n  storeProduct,\n  withBorder,\n  withPadding,\n  fullWidth,\n  justifyContent = 'left',\n}: Props) => {\n  const styles = useStyles()\n  const lang = useLang()\n  const config = useConfig()\n  const { user } = useAuth()\n\n  const banner = getProductFulfillmentRetailer(\n    storeProduct,\n    user?.store.store_banner?.ext_id,\n    config.multipleBanners\n  )\n\n  if (!banner) return null\n\n  return (\n    <div\n      css={[\n        styles.container,\n        justifyContent === 'left' ? styles.leftJustify : styles.centerJustify,\n        withBorder && styles.withBorder,\n        withPadding && styles.withPadding,\n      ]}\n    >\n      <Text\n        component=\"span\"\n        variant=\"caption\"\n        align=\"left\"\n        css={[styles.soldByText, fullWidth && styles.fullWidth]}\n      >\n        {lang.fulfillmentBanner}\n      </Text>\n      <div css={styles.imageContainer}>\n        <AssetImage src={banner.logoImageUrl} alt={banner.bannerSlug} css={styles.soldByImage} />\n        <Text component=\"span\" variant=\"caption\" align=\"left\" css={styles.bannerName}>\n          {banner.name}\n        </Text>\n      </div>\n    </div>\n  )\n}\n\nexport default FulfillmentBanner\n"],"sourceRoot":""}