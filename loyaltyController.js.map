{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/account/loyalty/loyalty.desktop.html","webpack://UnataWidgets/./app/angular/components/account/loyalty/loyalty.mobile.html","webpack://UnataWidgets/./app/angular/components/account/loyalty/loyalty.mobileAlternate.html","webpack://UnataWidgets/./app/angular/components/account/loyalty/loyaltyController.js"],"names":["module","exports","angular","controller","$element","$q","$scope","$state","$stateParams","$timeout","auth","config","lang","mobileService","nativeMobileBrightnessService","offersService","promoCodeService","registrationService","userAnalytics","userService","utilService","user","updating","continuityOffers","filteredContinuityOffersSet","completedContinuityOffers","inProgressContinuityOffers","inactiveContinuityOffers","selectedContinuityOffersMenuItem","continuityOffersMenu","isMobile","newCard","isMobileApp","disableLoyaltyCard","enableFullBrightnessMode","$on","resetBrightnessMode","fetchContinuityOffers","then","result","response","offer","continuity","rwd_activated","offer_activated","all","template","values","offersLength","length","complete","inProgress","inactive","filterContinuityOffers","offerFilter","numberOfContinuityOffersToShow","numberOfOffersToShow","showMoreContinuityOffers","hideManageCards","hideTransHistory","hideContinuityOffers","hideMobileCard","querySelector","focus","render","getLoyaltyCards","getLoyaltyPasses","cards","copy","loyaltyCards","primaryCard","getPrimaryLoyaltyCard","linkedCards","getNonPrimaryLoyaltyCard","loyaltyPass","loyaltyPasses","isBusinessUser","Boolean","ext_data","IS_BUSINESS","barcode_number","CARD_NUMBER","addCard","card","card_number","primary_card","push","message","error","updateLoyaltyCards","logUserLinkLoyaltyCard","loyaltyCardAddedSuccess","data","updateCards","loyaltyCardUpdateSuccess","promptLogin","loginToContinue","showManageCardsSection","pauseFullBrightnessMode","hideManageCardsSection","resumeFullBrightnessMode","undefined","goBack","showContinuityOffersSection","shopMenuEl","currentMenuItemEl","screenWidth","window","innerWidth","screen","width","scrollLeft","offsetLeft","offsetWidth","hideContinuityOffersSection","showTransHistorySection","hideTransHistorySection","enterPromoCode","openPromoCodeModal","fetchLoyaltyCards","run","$templateCache","put","require"],"mappings":"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","file":"loyaltyController.js","sourcesContent":["module.exports = \"<div class=loyalty-wrapper fixed-to-body ng-controller=LoyaltyController> <p ng-if=\\\":: lang.values.loyaltySubHeader\\\" ng-bind-html=\\\":: lang.values.loyaltySubHeader\\\"></p> <div ng-if=updating> <div class=view-loading-indicator></div> </div> <div ng-if=promoCodeService.successMessage class=\\\"message success\\\" scroll-into-view> <span class=icon-checkmark-circle aria-hidden=true></span> {{promoCodeService.successMessage}} <button class=button-link ng-click=promoCodeService.clearSuccessMessage()>{{::lang.values.dismiss}}</button> </div> <div class=content-section ng-if=\\\"!updating && !config.disableLoyaltyCard\\\"> <h2 ng-if=cards.length class=section-divider-small> <span class=title>{{::lang.values.loyaltyCard}}{{hasMultipleLoyaltyCards ? 's' : ''}}</span> </h2> <p ng-if=::lang.values.loyaltyCardInfo ng-bind-html=::lang.values.loyaltyCardInfo /> <div loyalty-card ng-if=primaryCard card=primaryCard loyalty-pass=loyaltyPass use-barcode-number-label=isBusinessUser></div> <div ng-if=cards.length class=\\\"form-wrapper cards-list\\\"> <div ng-if=\\\":: !config.hasMultipleLoyaltyCards && config.loyalty.enableLoyaltyNumberEditing\\\"> <form class=form-add-card ng-submit=updateCards()> <label class=required-overwrite for=loyalty-edit-field>{{::lang.aria.enter + ' ' + lang.aria.loyaltyCard}}</label> <input id=loyalty-edit-field type=text required class=\\\"input small\\\" ng-model=cards[0].card_number pattern={{::config.loyaltyCardPattern}} data-test=loyalty-edit-field> <button class=\\\"button action small\\\" data-test=loyalty-edit-submit>{{::lang.values.save}}</button> </form> </div> <table class=table ng-if=\\\":: config.hasMultipleLoyaltyCards\\\"> <thead> <tr> <td>{{::lang.values.loyaltyCardType}}</td> <td id=loyalty-program-id>{{::lang.values.loyaltyCard + ' ' + lang.values.loyaltyCardId}}</td> </tr> </thead> <tbody> <tr ng-repeat=\\\"card in cards\\\"> <td> <span ng-if=card.primary_card>{{::lang.values.primary}}</span> <span ng-if=!card.primary_card>{{::lang.values.linked}}</span> </td> <td> <span ng-if=card.primary_card> <form class=button-inline ng-submit=updateCards()> <input id=unata-loyalty-edit-field type=text required class=\\\"input small\\\" ng-model=card.card_number pattern={{::config.loyaltyCardPattern}} maxlength={{::config.loyaltyCardMaxLength}} data-test=loyalty-edit-field aria-labelledby=loyalty-program-id> <button id=unata-loyalty-edit-submit class=\\\"button action small\\\" data-test=loyalty-edit-submit>{{::lang.values.save}}</button> </form> </span> <span ng-if=!card.primary_card>{{card.card_number}}</span> </td> </tr> </tbody> </table> </div> </div> <div ng-if=\\\"!updating && config.enableContinuityOffers\\\" class=\\\"content-section continuity-offers\\\"> <div class=section-divider-small> <div class=title> {{ ::config.continuityOffers.title }} </div> <span> <button id=unata-loyalty-rewards-filter-all type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('all')\\\">All ({{continuityOffers.length}})</button> <button id=unata-loyalty-rewards-filter-complete type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('complete')\\\">Completed ({{completedContinuityOffers.length}})</button> <button id=unata-loyalty-rewards-filter-inprogress type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('inProgress')\\\">In Progress ({{inProgressContinuityOffers.length}})</button> <button id=unata-loyalty-rewards-filter-inactive type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('inactive')\\\">Not Started ({{inactiveContinuityOffers.length}})</button> </span> </div> <div class=continuity-offer-cell-container> <div class=continuity-offer-cell ng-repeat=\\\"offer in filteredContinuityOffersSet | limitTo: numberOfContinuityOffersToShow\\\"> <span continuity-offer-cell offer=offer></span> </div> <div class=no-continuity-offers ng-if=!filteredContinuityOffersSet.length> {{ ::config.continuityOffers.noOffers }} </div> </div> <div ng-if=\\\"filteredContinuityOffersSet.length > numberOfContinuityOffersToShow\\\" class=continuity-show-more-toggle> <button type=button name=button class=\\\"button small hollow\\\" ng-click=showMoreContinuityOffers()>{{ ::config.lang.showMore }}</button> </div> </div> <div class=\\\"content-section card-add\\\" ng-if=!updating> <div ng-if=\\\"!config.loyalty.disableAddCard && (config.hasMultipleLoyaltyCards || !primaryCard) && !config.disableLoyaltyCard\\\"> <h2 class=section-divider-small> <span class=title>{{primaryCard ? lang.values.linkAdditional : lang.values.link}} {{::lang.values.loyaltyCard}} :</span> </h2> <form class=\\\"form-add-card form\\\" ng-submit=addCard()> <label class=required-overwrite for=unata-loyalty-add-card-field>{{::lang.aria.enter + ' ' + lang.aria.loyaltyCard}}</label> <input required id=unata-loyalty-add-card-field class=\\\"input small\\\" type=text ng-model=newCard.card_number pattern={{::config.loyaltyCardPattern}} maxlength={{::config.loyaltyCardMaxLength}} placeholder=\\\"Enter {{::lang.values.loyaltyCardPlaceholder || lang.values.loyaltyCard}}\\\" data-test=loyalty-add-card-field> <button id=unata-loyalty-add-card-submit class=\\\"button small\\\" data-test=loyalty-add-card-submit>{{primaryCard ? lang.values.link : lang.values.add}} Card</button> <button ng-if=\\\"config.showAssignCardButton  && !primaryCard\\\" class=\\\"button hollow small\\\">{{::lang.values.beAssignedDigitalCard}}</button> </form> </div> </div> <div ng-if=\\\"!config.disableLoyaltyTransactionHistory && !updating\\\" class=\\\"content-section card-transaction-history\\\"> <react-loyalty-transactions/> </div> <div class=content-footer> <div ng-if=error class=\\\"message error loyalty-indent\\\" scroll-into-view scrollcontainer=.loyalty-wrapper targetelement=.content-footer data-test=loyalty-error-message> <span class=icon-error aria-hidden=true></span> {{error}} </div> <div ng-if=message class=\\\"message success loyalty-indent\\\" scroll-into-view scrollcontainer=.loyalty-wrapper targetelement=.content-footer data-test=loyalty-success-message>{{message}}</div> </div> </div> \";","module.exports = \"<div class=loyalty-wrapper trap-focus ng-class=\\\"{'loyalty-wrapper-mobile': isMobile}\\\" fixed-to-body ng-controller=LoyaltyController> <div ng-if=updating> <div class=view-loading-indicator></div> </div> <div class=card-container role=dialog aria-modal=true aria-label={{::lang.values.loyaltyCard}} ng-if=\\\"!hideMobileCard && primaryCard\\\"> <div class=content-section ng-if=!updating> <button class=modal-close ng-click=util.goBack() aria-label={{::lang.aria.modalClose}}></button> <h1 class=screenreadertext>{{::lang.values.loyaltyCard}}</h1> <div loyalty-card ng-if=primaryCard card=primaryCard loyalty-pass=loyaltyPass use-barcode-number-label=isBusinessUser></div> <div class=loyalty-bottom-button-container> <button ng-if=\\\"!updating && config.enableContinuityOffers\\\" ng-click=showContinuityOffersSection() class=loyalty-bottom-button> <span>{{::lang.template(lang.values.myRewards)}}</span> </button> <button ng-click=showManageCardsSection() ng-if=config.loyalty.enableLoyaltyNumberEditing class=loyalty-bottom-button data-test=manage-loyalty-button> <span>{{::lang.template(lang.values.manageRewards, {loyaltyCardName: lang.values.loyaltyCard})}}</span> </button> <button ng-click=showTransHistorySection() ng-if=!config.disableLoyaltyTransactionHistory class=loyalty-bottom-button> <span>{{::lang.template(lang.values.transactionHistory)}}</span> </button> </div> </div> </div> <div class=non-card-container ng-if=\\\"!hideManageCards || !primaryCard\\\" role=dialog aria-modal=true aria-label=\\\"{{::lang.template(lang.values.manageRewards, {loyaltyCardName: lang.values.loyaltyCard})}}\\\"> <div class=loyalty-mobile-bottom-header> <button class=icon-delete ng-click=hideManageCardsSection() aria-label={{::lang.aria.hideSection}}></button> </div> <h1 class=screenreadertext>{{::lang.template(lang.values.manageRewards, {loyaltyCardName: lang.values.loyaltyCard})}}</h1> <div ng-if=\\\":: lang.values.loyaltySubHeader\\\" ng-bind-html=\\\":: lang.values.loyaltySubHeader\\\" class=card-add></div> <div class=non-card-content-wrapper> <div class=\\\"content-section card-add\\\" ng-if=!updating> <div ng-if=\\\"!config.loyalty.disableAddCard && (config.hasMultipleLoyaltyCards || !primaryCard)\\\"> <h2 class=section-divider-small> <span class=title>{{primaryCard ? lang.values.linkAdditional : lang.values.link}} {{::lang.values.loyaltyCard}} :</span> </h2> <form class=\\\"form button-inline\\\" ng-submit=addCard()> <label class=required-overwrite for=loyaltyAddCard>{{::lang.aria.enter + ' ' + lang.aria.loyaltyCard}}</label> <input id=loyaltyAddCard required class=\\\"input small\\\" type=text ng-model=newCard.card_number aria-label=\\\"{{::lang.aria.enter + ' ' + lang.aria.loyaltyCard}}\\\" placeholder=\\\"{{::lang.aria.enter + ' ' + lang.aria.loyaltyCard}}\\\" data-test=loyalty-add-card-field> <button data-test=loyalty-add-card-submit class=\\\"button small\\\">{{primaryCard ? lang.values.link : lang.values.add}} Card</button> <button ng-if=\\\"config.showAssignCardButton  && !primaryCard\\\" class=\\\"button hollow small\\\">{{::lang.values.beAssignedDigitalCard}}</button> </form> </div> </div> <div class=content-section ng-if=!updating> <div ng-if=\\\"config.loyalty.enableLoyaltyNumberEditing && cards.length\\\" class=\\\"form-wrapper cards-list\\\"> <div ng-if=!config.hasMultipleLoyaltyCards> <form class=button-inline ng-submit=updateCards()> <label for=editLoyaltyCard>Enter Card Number</label> <input id=editLoyaltyCard type=text required class=\\\"input small\\\" ng-model=cards[0].card_number pattern={{::config.loyaltyCardPattern}} aria-label=\\\"Enter Card Number\\\" data-test=loyalty-edit-field> <button data-test=loyalty-edit-submit class=\\\"button action small\\\">{{::lang.values.save}}</button> </form> </div> <table class=table ng-if=config.hasMultipleLoyaltyCards> <thead> <tr> <td>{{::lang.values.loyaltyCardType}}</td> <td id=loyalty-program-id>{{::lang.values.loyaltyCard + ' ' + lang.values.loyaltyCardId}}</td> </tr> </thead> <tbody> <tr ng-repeat=\\\"card in cards\\\"> <td> <span ng-if=card.primary_card>{{::lang.values.primary}}</span> <span ng-if=!card.primary_card>{{::lang.values.linked}}</span> </td> <td> <span ng-if=card.primary_card> <form class=button-inline ng-submit=updateCards()> <input id=editLoyaltyCard type=text required class=\\\"input small\\\" ng-model=card.card_number pattern={{::config.loyaltyCardPattern}} aria-label=\\\"Enter Card Number\\\" data-test=loyalty-edit-field aria-labelledby=loyalty-program-id> <button class=\\\"button action small\\\" data-test=loyalty-edit-submit>{{::lang.values.save}}</button> </form> </span> <span ng-if=!card.primary_card>{{card.card_number}}</span> </td> </tr> </tbody> </table> </div> <div ng-if=error class=\\\"message error loyalty-indent\\\" scroll-into-view data-test=loyalty-error-message> <span class=icon-error aria-hidden=true></span> {{error}} </div> <div ng-if=message class=\\\"message success loyalty-indent\\\" scroll-into-view data-test=loyalty-success-message> <span class=icon-checkmark-circle aria-hidden=true></span> {{message}} </div> </div> </div> </div> <div class=non-card-container ng-if=\\\"!hideContinuityOffers && config.enableContinuityOffers\\\"> <div class=loyalty-mobile-bottom-header> <button class=icon-chevron-left ng-click=hideContinuityOffersSection() aria-label={{::lang.aria.hideSection}}></button> <span class=title>{{::lang.template(lang.values.myRewards)}}</span> </div> <div ng-if=::lang.values.loyaltySubHeader ng-bind-html=::lang.values.loyaltySubHeader class=card-add></div> <div ng-if=!updating class=\\\"menu js-mobile-shop-menu\\\"> <ui class=continuty-offers-menu-wrapper> <li role=button class=item ng-repeat=\\\"(key, value) in continuityOffersMenu\\\" ng-class=\\\"{current: key === selectedContinuityOffersMenuItem}\\\" ng-click=filterContinuityOffers(key)>{{value}}</li>  </ui> </div> <div class=\\\"content-section continuity-wrapper\\\" ng-if=!updating> <div class=\\\"content-section continuity-offers\\\"> <div class=continuity-offer-cell-container> <div class=continuity-offer-cell ng-repeat=\\\"offer in filteredContinuityOffersSet | limitTo: numberOfContinuityOffersToShow\\\"> <span continuity-offer-cell offer=offer></span> </div> <div class=no-continuity-offers ng-if=!filteredContinuityOffersSet.length> {{ ::config.continuityOffers.noOffers }} </div> </div> <div ng-if=\\\"filteredContinuityOffersSet.length > numberOfContinuityOffersToShow\\\" class=continuity-show-more-toggle> <button type=button name=button class=\\\"button small hollow\\\" ng-click=showMoreContinuityOffers()>{{ ::config.lang.showMore }}</button> </div> </div> </div> </div> <div class=non-card-container ng-if=\\\"!hideTransHistory && !config.disableLoyaltyTransactionHistory\\\"> <div class=loyalty-mobile-bottom-header> <button class=icon-chevron-left ng-click=hideTransHistorySection() aria-label={{::lang.aria.hideSection}}></button> <span class=title>{{::lang.template(lang.values.transactionHistory)}}</span> </div> <div class=\\\"content-section card-transaction-history\\\"> <react-loyalty-transactions/> </div> </div> </div> \";","module.exports = \" <div ng-controller=LoyaltyController> <div ng-if=promoCodeService.successMessage class=loyalty-messages-container> <div class=\\\"message success\\\" scroll-into-view> <span class=icon-checkmark-circle aria-hidden=true></span> {{ promoCodeService.successMessage }} <button class=button-link ng-click=promoCodeService.clearSuccessMessage()>{{::lang.values.dismiss}}</button> </div> </div> <div ng-if=\\\"!updating && config.enableContinuityOffers\\\" class=\\\"content-section continuity-offers\\\"> <div ng-if=::!mobile.isMobile class=section-divider-small> <div class=title> {{ ::config.continuityOffers.title }} </div> <span> <button type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('all')\\\">All ({{continuityOffers.length}})</button> <button type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('complete')\\\">Completed ({{completedContinuityOffers.length}})</button> <button type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('inProgress')\\\">In Progress ({{inProgressContinuityOffers.length}})</button> <button type=button class=\\\"button small hollow\\\" ng-click=\\\"filterContinuityOffers('inactive')\\\">Not Started ({{inactiveContinuityOffers.length}})</button> </span> </div> <div class=continuity-offer-cell-container> <div class=continuity-offer-cell ng-repeat=\\\"offer in filteredContinuityOffersSet | limitTo: numberOfContinuityOffersToShow\\\"> <span continuity-offer-cell offer=offer></span> </div> <div class=no-continuity-offers ng-if=!filteredContinuityOffersSet.length> {{ ::config.continuityOffers.noOffers }} </div> </div> <div ng-if=\\\"filteredContinuityOffersSet.length > numberOfContinuityOffersToShow\\\" class=continuity-show-more-toggle> <button type=button name=button class=\\\"button small hollow\\\" ng-click=showMoreContinuityOffers()>{{ ::config.lang.showMore }}</button> </div> </div> </div> \";","import _ from 'lodash'\nimport angular from 'angular'\n\nexport default angular\n  .module('LoyaltyControllerModule', [])\n  .controller(\n    'LoyaltyController',\n    function (\n      $element,\n      $q,\n      $scope,\n      $state,\n      $stateParams,\n      $timeout,\n      auth,\n      config,\n      lang,\n      mobileService,\n      nativeMobileBrightnessService,\n      offersService,\n      promoCodeService,\n      registrationService,\n      userAnalytics,\n      userService,\n      utilService\n    ) {\n      $scope.user = auth.user\n      $scope.updating = true\n      $scope.promoCodeService = promoCodeService\n\n      // Continuity Offers\n      $scope.continuityOffers = []\n      $scope.filteredContinuityOffersSet = []\n      $scope.completedContinuityOffers = []\n      $scope.inProgressContinuityOffers = []\n      $scope.inactiveContinuityOffers = []\n      $scope.selectedContinuityOffersMenuItem = 'all'\n      $scope.continuityOffersMenu = {}\n      $scope.isMobile = mobileService.isMobile\n      $scope.newCard = {}\n\n      if (mobileService.isMobileApp() && !config.disableLoyaltyCard) {\n        nativeMobileBrightnessService.enableFullBrightnessMode()\n        $scope.$on('$destroy', () => {\n          nativeMobileBrightnessService.resetBrightnessMode()\n        })\n      }\n\n      // Fetch continuity offers\n      offersService.fetchContinuityOffers().then(result => {\n        const response = result || []\n\n        $scope.continuityOffers = response\n        // By default the filtered set should be all continuity offers\n        $scope.filteredContinuityOffersSet = response\n\n        $scope.completedContinuityOffers = _.filter(response, offer => {\n          return offer.continuity.rwd_activated\n        })\n\n        $scope.inProgressContinuityOffers = _.filter(response, offer => {\n          return offer.continuity.offer_activated && !offer.continuity.rwd_activated\n        })\n\n        $scope.inactiveContinuityOffers = _.filter(response, offer => {\n          return !offer.continuity.offer_activated\n        })\n\n        $scope.continuityOffersMenu = {\n          all: lang.template(lang.values.continuityOffersMenu.all, {\n            offersLength: $scope.continuityOffers.length,\n          }),\n          complete: lang.template(lang.values.continuityOffersMenu.complete, {\n            offersLength: $scope.completedContinuityOffers.length,\n          }),\n          inProgress: lang.template(lang.values.continuityOffersMenu.inProgress, {\n            offersLength: $scope.inProgressContinuityOffers.length,\n          }),\n          inactive: lang.template(lang.values.continuityOffersMenu.inactive, {\n            offersLength: $scope.inactiveContinuityOffers.length,\n          }),\n        }\n\n        $scope.updating = false\n      })\n\n      // Simple continuity offer status filtering\n      $scope.filterContinuityOffers = offerFilter => {\n        $scope.selectedContinuityOffersMenuItem = offerFilter\n\n        if (offerFilter === 'all') {\n          $scope.filteredContinuityOffersSet = $scope.continuityOffers\n        } else if (offerFilter === 'complete') {\n          $scope.filteredContinuityOffersSet = $scope.completedContinuityOffers\n        } else if (offerFilter === 'inProgress') {\n          $scope.filteredContinuityOffersSet = $scope.inProgressContinuityOffers\n        } else if (offerFilter === 'inactive') {\n          $scope.filteredContinuityOffersSet = $scope.inactiveContinuityOffers\n        }\n      }\n\n      // Continuity offer render limit - default 10\n      $scope.numberOfContinuityOffersToShow = config.continuityOffers.numberOfOffersToShow\n\n      // Toggle showing ALL continuity offers\n      $scope.showMoreContinuityOffers = () => {\n        $scope.numberOfContinuityOffersToShow = $scope.continuityOffers.length\n      }\n\n      // Hide the section of page with Transaction History and Add Cards when page loads, and show the Card section\n      if (mobileService.isMobile) {\n        $scope.hideManageCards = true\n        $scope.hideTransHistory = true\n        $scope.hideContinuityOffers = true\n        $scope.hideMobileCard = false\n        $timeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          $element[0].querySelector('.modal-close')?.focus()\n        }, 0)\n      }\n\n      $scope.render = function () {\n        return $q.all([userService.getLoyaltyCards(), userService.getLoyaltyPasses()]).then(() => {\n          $scope.cards = angular.copy(userService.loyaltyCards)\n          $scope.primaryCard = angular.copy(userService.getPrimaryLoyaltyCard())\n          $scope.linkedCards = userService.getNonPrimaryLoyaltyCard()\n          $scope.loyaltyPass = userService.loyaltyPasses?.[0] || null\n          $scope.isBusinessUser = Boolean($scope.user.ext_data?.IS_BUSINESS)\n\n          if ($scope.isBusinessUser) {\n            $scope.primaryCard.barcode_number = $scope.user.ext_data?.CARD_NUMBER\n          }\n        })\n      }\n\n      // Add a new primary or linked card\n      $scope.addCard = function () {\n        const cards = _.clone($scope.cards)\n\n        const card = {\n          card_number: $scope.newCard.card_number,\n        }\n\n        if (!cards || !cards.length) {\n          card.primary_card = true\n        }\n\n        cards.push(card)\n\n        $scope.updating = true\n        $scope.message = null\n        $scope.error = null\n\n        userService.updateLoyaltyCards(cards).then(\n          () => {\n            userAnalytics.logUserLinkLoyaltyCard()\n            $scope.render()\n            $scope.updating = false\n            $scope.message = lang.values.loyaltyCardAddedSuccess\n          },\n          response => {\n            $scope.updating = false\n            $scope.error = response.data ? response.data.message : response.message\n          }\n        )\n      }\n\n      // Update the primary card\n      $scope.updateCards = function () {\n        $scope.updating = true\n        $scope.message = null\n        $scope.error = null\n\n        userService.updateLoyaltyCards($scope.cards).then(\n          () => {\n            $scope.render()\n            $scope.updating = false\n            $scope.message = lang.values.loyaltyCardUpdateSuccess\n          },\n          response => {\n            if (response.error === 40304) {\n              registrationService.promptLogin(\n                'main.account.loyalty',\n                '',\n                '',\n                '',\n                lang.values.loginToContinue\n              )\n            } else {\n              $scope.error = response.data ? response.data.message : response.message\n              $scope.updating = false\n            }\n          }\n        )\n      }\n\n      // On Mobile show the portion of the page displaying add cards\n      $scope.showManageCardsSection = function () {\n        if (mobileService.isMobileApp()) {\n          nativeMobileBrightnessService.pauseFullBrightnessMode()\n        }\n        $scope.hideManageCards = false\n        $scope.hideMobileCard = true\n        $scope.hideTransHistory = true\n        $scope.hideContinuityOffers = true\n\n        $timeout(() => {\n          $element[0].querySelector('.icon-delete').focus()\n        }, 0)\n      }\n\n      // On Mobile hide the portion of the page displaying add cards after it has already been shown\n      // If user does not have a card, then they are taken to the previous page in the app.\n      $scope.hideManageCardsSection = function () {\n        if (mobileService.isMobileApp()) {\n          nativeMobileBrightnessService.resumeFullBrightnessMode()\n        }\n        $scope.error = null\n        $scope.message = null\n        if ($scope.primaryCard !== undefined) {\n          $scope.hideMobileCard = false\n          $scope.hideManageCards = true\n          $scope.hideTransHistory = true\n          $scope.hideContinuityOffers = true\n\n          $timeout(() => {\n            $element[0].querySelector('.loyalty-bottom-button').focus()\n          }, 0)\n        } else {\n          utilService.goBack()\n        }\n      }\n\n      // On Mobile show the portion of the page displaying continuity offers\n      $scope.showContinuityOffersSection = function () {\n        if (mobileService.isMobileApp()) {\n          nativeMobileBrightnessService.pauseFullBrightnessMode()\n        }\n        $scope.hideContinuityOffers = false\n        $scope.hideMobileCard = true\n        $scope.hideManageCards = true\n        $scope.hideTransHistory = true\n\n        $timeout(() => {\n          // Scroll to current highlighted menu item if we're showing siblings in mobile\n          const shopMenuEl = $element[0].querySelector('.js-mobile-shop-menu')\n          if (shopMenuEl) {\n            const currentMenuItemEl = shopMenuEl.querySelector('.current')\n            // eslint-disable-next-line no-restricted-globals\n            const screenWidth = window.innerWidth > 0 ? window.innerWidth : screen.width\n            if (currentMenuItemEl) {\n              // Scroll such that current menu item is centered\n              shopMenuEl.scrollLeft =\n                currentMenuItemEl.offsetLeft - (screenWidth - currentMenuItemEl.offsetWidth) / 2\n            }\n          }\n        }, 0)\n      }\n\n      // On Mobile hide the portion of the page displaying continuity offers after it has already been shown\n      $scope.hideContinuityOffersSection = function () {\n        if (mobileService.isMobileApp()) {\n          nativeMobileBrightnessService.resumeFullBrightnessMode()\n        }\n        $scope.error = null\n        $scope.message = null\n        if ($scope.primaryCard !== undefined) {\n          $scope.hideMobileCard = false\n          $scope.hideContinuityOffers = true\n          $scope.hideManageCards = true\n          $scope.hideTransHistory = true\n        } else {\n          utilService.goBack()\n        }\n      }\n\n      // On Mobile show the portion of the page displaying transaction history\n      $scope.showTransHistorySection = function () {\n        if (mobileService.isMobileApp()) {\n          nativeMobileBrightnessService.pauseFullBrightnessMode()\n        }\n        $scope.hideTransHistory = false\n        $scope.hideMobileCard = true\n        $scope.hideManageCards = true\n        $scope.hideContinuityOffers = true\n      }\n\n      // On Mobile hide the portion of the page displaying transaction history after it has already been shown\n      $scope.hideTransHistorySection = function () {\n        if (mobileService.isMobileApp()) {\n          nativeMobileBrightnessService.resumeFullBrightnessMode()\n        }\n        $scope.error = null\n        $scope.message = null\n        $scope.hideMobileCard = false\n        $scope.hideManageCards = true\n        $scope.hideTransHistory = true\n        $scope.hideContinuityOffers = true\n      }\n\n      // Check if we are being directed to the Enter Promo Code modal in the $stateParams\n      if ($stateParams.enterPromoCode) {\n        utilService.openPromoCodeModal()\n      }\n\n      $scope.render()\n      userService.fetchLoyaltyCards().then(() => $scope.render())\n    }\n  )\n  .run($templateCache => {\n    $templateCache.put('loyalty.desktop.html', require('./loyalty.desktop.html'))\n    $templateCache.put('loyalty.mobile.html', require('./loyalty.mobile.html'))\n    $templateCache.put('loyalty.mobileAlternate.html', require('./loyalty.mobileAlternate.html'))\n  })\n"],"sourceRoot":""}