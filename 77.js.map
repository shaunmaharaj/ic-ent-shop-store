{"version":3,"sources":["webpack://UnataWidgets/./app/react/components/icExpress/MobileMenuWithExpressPopover.tsx"],"names":["useStyles","createStyles","menuLabel","color","fontSize","height","left","lineHeight","position","popoverCard","marginLeft","MobileMenuWithExpressPopover","props","showPopover","setShowPopover","useState","shouldShowDynamicPlacement","useExpressDynamicPlacement","lang","useLang","config","useConfig","styles","useEffect","ExpressPlacements","POPOVER","icExpressPopover","align","data-test","css","loadImage","image","loadAssetImage","onButtonClick","open","component","autoAdjust","zIndex","portalTarget","document","querySelector","undefined","className","onClick","aria-label","enableAllDepsMobileLabel","allDepartmentsMenuLabel"],"mappings":"sIAAA,uQAaA,MAAMA,EAAYC,aAAa,KAAM,CACnCC,UAAW,CACTC,MAAO,QACPC,SAAU,GACVC,OAAQ,GACRC,KAAM,GACNC,WAAY,OACZC,SAAU,YAEZC,YAAa,CACX,cAAe,CACbH,KAAM,IAERI,WAAY,OAkDDC,UA9CuBC,IACpC,MAAOC,EAAaC,GAAkBC,oBAAS,IACzC,2BAAEC,GAA+BC,cACjCC,EAAOC,cACPC,EAASC,cACTC,EAAStB,IAKfuB,oBAAU,KACRT,EAAeE,EAA2BQ,IAAkBC,WAC3D,CAACT,IAEJ,MAIMU,EACJ,YAAC,IAAD,CAAiBC,MAAO,OAAQC,YAAU,qBAAqBC,IAAKP,EAAOb,YAA3E,SACE,YAAC,IAAD,CAAkBqB,UANHC,GACVA,GAASC,YAAeD,GAKWE,cAdT,KACjCnB,GAAe,QAgBjB,OACE,YAAC,IAAD,CACEoB,KAAMrB,EACNsB,UAAWT,EACXlB,SAAU,aACV4B,YAAU,EACVC,OAAQ,KACRC,aAAcC,SAASC,cAAc,qBAAkBC,EANzD,SAQE,sBACEC,UAAU,cACVd,YAAU,mBACVe,QAAS/B,EAAM+B,QACfC,aAAW,YAJb,SAMGxB,EAAOyB,0BACN,oBAAMhB,IAAKP,EAAOpB,UAAlB,SAA8BgB,EAAK4B","file":"77.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { createStyles, OverlayTrigger } from '@instacart/cocktail'\nimport UserMenuPopover from '@instacart/enterprise-user-menu/UserMenuPopover'\nimport IcExpressPopover from '@instacart/enterprise-user-menu/IcExpressPopover'\nimport loadAssetImage from '@app/utils/loadAssetImage'\nimport { useExpressDynamicPlacement } from '@app/services/express/hooks'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport { ExpressPlacements } from '@app/services/express/types'\n\ninterface MobileMenuWithExpressPopoverProps {\n  onClick: () => void\n}\n\nconst useStyles = createStyles(() => ({\n  menuLabel: {\n    color: 'white',\n    fontSize: 18,\n    height: 55,\n    left: 45,\n    lineHeight: '55px',\n    position: 'absolute',\n  },\n  popoverCard: {\n    '.card-arrow': {\n      left: 10,\n    },\n    marginLeft: 10,\n  },\n}))\n\nconst MobileMenuWithExpressPopover = (props: MobileMenuWithExpressPopoverProps) => {\n  const [showPopover, setShowPopover] = useState(true)\n  const { shouldShowDynamicPlacement } = useExpressDynamicPlacement()\n  const lang = useLang()\n  const config = useConfig()\n  const styles = useStyles()\n  const handleIcExpressButtonClick = () => {\n    setShowPopover(false)\n  }\n\n  useEffect(() => {\n    setShowPopover(shouldShowDynamicPlacement(ExpressPlacements.POPOVER))\n  }, [shouldShowDynamicPlacement])\n\n  const loadImage = (image: string) => {\n    return image && loadAssetImage(image)\n  }\n\n  const icExpressPopover = (\n    <UserMenuPopover align={'left'} data-test=\"ic-express-popover\" css={styles.popoverCard}>\n      <IcExpressPopover loadImage={loadImage} onButtonClick={handleIcExpressButtonClick} />\n    </UserMenuPopover>\n  )\n  return (\n    <OverlayTrigger\n      open={showPopover}\n      component={icExpressPopover}\n      position={'bottomLeft'}\n      autoAdjust\n      zIndex={1013}\n      portalTarget={document.querySelector('#app-header') || undefined}\n    >\n      <button\n        className=\"menu-toggle\"\n        data-test=\"mobile-side-menu\"\n        onClick={props.onClick}\n        aria-label=\"Main Menu\"\n      >\n        {config.enableAllDepsMobileLabel && (\n          <span css={styles.menuLabel}>{lang.allDepartmentsMenuLabel}</span>\n        )}\n      </button>\n    </OverlayTrigger>\n  )\n}\n\nexport default MobileMenuWithExpressPopover\n"],"sourceRoot":""}