{"version":3,"sources":["webpack://UnataWidgets/./app/services/user/api/userPayments.ts","webpack://UnataWidgets/./app/services/user/hooks.ts","webpack://UnataWidgets/./app/react/components/payments/Stripe/StripeFormContext.tsx","webpack://UnataWidgets/./node_modules/@stripe/stripe-js/dist/stripe.esm.js","webpack://UnataWidgets/./app/react/components/payments/Stripe/StripeProvider.tsx","webpack://UnataWidgets/./app/react/components/payments/Stripe/StripeForm.tsx","webpack://UnataWidgets/./app/react/components/payments/Stripe/StripeCardManager.tsx","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/SignupContext.tsx","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/TrialSignup.tsx","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/SubscriptionSignup.tsx","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/SignupConfirmation.tsx","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/SubscriptionSignupWithPlanSelect.tsx","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/types.ts","webpack://UnataWidgets/./app/react/components/icExpress/ExpressSignupModal/ModalEntry.tsx","webpack://UnataWidgets/./app/react/components/icExpress/utils.ts","webpack://UnataWidgets/./app/react/components/icExpress/ExpressPlans.tsx","webpack://UnataWidgets/./node_modules/@stripe/react-stripe-js/dist/react-stripe.umd.js"],"names":["updateCartPayment","details","request","body","method","useAllPaymentInstrumentsQuery","serviceType","useQuery","querystring","payment_type","service_type","getUserPayments","StripeFormContext","createContext","StripeFormProvider","children","submitPayment","onPaymentComplete","setIsProcessing","queryClient","useQueryClient","paymentQuery","cards","data","auth_capture","payment_instruments","paymentError","setPaymentError","useState","selectedCardId","setSelectedCardId","addNewCard","setAddNewCard","stripe","useStripe","elements","useElements","selectedCard","find","c","id","undefined","useEffect","isLoading","length","getStripeTokenAndCreateUser","useCallback","async","cardElement","getElement","CardElement","token","error","createToken","message","payment","ext_id","err","handleSubmit","event","preventDefault","invalidateQueries","Provider","value","V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","stripePromise","loadScript","params","Promise","resolve","reject","window","Stripe","console","warn","script","scripts","document","querySelectorAll","concat","i","test","src","findScript","queryString","advancedFraudSignals","createElement","headOrBody","head","Error","appendChild","injectScript","addEventListener","initStripe","maybeStripe","args","startTime","apply","_registerWrapper","name","version","registerWrapper","stripePromise$1","then","loadCalled","StripeProvider","apiKey","optionalComponents","useConfig","includes","_len","arguments","Array","_key","Date","now","loadStripe","useStyles","createStyles","tokens","borderColor","color","ui","errorFocused","boxShadow","focused","brand","primary","regular","outlineWidth","stripeElement","border","borderRadius","padding","size","spacing","xSmall","StripeForm","setFocused","useContext","setIsLoading","styles","isMounted","useRef","current","all","generateStripeUser","shape","height","css","data-test","onChange","e","onFocus","onBlur","options","iconStyle","component","variant","bold","radio","display","flexDirection","justifyContent","width","row","backgroundColor","neutral","grey2","margin","xxxSmall","paddingLeft","small","paddingRight","selectWrapper","StripeCardManager","lang","useLang","deleteCard","card","newData","filter","setQueryData","map","checked","provider","last_four_digits","interpolate","cardEnding","cardName","cardNumber","onClick","delete","SignupContext","React","answerCreditCard","paddingBottom","large","buttonGroup","marginTop","medium","heading","fontWeight","font","weight","logo","whyCreditCard","xxLarge","TrialSignupContent","icExpress","onCancel","isProcessing","useConfigContext","useExpressUserConfigContext","startTrialButtonLabel","useMemo","getConfigByRule","modalSignupFlow","startTrialVariants","startTrial","answerCreditCardText","answerCreditCardVariants","align","headers","start","AssetImage","goldfruitsImage","alt","dangerouslySetInnerHTML","__html","termsUrl","termsAndConditions","url","disabled","loading","finishLater","SubscriptionSignup","config","plan","xLarge","subscriptionDetailsBox","colors","light","marginBottom","subscriptionPrice","terms","confirm","getExpressPlanConfigForApiPlan","planName","starting","date","dayjs","format","currencySymbol","price","purchaseMembership","cancel","successLogo","welcomeDescription","fontSize","SignupConfirmation","isTrialPlan","onSuccess","newPlanId","currentSubscription","useCurrentSubscription","isTrial","welcome","thanks","successImage","subscription","end_date","send_reminder_on","trialEnd","reminder","fullWidth","startShopping","purchasePlanInstead","space","setNewPlanId","label","plans","useEligibleSubscriptions","ineligible","ExpressPlans","term_length","onPlanSelect","planId","noThanks","careMessage","ModalState","mobileHeader","paddingTop","modalContainerMobile","modalContent","modalContentMobile","overflow","ExpressSignupModal","props","isMobile","useIsMobile","modalState","setModalState","Signup","eligiblePlans","p","getIsTrialPlan","content","eligible_for_trial","TrialSignup","SubscriptionSignupWithPlanSelect","Confirmation","TrialFailed","ext_payer_id","result","store","dispatch","createSubscription","subscription_plan_id","unwrapResult","code","roundedCorners","position","layout","ExpressSubscriptionPlanTerms","YEARLY","valueOf","yearly","MONTHLY","monthly","trial","expressPlan","white","radius","shadow","cursor","xxSmall","textAlign","expressPlanContainer","alignItems","expressPlanSelected","background","extraDark","planBadge","badge","none","minHeight","planBadgeSelected","dark","planBadgeUnselected","planBilling","planFullPrice","textDecoration","planPrice","planRecurrance","planSavings","defaultSelectedPlanId","selectedPlanId","setSelectedPlanId","renderExpressPlanBadge","badgeText","subscription_plan","currentPlan","starts","ExpressTermLengths","YEAR","ad","bestValue","yearlyPricePerMonth","parseFloat","toFixed","badgeStyles","formatPriceDisplay","replace","planIds","next_subscription_plan","planStyles","promo","full_price","recurrence","billing","savings","renderExpressPlan","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_slicedToArray","arr","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","push","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","slice","from","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","emptyFunction","emptyFunctionWithReset","hasOwnProperty","resetWarningCache","propTypes","fn","module","createCommonjsModule","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","factoryWithThrowingShims","isUnknownObject","raw","isEqual","left","right","leftArray","leftPlainObject","leftKeys","rightKeys","keySet","allKeys","l","r","every","usePrevious","ref","validateStripe","createPaymentMethod","confirmCardPayment","parseStripeProp","isPromise","tag","ElementsContext","displayName","Elements","_ref","rawStripeProp","_final","parsed","_React$useState2","ctx","setContext","prevStripe","prevOptions","anyStripe","registerAppInfo","useElementsContextWithUseCase","useCaseMessage","useCase","parseElementsContext","ElementsConsumer","_ref2","useCallbackReference","cb","extractUpdateableOptions","paymentRequest","noop","createElementComponent","type","isServer","str","charAt","toUpperCase","Element","className","_ref$options","_ref$onBlur","_ref$onFocus","_ref$onReady","onReady","_ref$onChange","_ref$onEscape","onEscape","_ref$onClick","elementRef","domNode","callOnReady","callOnBlur","callOnFocus","callOnClick","callOnChange","callOnEscape","useLayoutEffect","create","mount","on","updateableOptions","update","destroy","__elementType","AuBankAccountElement","CardNumberElement","CardExpiryElement","CardCvcElement","FpxBankElement","IbanElement","IdealBankElement","P24BankElement","EpsBankElement","PaymentElement","PaymentRequestButtonElement","AfterpayClearpayMessageElement","defineProperty","factory"],"mappings":"saAUO,MAwCMA,EAAqBC,GAGQC,YAAQ,gBAAiB,CAAEC,KAAMF,EAASG,OAAQ,Q,gCClDrF,MAEMC,EAAiCC,GACrCC,YAHwC,0BAGI,IDIrBD,IAC9BJ,YAAuC,gBAAiB,CACtDM,YAAa,CAAEC,aAAc,eAAgBC,aAAcJ,KCNJK,CAAgBL,I,gCCsBpE,MAAMM,EAAoBC,wBAAsC,IAQ1DC,EAAqB,EAChCC,WACAC,gBACAC,oBACAC,sBAC6B,QAC7B,MAAMC,EAAcC,cACdC,EAAehB,EAA8B,WAC7CiB,EAAK,UAAGD,EAAaE,YAAhB,iBAAG,EAAmBC,oBAAtB,aAAG,EAAiCC,qBAExCC,EAAcC,GAAmBC,sBACjCC,EAAgBC,GAAqBF,sBACrCG,EAAYC,GAAiBJ,oBAAS,GACvCK,EAASC,sBACTC,EAAWC,wBAEXC,EAAef,EAAQA,EAAMgB,KAAKC,GAAKA,EAAEC,KAAOX,QAAkBY,EAGxEC,oBAAU,MACHb,IAAmBR,EAAasB,WAAarB,GAASA,EAAMsB,OAAS,GACxEd,EAAkBR,EAAM,GAAGkB,KAE5B,CAACnB,EAAasB,UAAWb,EAAmBD,EAAgBP,IAE/D,MAAMuB,EAA8BC,sBAAYC,UAC9C,IAAKd,IAAWE,EAGd,OAMF,MAAMa,EAAcb,EAASc,WAAWC,eAExC,IAAKF,EACH,OAIF,MAAM,MAAEG,EAAF,MAASC,SAAgBnB,EAAOoB,YAAYL,GAQlD,GALErB,EADEyB,EACcA,EAAME,aAENb,IAGbW,GAASD,EACZ,IACE,aFhE0BI,EEgEK,CAAEC,OAAQL,EAAMX,GAAI9B,aAAc,WF5DvER,YAAQ,gBAAiB,CAAEC,KAAMoD,EAASnD,OAAQ,UE6D5C,MAAOqD,GACP9B,EAAgB8B,EAAIH,SFlEMC,OEsE7B,CAACpB,EAAUF,EAAQN,IAIhB+B,EAAeZ,sBACnBC,UACEY,EAAMC,iBAEN1C,GAAgB,GAChB,IAAIqC,EAAUlB,EAOd,IAJIN,GAAeM,IACjBkB,QAAgBV,KAGdU,EACF,UACQvC,EAAcuC,GACpBtC,IACA,MAAOmC,GACPjC,EAAY0C,kBDhH2B,2BCiHvC/B,OAAkBW,GAClBd,EAAgByB,EAAME,SANxB,QAQEpC,GAAgB,GAChBc,GAAc,GACdF,EAAkByB,EAAQf,SAG5BtB,GAAgB,IAGpB,CACE2B,EACA3B,EACAD,EACAE,EACAW,EACAH,EACAU,EACArB,EACAe,IAIJ,OACE,YAACnB,EAAkBkD,SAAnB,CACEC,MAAO,CACLhC,aACAT,QACAoC,eACAhC,eACAL,eACAgB,eACAL,gBACAL,kBACAG,qBAVJ,SAaGf,K,4DC1JHiD,EAAS,2BACTC,EAAe,4CACfC,EAA0B,mJA2C1BC,EAAgB,KAChBC,EAAa,SAAoBC,GAEnC,OAAsB,OAAlBF,EACKA,EAGTA,EAAgB,IAAIG,SAAQ,SAAUC,EAASC,GAC7C,GAAsB,oBAAXC,OAWX,GAJIA,OAAOC,QAAUL,GACnBM,QAAQC,KAAKV,GAGXO,OAAOC,OACTH,EAAQE,OAAOC,aAIjB,IACE,IAAIG,EAnEO,WAGf,IAFA,IAAIC,EAAUC,SAASC,iBAAiB,gBAAiBC,OAAOjB,EAAQ,OAE/DkB,EAAI,EAAGA,EAAIJ,EAAQlC,OAAQsC,IAAK,CACvC,IAAIL,EAASC,EAAQI,GAErB,GAAKjB,EAAakB,KAAKN,EAAOO,KAI9B,OAAOP,EAGT,OAAO,KAsDUQ,GAETR,GAAUR,EACZM,QAAQC,KAAKV,GACHW,IACVA,EAxDW,SAAsBR,GACvC,IAAIiB,EAAcjB,IAAWA,EAAOkB,qBAAuB,8BAAgC,GACvFV,EAASE,SAASS,cAAc,UACpCX,EAAOO,IAAM,GAAGH,OAAOjB,GAAQiB,OAAOK,GACtC,IAAIG,EAAaV,SAASW,MAAQX,SAAS5E,KAE3C,IAAKsF,EACH,MAAM,IAAIE,MAAM,+EAIlB,OADAF,EAAWG,YAAYf,GAChBA,EA6CQgB,CAAaxB,IAGxBQ,EAAOiB,iBAAiB,QAAQ,WAC1BrB,OAAOC,OACTH,EAAQE,OAAOC,QAEfF,EAAO,IAAImB,MAAM,+BAGrBd,EAAOiB,iBAAiB,SAAS,WAC/BtB,EAAO,IAAImB,MAAM,gCAEnB,MAAOvC,GAEP,YADAoB,EAAOpB,QAjCPmB,EAAQ,UAuCVwB,EAAa,SAAoBC,EAAaC,EAAMC,GACtD,GAAoB,OAAhBF,EACF,OAAO,KAGT,IAAI/D,EAAS+D,EAAYG,WAAM1D,EAAWwD,GAE1C,OArEoB,SAAyBhE,EAAQiE,GAChDjE,GAAWA,EAAOmE,kBAIvBnE,EAAOmE,iBAAiB,CACtBC,KAAM,YACNC,QAAS,SACTJ,UAAWA,IA4DbK,CAAgBtE,EAAQiE,GACjBjE,GAKLuE,EAAkBlC,QAAQC,UAAUkC,MAAK,WAC3C,OAAOrC,EAAW,SAEhBsC,GAAa,EACjBF,EAAuB,OAAE,SAAU/C,GAC5BiD,GACH/B,QAAQC,KAAKnB,MAGjB,I,4BC7GA,IAAIU,EAAmD,KAwBxCwC,MAlBQ,EAAG5F,eACxB,MACEkB,QAAQ,OAAE2E,GADN,mBAEJC,GACEC,cAGJ,OAAKD,EAAmBE,SAAS,WAAcH,GAI1CzC,IACHA,ED2Fa,WACf,IAAK,IAAI6C,EAAOC,UAAUrE,OAAQqD,EAAO,IAAIiB,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/ElB,EAAKkB,GAAQF,UAAUE,GAGzBT,GAAa,EACb,IAAIR,EAAYkB,KAAKC,MACrB,OAAOb,EAAgBC,MAAK,SAAUT,GACpC,OAAOD,EAAWC,EAAaC,EAAMC,MCnGrBoB,CAAWV,IAGtB,YAAC,WAAD,CAAU3E,OAAQkC,EAAlB,SAAkCpD,KAPhC,0BAAGA,K,4BCfd,MAAMwG,EAAYC,aAAaC,IAAU,CACvCrE,MAAO,CACLsE,YAAaD,EAAOE,MAAMC,GAAGxE,OAE/ByE,aAAc,CACZH,YAAaD,EAAOE,MAAMC,GAAGxE,MAC7B0E,UAAY,WAAUL,EAAOE,MAAMC,GAAGxE,SAExC2E,QAAS,CACPL,YAAaD,EAAOE,MAAMK,MAAMC,QAAQC,QACxCJ,UAAY,WAAUL,EAAOE,MAAMK,MAAMC,QAAQC,UACjDC,aAAc,GAEhBC,cAAe,CACbC,OAAQ,+BACRC,aAAc,MACdC,QAAU,GAAEd,EAAOe,KAAKC,QAAQC,eAmErBC,MA/DI,KACjB,MAAOZ,EAASa,GAAchH,oBAAS,IAEjC,aAAEF,EAAF,gBAAgBC,GAAoBkH,qBAAWjI,IAC9C+B,EAAWmG,GAAgBlH,oBAAS,GAErCmH,EAASxB,IAETyB,EAAYC,kBAAO,GA4BzB,OA1BAvG,oBAAU,IACD,KACLsG,EAAUE,SAAU,GAErB,IAEHxG,oBAAU,MACRK,iBLJ4B9C,YKKpBqE,QAAQ6E,IAAI,ELLQlJ,EKOR,CACduB,aAAc,GACdf,aAAc,eACdC,aAAc,WLNgBR,YAAQ,cAAe,CAAEC,KAAMF,EAASG,OAAQ,UKShFJ,EAAkB,CAAES,aAAc,eAAgBC,aAAc,cAG9DsI,EAAUE,SACZJ,GAAa,GAGjBM,IACC,CAACN,IAEAnG,EACK,YAAC,IAAD,CAAc0G,MAAM,YAAYC,OAAQ,GAAIC,IAAK,CAAEjB,aAAc,KAIxE,mBAAKkB,YAAU,iBAAf,UACE,YAAC,cAAD,CACEC,SAAUC,IAAC,aAAI/H,GAAmBA,EAAe,UAAC+H,EAAEtG,aAAH,aAAC,EAASE,UAC3DqG,QAAS,IAAMf,GAAW,GAC1BgB,OAAQ,IAAMhB,GAAW,GACzBW,IAAK,CACHR,EAAOX,cACP1G,GAAgBqH,EAAO3F,MACvB2E,GAAWgB,EAAOhB,QAClBA,GAAWrG,GAAgBqH,EAAOlB,cAEpCgC,QAAS,CACPC,UAAW,WAGf,YAAC,KAAD,CAAMC,UAAU,IAAIC,QAAQ,UAAUC,MAAI,EAACtC,MAAM,QAAjD,SACGjG,Q,urBCvET,MAAM6F,EAAYC,aAAaC,IAAU,CACvC1F,WAAY,CACVwG,QAAS,GAEX2B,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,MAAO,QAETC,IAAK,CACHC,gBAAkB,GAAE/C,EAAOE,MAAM8C,QAAQC,QACzCP,QAAS,OACTE,eAAgB,gBAChBM,OAAS,GAAElD,EAAOe,KAAKC,QAAQmC,aAC/BrC,QAAU,GAAEd,EAAOe,KAAKC,QAAQmC,aAChCC,YAAc,GAAEpD,EAAOe,KAAKC,QAAQqC,UACpCC,aAAe,GAAEtD,EAAOe,KAAKC,QAAQqC,WAEvCE,cAAe,CACbb,QAAS,OACTC,cAAe,aAiHJa,MA7GW,KACxB,MAAM9J,EAAcC,eAEd,aACJM,EADI,gBAEJC,EAFI,aAGJN,EAHI,aAIJgB,EAJI,kBAKJP,EALI,MAMJR,EANI,WAOJS,EAPI,cAQJC,GACE6G,qBAAWjI,GAETsK,EAAOC,cAEPpC,EAASxB,IAGT6D,EAAatI,sBACjBC,UN1C8BP,MM2C5B,GAAKnB,GAAiBM,GAAoBG,EAI1C,IACEuJ,EAAK7I,UNhDqBA,EMgDU6I,EAAK7I,GN/C/CtC,YAAS,iBAAgBsC,IAAM,CAAErC,KAAM,GAAIC,OAAQ,YMkD7C,MAAMkL,EAAU,EAAH,KACRjK,EAAaE,MACb,CACDC,aAAc,CACZC,oBAAqBH,aAAF,EAAEA,EAAOiK,OAAOhJ,GAAKA,EAAEC,KAAO6I,EAAK7I,OAIxD6I,EAAK7I,MAAOH,aAAZ,EAAYA,EAAcG,KAC5BV,OAAkBW,GAEpBtB,EAAYqK,aL1E6B,0BK0EmBF,GAC5D,MAAO7H,GACP9B,EAAgB8B,EAAIH,WAGxB,CAAChC,EAAOD,EAAcM,EAAiBR,EAAaW,EAAmBO,IAGzE,OAAIhB,WAAcsB,UAEd,YAAC,IAAD,CACE6G,YAAU,8BACVH,MAAM,YACNC,OAAQ,GACRC,IAAK,CAAEjB,aAAc,KAKtBhH,GAAUD,GAAiBM,GAAoBG,GAAsBE,EAItEK,IAAiBN,EAEjB,2BACE,mBAAKwH,IAAKR,EAAOiC,cAAjB,SACG1J,EAAMmK,IAAIJ,GACT,mBAAK9B,IAAKR,EAAOwB,IAAjB,UACE,YAAC,IAAD,CACEmB,SAASrJ,aAAA,EAAAA,EAAcG,MAAO6I,EAAK7I,GACnCiH,SAAU,IAAM3H,EAAkBuJ,EAAK7I,IACvC6D,KAAMgF,EAAK7H,QAAU,GACrB+F,IAAKR,EAAOmB,MAJd,SAMGmB,EAAKM,UACJN,EAAKO,kBACLC,YAAYX,EAAKY,WAAY,CAC3BC,SAAUV,EAAKM,SACfK,WAAYX,EAAKO,qBAIvB,YAAC,IAAD,CAAQ5B,QAAQ,OAAOrC,MAAM,YAAYsE,QAAS,IAAMb,EAAWC,GAAnE,SACGH,EAAKgB,WAhBiBb,EAAK7H,WAqBpC,YAAC,IAAD,CACE+F,IAAKR,EAAOhH,WACZiI,QAAQ,OACRiC,QAAS,KACPjK,GAAc,GACdL,OAAgBc,IALpB,SAQGyI,EAAKnJ,aAER,YAAC,KAAD,CAAMgI,UAAU,IAAIC,QAAQ,UAAUC,MAAI,EAACtC,MAAM,QAAjD,SACGjG,OAMF,YAAC,EAAD,IA9CE,M,wDCnFIyK,MAFOC,IAAMvL,cAAkC,ICD9D,MAAM0G,EAAYC,aAAaC,IAAU,CACvC4E,iBAAkB,CAChB,eAAgB,CACd1E,MAAQ,GAAEF,EAAOE,MAAMK,MAAMC,QAAQC,WAEvCoE,cAAgB,GAAE7E,EAAOe,KAAKC,QAAQ8D,WAExCC,YAAa,CACXrC,QAAS,OACTC,cAAe,SACfqC,UAAY,GAAEhF,EAAOe,KAAKC,QAAQiE,YAEpCC,QAAS,CACPC,WAAYnF,EAAOoF,KAAKC,OAAO7C,MAEjC8C,KAAM,CACJ5C,QAAS,QACTQ,OAAQ,OACRpC,QAAU,GAAEd,EAAOe,KAAKC,QAAQqC,WAElCkC,cAAe,CACbP,UAAY,GAAEhF,EAAOe,KAAKC,QAAQwE,gBA0EvBC,MAtEY,KACzB,MAAMhC,EAAOC,eACP,UAAEgC,GAAcrG,eAChB,SAAEsG,EAAF,aAAYC,GAAiBxE,qBAAWsD,IACxC,aAAEzI,GAAiBmF,qBAAWjI,GAE9BmI,EAASxB,IAET+F,EAAmBC,cAEnBC,EAAwBC,kBAAQ,IACpBC,YACdJ,EACApC,EAAKiC,UAAUQ,gBAAgBC,qBAEf1C,EAAKiC,UAAUQ,gBAAgBE,WAChD,CAACP,EAAkBpC,EAAKiC,UAAUQ,kBAE/BG,EAAuBL,kBAAQ,IACnBC,YACdJ,EACApC,EAAKiC,UAAUQ,gBAAgBI,2BAEf7C,EAAKiC,UAAUQ,gBAAgBtB,iBAChD,CAACiB,EAAkBpC,EAAKiC,UAAUQ,kBAErC,OACE,2BACE,YAAC,KAAD,CAAMpE,IAAKR,EAAO4D,QAAS5C,UAAU,KAAKC,QAAQ,SAASC,MAAI,EAAC+D,MAAM,SAAtE,SACGnC,YAAYX,EAAKiC,UAAUQ,gBAAgBM,QAAQC,MAAO,CACzD7H,KAAM8G,EAAU9G,SAIpB,YAAC8H,EAAA,EAAD,CAAY5E,IAAKR,EAAOgE,KAAM3H,IAAK+H,EAAUQ,gBAAgBS,gBAAiBC,IAAI,KAElF,YAAC,KAAD,CAAM9E,IAAKR,EAAOiE,cAAejD,UAAU,IAAIC,QAAQ,QAAQC,MAAI,EAAC+D,MAAM,SAA1E,SACG9C,EAAKiC,UAAUQ,gBAAgBX,gBAGlC,YAAC,KAAD,CAAMzD,IAAKR,EAAOsD,iBAAkBtC,UAAU,MAAMC,QAAQ,QAAQgE,MAAM,SAA1E,SACE,iBAEEM,wBAAyB,CACvBC,OAAQ1C,YAAYiC,EAAsB,CACxCU,SAAUrB,EAAUsB,mBAAmBC,WAM/C,YAAC,EAAD,IAEA,mBAAKnF,IAAKR,EAAOyD,YAAjB,UACE,YAAC,IAAD,CACExC,QAAQ,SACRiC,QAASvI,EACTiL,SAAUtB,EACVuB,QAASvB,EAJX,SAMGG,IAEH,YAAC,IAAD,CAAQxD,QAAQ,OAAOiC,QAAS,IAAMmB,IAAYuB,SAAUtB,EAA5D,SACGnC,EAAKiC,UAAUQ,gBAAgBkB,qB,iECE3BC,MA3FY,KACzB,MAAM5D,EAAOC,cACP4D,EAASjI,eACT,UAAEqG,GAAc4B,GAChB,SAAE3B,EAAF,KAAY4B,EAAZ,aAAkB3B,GAAiBxE,qBAAWsD,IAC9C,aAAEzI,GAAiBmF,qBAAWjI,GA8B9BmI,EA5BYvB,aAAaC,IAAU,CACvC+E,YAAa,CACXrC,QAAS,OACTC,cAAe,SACfqC,UAAY,GAAEhF,EAAOe,KAAKC,QAAQwG,YAEpCtC,QAAS,CACPC,WAAYnF,EAAOoF,KAAKC,OAAO7C,MAEjCiF,uBAAwB,CACtB1E,gBAAiB2C,EAAUgC,OAAOC,MAClCjF,QAAS,OACTE,eAAgB,gBAChBgF,aAAe,GAAE5H,EAAOe,KAAKC,QAAQwG,WACrC1G,QAAU,GAAEd,EAAOe,KAAKC,QAAQ8D,WAElC+C,kBAAmB,CACjBnF,QAAS,OACTC,cAAe,SACfC,eAAgB,UAElBkF,MAAO,CACL,eAAgB,CACd5H,MAAQ,GAAEF,EAAOE,MAAMK,MAAMC,QAAQC,cAK5BX,GAEf,OAAKyH,EAGH,2BACE,YAAC,KAAD,CAAMzF,IAAKR,EAAO4D,QAAS5C,UAAU,KAAKC,QAAQ,SAASC,MAAI,EAAC+D,MAAM,SAAtE,SACG9C,EAAKiC,UAAUQ,gBAAgBM,QAAQuB,UAE1C,mBAAKjG,IAAKR,EAAOmG,uBAAjB,UACE,6BACE,YAAC,KAAD,CAAMnF,UAAU,MAAMC,QAAQ,UAAUC,MAAI,EAAC+D,MAAM,OAAnD,SACGb,EAAU9G,OAEb,YAAC,KAAD,CAAM0D,UAAU,MAAMC,QAAQ,UAAUgE,MAAM,OAA9C,SACGyB,YAA+BV,EAAQC,GAAMU,WAEhD,YAAC,KAAD,CAAM3F,UAAU,MAAMC,QAAQ,UAAUgE,MAAM,OAA9C,SACGnC,YAAYX,EAAKiC,UAAUQ,gBAAgBgC,SAAU,CACpDC,KAAMC,MAAQC,OAAO,wBAI3B,YAAC,KAAD,CAAMvG,IAAKR,EAAOuG,kBAAmBvF,UAAU,MAAMC,QAAQ,KAAKC,MAAI,EAAC+D,MAAM,OAA7E,UACGe,EAAOgB,eACPf,EAAKgB,YAGV,YAAC,EAAD,IACA,mBAAKzG,IAAKR,EAAOyD,YAAjB,UACE,YAAC,IAAD,CACExC,QAAQ,SACRiC,QAASvI,EACTiL,SAAUtB,EACVuB,QAASvB,EAJX,SAMGnC,EAAKiC,UAAUQ,gBAAgBsC,qBAElC,YAAC,IAAD,CAAQjG,QAAQ,OAAOiC,QAAS,IAAMmB,IAAtC,SACGlC,EAAKgF,YAGV,YAAC,KAAD,CAAM3G,IAAKR,EAAOwG,MAAOxF,UAAU,MAAMC,QAAQ,UAAUgE,MAAM,OAAjE,SACE,iBAEEM,wBAAyB,CACvBC,OAAQ1C,YAAYX,EAAKiC,UAAUQ,gBAAgB4B,MAAO,CACxDf,SAAUrB,EAAUsB,mBAAmBC,cA7CjC,MCtCpB,MAAMnH,EAAYC,aAAaC,IAAU,CACvCkF,QAAS,CACPC,WAAYnF,EAAOoF,KAAKC,OAAO7C,MAEjCkG,YAAa,CACXhG,QAAS,QACTQ,OAAQ,OACRL,MAAO,SAET8F,mBAAoB,CAClBC,SAAU,OACV5D,UAAY,GAAEhF,EAAOe,KAAKC,QAAQ8D,cAiEvB+D,MA7DY,KAAM,QAC/B,MAAMpF,EAAOC,eACP,UAAEgC,GAAcrG,eAChB,YAAEyJ,EAAF,UAAeC,EAAf,UAA0BC,GAAc5H,qBAAWsD,GACnDuE,EAAsBC,cAEtB5H,EAASxB,IAETqJ,GAAUH,GAAoBF,EAEpC,OACE,2BACE,YAAC,KAAD,CAAMhH,IAAKR,EAAO4D,QAAS5C,UAAU,KAAKC,QAAQ,SAASC,MAAI,EAAC+D,MAAM,SAAtE,SACGnC,YACC+E,EACI1F,EAAKiC,UAAUQ,gBAAgBM,QAAQ4C,QACvC3F,EAAKiC,UAAUQ,gBAAgBM,QAAQ6C,OAC3C,CACEzK,KAAM8G,EAAU9G,SAKtB,YAAC8H,EAAA,EAAD,CAAY5E,IAAKR,EAAOoH,YAAa/K,IAAK+H,EAAUQ,gBAAgBoD,aAAc1C,IAAI,KAEtF,YAAC,KAAD,CAAM9E,IAAKR,EAAOqH,mBAAoBrG,UAAU,IAAIC,QAAQ,KAAKgE,MAAM,SAAvE,SACGnC,YAAYX,EAAKiC,UAAUQ,gBAAgByC,mBAAoB,CAAE/J,KAAM8G,EAAU9G,SAGnFuK,IACCF,SADM,UACNA,EAAqBM,oBADf,aACN,EAAmCC,YACnCP,SAFD,UAECA,EAAqBM,oBAFtB,aAEC,EAAmCE,mBACjC,6BACE,YAAC,KAAD,CAAMnH,UAAU,MAAMC,QAAQ,UAAUgE,MAAM,SAA9C,SACE,iBACExE,YAAU,qCAEV8E,wBAAyB,CACvBC,OAAQ1C,YAAYX,EAAKiC,UAAUQ,gBAAgBwD,SAAU,CAC3DvB,KAAMC,IAAMa,EAAoBM,aAAaC,UAAUnB,OAAO,uBAKtE,YAAC,KAAD,CAAM/F,UAAU,IAAIC,QAAQ,UAAUgE,MAAM,SAA5C,SACGnC,YAAYX,EAAKiC,UAAUQ,gBAAgByD,SAAU,CACpDxB,KAAMC,IAAMa,EAAoBM,aAAaE,kBAAkBpB,OAC7D,uBAOZ,YAAC,IAAD,CAAQ9F,QAAQ,SAASqH,WAAS,EAACpF,QAAS,IAAMuE,IAAlD,SACGtF,EAAKiC,UAAUQ,gBAAgB2D,oB,4BCrExC,MAAM/J,EAAYC,aAAaC,IAAU,CACvC+E,YAAa,CACXrC,QAAS,OACTC,cAAe,SACfqC,UAAY,GAAEhF,EAAOe,KAAKC,QAAQwG,YAEpCtC,QAAS,CACPC,WAAYnF,EAAOoF,KAAKC,OAAO7C,MAEjCsH,oBAAqB,GACrBC,MAAO,CACLjJ,QAAU,GAAEd,EAAOe,KAAKC,QAAQC,YAElC4G,kBAAmB,CACjBnF,QAAS,OACTC,cAAe,SACfC,eAAgB,aA4DLyE,MAxDY,KACzB,MAAM5D,EAAOC,cACP4D,EAASjI,eACT,SAAEsG,EAAF,aAAYqE,EAAZ,aAA0BpE,GAAiBxE,qBAAWsD,IACtD,MAAEuF,EAAF,IAAShD,GAAQK,EAAO5B,UAAUsB,oBAClC,aAAE/K,GAAiBmF,qBAAWjI,GAE9B+Q,EAAQC,cAER7I,EAASxB,IAEf,OAAKoK,GAAUF,EAGb,2BACE,YAAC,KAAD,CAAMlI,IAAKR,EAAO4D,QAAS5C,UAAU,KAAKC,QAAQ,SAASC,MAAI,EAAC+D,MAAM,SAAtE,SACG9C,EAAKiC,UAAUQ,gBAAgBM,QAAQ4D,aAG1C,YAAC,KAAD,CAAMtI,IAAKR,EAAOwI,oBAAqBxH,UAAU,IAAIC,QAAQ,KAAKgE,MAAM,SAAxE,SACG9C,EAAKiC,UAAUQ,gBAAgB4D,sBAGlC,YAACO,EAAA,QAAD,CAGEH,MAAOA,EAAMpG,OAAOyD,GAAQA,EAAK+C,aACjCC,aAAcC,GAAUR,EAAaQ,KAGvC,mBAAK1I,IAAKR,EAAOyI,QAEjB,YAAC,EAAD,IAEA,mBAAKjI,IAAKR,EAAOyD,YAAjB,UACE,YAAC,IAAD,CACExC,QAAQ,SACRiC,QAASvI,EACTiL,SAAUtB,EACVuB,QAASvB,EAJX,SAMGnC,EAAKiC,UAAUQ,gBAAgBsC,qBAElC,YAAC,IAAD,CAAQjG,QAAQ,OAAOiC,QAAS,IAAMmB,IAAtC,SACGlC,EAAKiC,UAAUQ,gBAAgBuE,cAGpC,YAAC,KAAD,CAAMnI,UAAU,IAAIC,QAAQ,UAAUgE,MAAM,SAA5C,SACGnC,YAAYX,EAAKiC,UAAUQ,gBAAgBwE,YAAa,CACvD1D,mBAAqB,YAAWC,sBAAwBgD,eAtC5B,MCzC/B,IAAKU,G,SAAAA,K,gBAAAA,E,4BAAAA,E,2BAAAA,M,KC0BZ,MAAM7K,GAAYC,aAAaC,IAAU,CACvC4K,aAAc,CACZ/F,cAAgB,GAAE7E,EAAOe,KAAKC,QAAQwE,YACtCqF,WAAa,GAAE7K,EAAOe,KAAKC,QAAQwE,aAErCsF,qBAAsB,CACpBjJ,OAAQ,QAEVkJ,aAAc,CACZjK,QAAU,GAAEd,EAAOe,KAAKC,QAAQwE,aAElCwF,mBAAoB,CAClBnJ,OAAS,eAA4C,EAA9B7B,EAAOe,KAAKC,QAAQwE,aAC3CyF,SAAU,OACVnK,QAAU,GAAEd,EAAOe,KAAKC,QAAQwE,gBA4HrB0F,OAlHaC,IAC1B,MAAM,SAAExF,EAAF,OAAY6E,EAAZ,UAAoBzB,GAAcoC,EAClCC,EAAWC,eACVC,EAAYC,GAAiBpR,mBAASwQ,EAAWa,SACjD5F,EAAcnM,GAAmBU,oBAAS,IAI1C6O,EAAWgB,GAAgB7P,qBAE5BmH,EAASxB,GAAUqL,GACnBlC,EAAsBC,cACtBuC,EAAgBtB,cAEhB5C,EAAOkE,GAAiBA,EAAc5Q,KAAK6Q,GAAKlB,IAAWkB,EAAE3Q,IAE7D+N,IAAcvB,GAAOoE,YAAepE,GAE1C,IAAIqE,EAAU,KAEd,OAAQN,GACN,KAAKX,EAAWa,OAMZI,EAHGrE,EAEM0B,WAAqB4C,mBACpB,YAACC,EAAD,IAEA,YAAC,EAAD,IAJA,YAACC,EAAD,IAMZ,MACF,KAAKpB,EAAWqB,aACdJ,EAAU,YAAC,EAAD,IACV,MACF,KAAKjB,EAAWsB,YACdL,EAAU,YAACG,EAAD,IAId,MAAMxS,EAAgB8B,sBACpBC,UACE,IAAKiM,IAASzL,EAAQC,SAAWD,EAAQoQ,aACvC,MAAMhO,MAAM,iCAEd,IACE,MAAMiO,QAAeC,IAAMC,SACzBC,YAAmB,CACjBvQ,OAAQD,EAAQC,OAChBmQ,aAAcpQ,EAAQoQ,aACtBK,qBAAsBvD,GAAazB,EAAKxM,MAG5CyR,YAAaL,GACb,MAAOxQ,GACP,MAAmB,OAAfA,EAAM8Q,MAAgC,QAAf9Q,EAAM8Q,MAC/BlB,EAAcZ,EAAWsB,aACnB,IAAI/N,MAAM,KAEVvC,IAIZ,CAAC4P,EAAevC,EAAWzB,IAK7B,OACE,0BACE,YAAC,IAAD,CAAgBzF,IAAKsJ,GAAY9J,EAAOwJ,qBAAsB4B,gBAAiBtB,EAA/E,UACGA,GACC,YAAC,IAAD,CAAatJ,IAAKR,EAAOsJ,aAAzB,SACE,YAAC,IAAD,CAAsB+B,SAAS,OAA/B,SACE,YAAC,IAAD,CAAcnI,QAASmB,SAI3ByF,GACA,YAAC,IAAD,UACE,YAAC,IAAD,CAAc5G,QAASmB,MAG3B,YAAC,IAAD,CACE7D,IAAKsJ,EAAW9J,EAAO0J,mBAAqB1J,EAAOyJ,aACnD6B,OAAO,SAFT,SAIE,YAAC,EAAD,UACE,YAAC,EAAcvQ,SAAf,CACEC,MAAO,CACLsJ,eACAkD,cACAE,YACArD,WACAoD,YACAxB,OACAyC,gBARJ,SAWE,YAAC3Q,EAAD,CACEE,cAAeA,EACfC,kBAnCY,IAAM+R,EAAcZ,EAAWqB,cAoC3CvS,gBAAiBA,EAHnB,SAKGmS,iB,kDC1JjB,oGAGO,MAAM5D,EAAiC,CAC5CV,EACAC,IAEIA,EAAK+C,cAAgBuC,IAA6BC,OAAOC,UACpDzF,EAAO5B,UAAUwE,MAAM8C,OAC5BzF,EAAK+C,cAAgBuC,IAA6BI,QAAQF,UACrDzF,EAAO5B,UAAUwE,MAAMgD,QACzB5F,EAAO5B,UAAUwE,MAAMiD,MAGnBxB,EAAkBpE,GACzBA,EAAK+C,cAAgBuC,IAA6BC,OAAOC,WACzDxF,EAAK+C,cAAgBuC,IAA6BI,QAAQF,W,69BCgLjD1C,UAjLOc,IACpB,MAAM1H,EAAOC,cACP4D,EAASjI,cA6DTiC,EA3DYvB,aAAaC,IAAU,CACvCoN,YAAa,CACX,2BAA4B,CAC1BvK,MAAO,SAET,2BAA4B,CAC1BA,MAAO,SAETjC,OAAS,GAAEZ,EAAOY,OAAOiC,MAAMpC,mBAAmBT,EAAOE,MAAM8C,QAAQqK,QACvExM,aAAe,GAAEb,EAAOY,OAAO0M,OAAO7M,YACtCJ,UAAY,mBAAkBiH,EAAO5B,UAAUgC,OAAO6F,SACtDC,OAAQ,UACRtK,OAAS,GAAElD,EAAOe,KAAKC,QAAQiE,YAAYjF,EAAOe,KAAKC,QAAQyM,YAC/D3M,QAAU,GAAEd,EAAOe,KAAKC,QAAQiE,YAAYjF,EAAOe,KAAKC,QAAQyM,YAChEC,UAAW,UAEbC,qBAAsB,CACpBC,WAAY,SACZlL,QAAS,OACTE,eAAgB,UAElBiL,oBAAqB,CACnBC,WAAYxG,EAAO5B,UAAUgC,OAAOC,MACpC/G,OAAS,GAAEZ,EAAOY,OAAOiC,MAAMpC,mBAAmB6G,EAAO5B,UAAUgC,OAAOqG,aAE5EC,UAAW,CACTnN,aAAe,GAAEb,EAAOY,OAAO0M,OAAOxI,UACtC8D,SAAW,GAAE5I,EAAOe,KAAKqE,KAAK6I,UAC9B9I,WAAY,OACZjC,OAAS,GAAElD,EAAOe,KAAKC,QAAQyM,aAAazN,EAAOe,KAAKC,QAAQkN,SAChEC,UAAY,GAAEnO,EAAOe,KAAKC,QAAQiE,YAClCnE,QAAU,GAAEd,EAAOe,KAAKC,QAAQmC,cAAcnD,EAAOe,KAAKC,QAAQyM,aAGpEW,kBAAmB,CACjBN,WAAYxG,EAAO5B,UAAUgC,OAAO2G,MAEtCC,oBAAqB,CACnBR,WAAY9N,EAAOE,MAAM8C,QAAQC,OAEnCsL,YAAa,CACX3F,SAAW,GAAE5I,EAAOe,KAAKqE,KAAK6I,WAEhCO,cAAe,CACb5F,SAAW,GAAE5I,EAAOe,KAAKqE,KAAK1M,SAC9ByM,WAAY,UACZsJ,eAAgB,gBAElBC,UAAW,CACT9G,aAAc,SAEhB+G,eAAgB,CACd/G,aAAe,GAAE5H,EAAOe,KAAKC,QAAQiE,YAEvC2J,YAAa,CACXhG,SAAW,GAAE5I,EAAOe,KAAKqE,KAAK6I,UAC9BE,UAAY,GAAEnO,EAAOe,KAAKC,QAAQqC,aAGvBvD,CAAUqL,IAEnB,MAAEjB,EAAF,oBAASjB,EAAT,sBAA8B4F,EAA9B,aAAqDtE,GAAiBY,GAGrE2D,EAAgBC,GAAqB5U,mBAAS,GAKrDc,oBAAU,KACRsP,EAAauE,IACZ,CAACA,EAAgBvE,IAGpB,MAAMyE,EAA0BzH,IAC9B,IAAI0H,EAAY,GACZhG,GAAuB1B,EAAKxM,KAAOkO,EAAoBiG,kBAAkBnU,GAC3EkU,EAAYxL,EAAKiC,UAAUyJ,YAClBlG,GAAuB1B,EAAKxM,KAAO+T,GAAkB7F,EAAoBO,SAClFyF,EAAa,GAAExL,EAAKiC,UAAU0J,UAAUhH,IAAMa,EAAoBO,UAAUnB,OAC1E,cAEQY,GAAuB1B,EAAK+C,cAAgB+E,IAAmBC,OACzEL,EAAY7K,YAAYkD,EAAO5B,UAAU6J,GAAGC,UAAW,CACrDC,qBAAsBC,WAAWnI,EAAKgB,OAAS,IAAIoH,QAAQ,MAI/D,IAAIC,EAAc,GASlB,OAPEA,EADuB,IAArBX,EAAU9T,OACEmG,EAAO0M,UACZzG,EAAKxM,KAAO+T,EACP,EAAH,KAAQxN,EAAO0M,WAAc1M,EAAO8M,mBAEjC,EAAH,KAAQ9M,EAAO0M,WAAc1M,EAAOgN,qBAI/C,oBAAMvM,YAAY,yBAAwBwF,EAAKxM,WAAY+G,IAAK8N,EAAhE,SACGX,KAKDY,EAAsBtH,GACnBA,EAAMuH,QAAQ,QAAS,IAkDhC,GAAuB,IAAnBhB,EAAsB,CACxB,MAAMiB,EAAU7F,EAAMlG,IAAIuD,GAAQA,EAAKxM,IACnC8T,GAAyBkB,EAAQzQ,SAASuP,GAC5CE,EAAkBF,GAElB5F,GACA8G,EAAQzQ,SAAS2J,EAAoB+G,uBAAuBjV,IAE5DgU,EAAkB9F,EAAoB+G,uBAAuBjV,IAE7DgU,EAAkBgB,EAAQ,IAK9B,OAAO,mBAAKjO,IAAKR,EAAOqM,qBAAjB,SAAwCzD,EAAMlG,IAAIuD,GA7D9BA,KACzB,IAAI0I,EAAa3O,EAAO8L,YAKxB,OAJI7F,EAAKxM,KAAO+T,IACdmB,EAAa,EAAH,KAAQ3O,EAAO8L,aAAgB9L,EAAOuM,sBAIhD,sBAEE9L,YAAY,yBAAwBwF,EAAKxM,KACzC+G,IAAKmO,EACLzL,QAAS,KACPuK,EAAkBxH,EAAKxM,KAL3B,UAQE,YAAC,KAAD,CAAMyH,MAAI,EAACD,QAAQ,QAAnB,SACGyF,YAA+BV,EAAQC,GAAM3I,OAE/CoQ,EAAuBzH,GACxB,YAAC,KAAD,CAAMzF,IAAKR,EAAOoN,UAAWlM,MAAI,EAACD,QAAQ,SAA1C,UACG+E,EAAOgB,eACPuH,EAAmBtI,EAAKgB,OAAS,IACjChB,EAAK2I,OACJ,oBAAMpO,IAAKR,EAAOkN,cAAlB,UACGlH,EAAOgB,eACPuH,EAAmBtI,EAAK4I,YAAc,UAI7C,YAAC,KAAD,CAAMrO,IAAKR,EAAOqN,eAAgBnM,MAAI,EAACD,QAAQ,OAA/C,SACGyF,YAA+BV,EAAQC,GAAM6I,aAEhD,YAAC,KAAD,CAAMtO,IAAKR,EAAOiN,YAAa/L,MAAI,EAAnC,SACGwF,YAA+BV,EAAQC,GAAM8I,UAEhD,YAAC,KAAD,CAAMvO,IAAKR,EAAOsN,YAAlB,UACIrH,EAAK2I,OAASlI,YAA+BV,EAAQC,GAAM+I,SAE3D,kCAAQtI,YAA+BV,EAAQC,GAAM+I,QAArD,WA9BE,yBAAwB/I,EAAKxM,OAqDwBwV,CAAkBhJ,Q,sCCzL7E,SAAWiJ,EAAS7L,GAAS,aAInC,SAAS8L,EAAQC,GAaf,OATED,EADoB,mBAAXE,QAAoD,iBAApBA,OAAOC,SACtC,SAAUF,GAClB,cAAcA,GAGN,SAAUA,GAClB,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAI9GA,GAkBjB,SAASK,EAAyBC,EAAQC,GACxC,GAAc,MAAVD,EAAgB,MAAO,GAE3B,IAEIE,EAAKzT,EAFL0T,EAlBN,SAAuCH,EAAQC,GAC7C,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKzT,EAFL0T,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKvT,EAAI,EAAGA,EAAI2T,EAAWjW,OAAQsC,IACjCyT,EAAME,EAAW3T,GACbwT,EAASM,QAAQL,IAAQ,IAC7BC,EAAOD,GAAOF,EAAOE,IAGvB,OAAOC,EAMMK,CAA8BR,EAAQC,GAInD,GAAII,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBT,GAEpD,IAAKvT,EAAI,EAAGA,EAAIiU,EAAiBvW,OAAQsC,IACvCyT,EAAMQ,EAAiBjU,GACnBwT,EAASM,QAAQL,IAAQ,GACxBG,OAAOP,UAAUa,qBAAqBC,KAAKZ,EAAQE,KACxDC,EAAOD,GAAOF,EAAOE,IAIzB,OAAOC,EAGT,SAASU,EAAeC,EAAKrU,GAC3B,OAGF,SAAyBqU,GACvB,GAAIrS,MAAMsS,QAAQD,GAAM,OAAOA,EAJxBE,CAAgBF,IAOzB,SAA+BA,EAAKrU,GAClC,GAAsB,oBAAXkT,QAA4BA,OAAOC,YAAYS,OAAOS,GAAjE,CACA,IAAIG,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKpX,EAET,IACE,IAAK,IAAiCqX,EAA7BC,EAAKR,EAAInB,OAAOC,cAAmBsB,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAKQ,KAAKJ,EAAG/V,QAETmB,GAAKwU,EAAK9W,SAAWsC,GAH8CyU,GAAK,IAK9E,MAAOlW,GACPmW,GAAK,EACLC,EAAKpW,EACL,QACA,IACOkW,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GA/BwBS,CAAsBZ,EAAKrU,IAkC5D,SAAqCkV,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOE,EAAkBF,EAAGC,GACvD,IAAIE,EAAIzB,OAAOP,UAAUiC,SAASnB,KAAKe,GAAGK,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBH,EAAE9B,cAAaiC,EAAIH,EAAE9B,YAAYjS,MAC7C,QAANkU,GAAqB,QAANA,EAAoBrT,MAAMwT,KAAKN,GACxC,cAANG,GAAqB,2CAA2CpV,KAAKoV,GAAWD,EAAkBF,EAAGC,QAAzG,GAxCgEM,CAA4BpB,EAAKrU,IAmDnG,WACE,MAAM,IAAI0V,UAAU,6IApDmFC,GA2CzG,SAASP,EAAkBf,EAAKuB,IACnB,MAAPA,GAAeA,EAAMvB,EAAI3W,UAAQkY,EAAMvB,EAAI3W,QAE/C,IAAK,IAAIsC,EAAI,EAAG6V,EAAO,IAAI7T,MAAM4T,GAAM5V,EAAI4V,EAAK5V,IAAK6V,EAAK7V,GAAKqU,EAAIrU,GAEnE,OAAO6V,EAqBT,SAASC,KAET,SAASC,KA9HT7O,EAAQA,GAAS0M,OAAOP,UAAU2C,eAAe7B,KAAKjN,EAAO,WAAaA,EAAe,QAAIA,EAgI7F6O,EAAuBE,kBAAoBH,EAE3C,IA4CII,EAhEJ,SAA8BC,EAAIC,GACjC,OAAiCD,EAA1BC,EAAS,CAAErD,QAAS,IAAiBqD,EAAOrD,SAAUqD,EAAOrD,QA+DrDsD,EAAqB,SAAUD,GAU7CA,EAAOrD,QAtDsB,WAC7B,SAASuD,EAAK5I,EAAO6I,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAXuB,iDAWnBA,EAAJ,CAKA,IAAIpY,EAAM,IAAIkC,MAAM,mLAEpB,MADAlC,EAAI4C,KAAO,sBACL5C,GAIR,SAASqY,IACP,OAAON,EAHTA,EAAKO,WAAaP,EAOlB,IAAIQ,EAAiB,CACnBC,MAAOT,EACPU,KAAMV,EACNW,KAAMX,EACNY,OAAQZ,EACRa,OAAQb,EACRc,OAAQd,EACRe,OAAQf,EACRgB,IAAKhB,EACLiB,QAASX,EACTY,QAASlB,EACTmB,YAAanB,EACboB,WAAYd,EACZe,KAAMrB,EACNsB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXzS,MAAOyS,EACPmB,MAAOnB,EACPoB,eAAgBjC,EAChBE,kBAAmBH,GAGrB,OADAgB,EAAemB,UAAYnB,EACpBA,EAaUoB,MAIfC,EAAkB,SAAyBC,GAC7C,OAAe,OAARA,GAAiC,WAAjBpF,EAAQoF,IAa7BC,EAAU,SAASA,EAAQC,EAAMC,GACnC,IAAKJ,EAAgBG,KAAUH,EAAgBI,GAC7C,OAAOD,IAASC,EAGlB,IAAIC,EAAYxW,MAAMsS,QAAQgE,GAE9B,GAAIE,IADaxW,MAAMsS,QAAQiE,GACD,OAAO,EACrC,IAAIE,EATiB,oBASC7E,OAAOP,UAAUiC,SAASnB,KAAKmE,GAErD,GAAIG,KAXiB,oBAUE7E,OAAOP,UAAUiC,SAASnB,KAAKoE,IACZ,OAAO,EACjD,IAAKE,IAAoBD,EAAW,OAAO,EAC3C,IAAIE,EAAW9E,OAAOC,KAAKyE,GACvBK,EAAY/E,OAAOC,KAAK0E,GAC5B,GAAIG,EAAShb,SAAWib,EAAUjb,OAAQ,OAAO,EAGjD,IAFA,IAAIkb,EAAS,GAEJ5Y,EAAI,EAAGA,EAAI0Y,EAAShb,OAAQsC,GAAK,EACxC4Y,EAAOF,EAAS1Y,KAAM,EAGxB,IAAK,IAAI6U,EAAK,EAAGA,EAAK8D,EAAUjb,OAAQmX,GAAM,EAC5C+D,EAAOD,EAAU9D,KAAO,EAG1B,IAAIgE,EAAUjF,OAAOC,KAAK+E,GAE1B,GAAIC,EAAQnb,SAAWgb,EAAShb,OAC9B,OAAO,EAGT,IAAIob,EAAIR,EACJS,EAAIR,EAMR,OAAOM,EAAQG,OAJJ,SAAcvF,GACvB,OAAO4E,EAAQS,EAAErF,GAAMsF,EAAEtF,QAMzBwF,EAAc,SAAqBpa,GACrC,IAAIqa,EAAMhS,EAAMnD,OAAOlF,GAIvB,OAHAqI,EAAM1J,WAAU,WACd0b,EAAIlV,QAAUnF,IACb,CAACA,IACGqa,EAAIlV,SAOTmV,EAAiB,SAAwBrY,GAC3C,GAAoB,OAAhBA,GA1DGqX,EADwBC,EA2DMtX,IA1DkB,mBAAjBsX,EAAInb,UAAsD,mBAApBmb,EAAIja,aAAiE,mBAA5Bia,EAAIgB,qBAAwE,mBAA3BhB,EAAIiB,mBA2DxK,OAAOvY,EA5DI,IAAkBsX,EA+D/B,MAAM,IAAI3X,MATe,uMAYvB6Y,EAAkB,SAAyBlB,GAC7C,GAzEc,SAAmBA,GACjC,OAAOD,EAAgBC,IAA4B,mBAAbA,EAAI7W,KAwEtCgY,CAAUnB,GACZ,MAAO,CACLoB,IAAK,QACLva,cAAeG,QAAQC,QAAQ+Y,GAAK7W,KAAK4X,IAI7C,IAAIpc,EAASoc,EAAef,GAE5B,OAAe,OAAXrb,EACK,CACLyc,IAAK,SAIF,CACLA,IAAK,OACLzc,OAAQA,IAIR0c,EAA+BvS,EAAMvL,cAAc,MACvD8d,EAAgBC,YAAc,kBAC9B,IAkBIC,EAAW,SAAkBC,GAC/B,IAAIC,EAAgBD,EAAK7c,OACrB4H,EAAUiV,EAAKjV,QACf9I,EAAW+d,EAAK/d,SAEhBie,EAAS5S,EAAMnD,QAAO,GAEtBD,EAAYoD,EAAMnD,QAAO,GACzBgW,EAAS7S,EAAMqB,SAAQ,WACzB,OAAO+Q,EAAgBO,KACtB,CAACA,IAQAG,EAAmB5F,EANDlN,EAAMxK,UAAS,WACnC,MAAO,CACLK,OAAQ,KACRE,SAAU,SAGyC,GACnDgd,EAAMD,EAAiB,GACvBE,EAAaF,EAAiB,GAE9BG,EAAalB,EAAYY,GACzBO,EAAcnB,EAAYtU,GA4D9B,OA1DmB,OAAfwV,IACEA,IAAeN,GACjBpa,QAAQC,KAAK,8FAGV2Y,EAAQ1T,EAASyV,IACpB3a,QAAQC,KAAK,+GAIZoa,EAAO9V,UACS,SAAf+V,EAAOP,MACTM,EAAO9V,SAAU,EACjBkW,EAAW,CACTnd,OAAQgd,EAAOhd,OACfE,SAAU8c,EAAOhd,OAAOE,SAAS0H,MAIlB,UAAfoV,EAAOP,MACTM,EAAO9V,SAAU,EACjB+V,EAAO9a,cAAcsC,MAAK,SAAUxE,GAC9BA,GAAU+G,EAAUE,SAItBkW,EAAW,CACTnd,OAAQA,EACRE,SAAUF,EAAOE,SAAS0H,UAOpCuC,EAAM1J,WAAU,WACd,OAAO,WACLsG,EAAUE,SAAU,KAErB,IACHkD,EAAM1J,WAAU,WACd,IAAI6c,EAAYJ,EAAIld,OAEfsd,GAAcA,EAAUnZ,kBAAqBmZ,EAAUC,kBAI5DD,EAAUnZ,iBAAiB,CACzBC,KAAM,kBACNC,QAAS,UAGXiZ,EAAUC,gBAAgB,CACxBnZ,KAAM,kBACNC,QAAS,QACToI,IAAK,+CAEN,CAACyQ,EAAIld,SACYmK,EAAM5G,cAAcmZ,EAAgB7a,SAAU,CAChEC,MAAOob,GACNpe,IAEL8d,EAASzD,UAAY,CACnBnZ,OAAQmZ,EAAUoB,IAClB3S,QAASuR,EAAUiB,QAErB,IAAIoD,EAAgC,SAAuCC,GAEzE,OA/GyB,SAA8BP,EAAKQ,GAC5D,IAAKR,EACH,MAAM,IAAIxZ,MAAM,+EAA+EV,OAAO0a,EAAS,gCAGjH,OAAOR,EA0GAS,CADGxT,EAAMvD,WAAW8V,GACMe,IA0B/BG,EAAmB,SAA0BC,GAI/C,OAAO/e,EAHQ+e,EAAM/e,UACX0e,EAA8B,+BAI1CI,EAAiBzE,UAAY,CAC3Bra,SAAUqa,EAAUe,KAAKJ,YAG3B,IAAIgE,EAAuB,SAA8BC,GACvD,IAAI5B,EAAMhS,EAAMnD,OAAO+W,GAIvB,OAHA5T,EAAM1J,WAAU,WACd0b,EAAIlV,QAAU8W,IACb,CAACA,IACG,WACD5B,EAAIlV,SACNkV,EAAIlV,QAAQ/C,MAAMiY,EAAKnX,aAKzBgZ,EAA2B,SAAkCpW,GAC/D,OAAKwT,EAAgBxT,IAIbA,EAAQqW,eACL1H,EAAyB3O,EAAS,CAAC,oBAJrC,IASPsW,EAAO,aAMPC,EAAyB,SAAgCC,EAAMC,GACjE,IALqCC,EAKjC3B,EAAc,GAAG3Z,QALgBsb,EAKGF,GAJ7BG,OAAO,GAAGC,cAAgBF,EAAI9F,MAAM,GAIA,WA0F3CiG,EAAUJ,EAXM,SAAuB1N,GAEzC6M,EAA8B,WAAWxa,OAAO2Z,EAAa,MAC7D,IAAIpc,EAAKoQ,EAAMpQ,GACXme,EAAY/N,EAAM+N,UACtB,OAAoBvU,EAAM5G,cAAc,MAAO,CAC7ChD,GAAIA,EACJme,UAAWA,KApFK,SAAuB7B,GACzC,IAAItc,EAAKsc,EAAKtc,GACVme,EAAY7B,EAAK6B,UACjBC,EAAe9B,EAAKjV,QACpBA,OAA2B,IAAjB+W,EAA0B,GAAKA,EACzCC,EAAc/B,EAAKlV,OACnBA,OAAyB,IAAhBiX,EAAyBV,EAAOU,EACzCC,EAAehC,EAAKnV,QACpBA,OAA2B,IAAjBmX,EAA0BX,EAAOW,EAC3CC,EAAejC,EAAKkC,QACpBA,OAA2B,IAAjBD,EAA0BZ,EAAOY,EAC3CE,EAAgBnC,EAAKrV,SACrBA,OAA6B,IAAlBwX,EAA2Bd,EAAOc,EAC7CC,EAAgBpC,EAAKqC,SACrBA,OAA6B,IAAlBD,EAA2Bf,EAAOe,EAC7CE,EAAetC,EAAK7S,QACpBA,OAA2B,IAAjBmV,EAA0BjB,EAAOiB,EAG3Cjf,EADwBsd,EAA8B,WAAWxa,OAAO2Z,EAAa,MACpDzc,SAEjCkf,EAAajV,EAAMnD,OAAO,MAC1BqY,EAAUlV,EAAMnD,OAAO,MACvBsY,EAAcxB,EAAqBiB,GACnCQ,EAAazB,EAAqBnW,GAClC6X,EAAc1B,EAAqBpW,GACnC+X,EAAc3B,EAAqB9T,GACnC0V,EAAe5B,EAAqBtW,GACpCmY,EAAe7B,EAAqBoB,GACxC/U,EAAMyV,iBAAgB,WACpB,GAA0B,MAAtBR,EAAWnY,SAAmB/G,GAA+B,MAAnBmf,EAAQpY,QAAiB,CACrE,IAAIwT,EAAUva,EAAS2f,OAAOzB,EAAMxW,GACpCwX,EAAWnY,QAAUwT,EACrBA,EAAQqF,MAAMT,EAAQpY,SACtBwT,EAAQsF,GAAG,SAAS,WAClB,OAAOT,EAAY7E,MAErBA,EAAQsF,GAAG,SAAUL,GACrBjF,EAAQsF,GAAG,OAAQR,GACnB9E,EAAQsF,GAAG,QAASP,GACpB/E,EAAQsF,GAAG,SAAUJ,GAIrBlF,EAAQsF,GAAG,QAASN,OAGxB,IAAIpC,EAAclT,EAAMnD,OAAOY,GAsB/B,OArBAuC,EAAM1J,WAAU,WACV4c,EAAYpW,SAAWoW,EAAYpW,QAAQgX,iBAAmBrW,EAAQqW,gBACxEvb,QAAQC,KAAK,mFAGf,IAAIqd,EAAoBhC,EAAyBpW,GAEH,IAA1CiP,OAAOC,KAAKkJ,GAAmBrf,QAAiB2a,EAAQ0E,EAAmBhC,EAAyBX,EAAYpW,WAC9GmY,EAAWnY,UACbmY,EAAWnY,QAAQgZ,OAAOD,GAC1B3C,EAAYpW,QAAUW,KAGzB,CAACA,IACJuC,EAAMyV,iBAAgB,WACpB,OAAO,WACDR,EAAWnY,SACbmY,EAAWnY,QAAQiZ,aAGtB,IACiB/V,EAAM5G,cAAc,MAAO,CAC7ChD,GAAIA,EACJme,UAAWA,EACXvC,IAAKkD,KA6BT,OAZAZ,EAAQtF,UAAY,CAClB5Y,GAAI4Y,EAAUkB,OACdqE,UAAWvF,EAAUkB,OACrB7S,SAAU2R,EAAUe,KACpBvS,OAAQwR,EAAUe,KAClBxS,QAASyR,EAAUe,KACnB6E,QAAS5F,EAAUe,KACnBlQ,QAASmP,EAAUe,KACnBtS,QAASuR,EAAUiB,QAErBqE,EAAQ9B,YAAcA,EACtB8B,EAAQ0B,cAAgB/B,EACjBK,GAGLJ,EAA6B,oBAAX7b,OAQlB4d,EAAuBjC,EAAuB,gBAAiBE,GAK/Dpd,EAAckd,EAAuB,OAAQE,GAK7CgC,EAAoBlC,EAAuB,aAAcE,GAKzDiC,EAAoBnC,EAAuB,aAAcE,GAKzDkC,EAAiBpC,EAAuB,UAAWE,GAKnDmC,EAAiBrC,EAAuB,UAAWE,GAKnDoC,EAActC,EAAuB,OAAQE,GAK7CqC,EAAmBvC,EAAuB,YAAaE,GAKvDsC,EAAiBxC,EAAuB,UAAWE,GAKnDuC,EAAiBzC,EAAuB,UAAWE,GACnDwC,EAAiB1C,EAAuB,UAAWE,GAKnDyC,EAA8B3C,EAAuB,uBAAwBE,GAK7E0C,EAAiC5C,EAAuB,0BAA2BE,GAEvFrI,EAAQ+K,+BAAiCA,EACzC/K,EAAQoK,qBAAuBA,EAC/BpK,EAAQuK,eAAiBA,EACzBvK,EAAQ/U,YAAcA,EACtB+U,EAAQsK,kBAAoBA,EAC5BtK,EAAQqK,kBAAoBA,EAC5BrK,EAAQ4G,SAAWA,EACnB5G,EAAQ4H,iBAAmBA,EAC3B5H,EAAQ4K,eAAiBA,EACzB5K,EAAQwK,eAAiBA,EACzBxK,EAAQyK,YAAcA,EACtBzK,EAAQ0K,iBAAmBA,EAC3B1K,EAAQ2K,eAAiBA,EACzB3K,EAAQ6K,eAAiBA,EACzB7K,EAAQ8K,4BAA8BA,EACtC9K,EAAQ7V,YAvPU,WAIhB,OAH4Bqd,EAA8B,uBACrBtd,UAsPvC8V,EAAQ/V,UA9OQ,WAId,OAH6Bud,EAA8B,qBACvBxd,QA8OtC6W,OAAOmK,eAAehL,EAAS,aAAc,CAAElU,OAAO,IAnpBSmf,CAAQjL,EAAS,EAAQ","file":"60.js","sourcesContent":["import request from '@app/utils/request'\nimport { OptionalProp } from '@app/types/helpers.types'\nimport { Payment } from '@app/types/auth'\n\nexport interface AllPaymentInstrumentsResponse {\n  auth_capture: { payment_instruments: Array<Payment> }\n  href: OptionalProp<string>\n  payment_type: string\n}\n\nexport const getUserPayments = (serviceType: string) =>\n  request<AllPaymentInstrumentsResponse>('/user/payment', {\n    querystring: { payment_type: 'auth_capture', service_type: serviceType },\n  })\n\nexport const deleteUserPayment = (id: string) =>\n  request(`/user/payment/${id}`, { body: {}, method: 'DELETE' })\n\nexport interface CreateUserPaymentAPIResponse extends Payment {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  modified?: string | null\n  session_token?: string\n}\n\nexport const createUserPayment = (payment: {\n  ext_id: string\n  service_type: string\n}): Promise<CreateUserPaymentAPIResponse> =>\n  request('/user/payment', { body: payment, method: 'POST' })\n\nexport interface UpdateCartPaymentResponse {\n  modified?: string\n  session_token?: string\n}\n\nexport interface CreateUserPayerResponse {\n  href: string\n  payment_type: string\n}\nexport const createUserPayer = (details: {\n  auth_capture: Record<string, unknown>\n  payment_type: string\n  service_type: string\n}): Promise<CreateUserPayerResponse> => request('/user/payer', { body: details, method: 'POST' })\n\nexport interface UpdateCartPaymentResponse {\n  modified?: string\n  session_token?: string\n}\n\nexport const updateCartPayment = (details: {\n  payment_type?: string\n  service_type?: string\n}): Promise<UpdateCartPaymentResponse> => request('/cart/payment', { body: details, method: 'PUT' })\n","import { useQuery } from 'react-query'\nimport { getUserPayments } from './api/userPayments'\n\nexport const ALL_PAYMENT_INSTRUMENTS_QUERY_KEY = 'ALL_PAYMENT_INSTRUMENTS'\n\nexport const useAllPaymentInstrumentsQuery = (serviceType: string) => {\n  return useQuery(ALL_PAYMENT_INSTRUMENTS_QUERY_KEY, () => getUserPayments(serviceType))\n}\n","import React, { createContext, useState, MouseEvent, useCallback, useEffect } from 'react'\nimport { QueryObserverResult, useQueryClient } from 'react-query'\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\n\nimport {\n  createUserPayment,\n  AllPaymentInstrumentsResponse,\n} from '@app/services/user/api/userPayments'\nimport { ResponseWithToken } from '@app/utils/request'\nimport {\n  useAllPaymentInstrumentsQuery,\n  ALL_PAYMENT_INSTRUMENTS_QUERY_KEY,\n} from '@app/services/user/hooks'\nimport { Payment } from '@app/types/auth'\n\ninterface StripeFormContextTypes {\n  handleSubmit?: (event: MouseEvent<HTMLButtonElement>) => Promise<void>\n  paymentError?: string\n  setPaymentError?: (value: React.SetStateAction<string | undefined>) => void\n  isSubmitting?: boolean\n  paymentQuery?: QueryObserverResult<AllPaymentInstrumentsResponse & ResponseWithToken, unknown>\n  cards?: Payment[]\n  selectedCard?: Payment\n  setSelectedCardId?: React.Dispatch<React.SetStateAction<string | undefined>>\n  addNewCard?: boolean\n  setAddNewCard?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const StripeFormContext = createContext<StripeFormContextTypes>({})\n\ninterface StripeFormProviderProps {\n  children: React.ReactNode\n  submitPayment: (payment: Payment) => Promise<void>\n  onPaymentComplete: () => void\n  setIsProcessing: React.Dispatch<React.SetStateAction<boolean>>\n}\nexport const StripeFormProvider = ({\n  children,\n  submitPayment,\n  onPaymentComplete,\n  setIsProcessing,\n}: StripeFormProviderProps) => {\n  const queryClient = useQueryClient()\n  const paymentQuery = useAllPaymentInstrumentsQuery('express')\n  const cards = paymentQuery.data?.auth_capture?.payment_instruments\n\n  const [paymentError, setPaymentError] = useState<string | undefined>()\n  const [selectedCardId, setSelectedCardId] = useState<string | undefined>()\n  const [addNewCard, setAddNewCard] = useState(false)\n  const stripe = useStripe()\n  const elements = useElements()\n\n  const selectedCard = cards ? cards.find(c => c.id === selectedCardId) : undefined\n\n  // when selectedCardId is ever undefined, set it to the first card if cards are loaded\n  useEffect(() => {\n    if (!selectedCardId && !paymentQuery.isLoading && cards && cards.length > 0) {\n      setSelectedCardId(cards[0].id)\n    }\n  }, [paymentQuery.isLoading, setSelectedCardId, selectedCardId, cards])\n\n  const getStripeTokenAndCreateUser = useCallback(async () => {\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement)\n\n    if (!cardElement) {\n      return\n    }\n\n    // Use your card Element with other Stripe.js APIs\n    const { token, error } = await stripe.createToken(cardElement)\n\n    if (error) {\n      setPaymentError(error.message)\n    } else {\n      setPaymentError(undefined)\n    }\n\n    if (!error && token) {\n      try {\n        return await createUserPayment({ ext_id: token.id, service_type: 'express' })\n      } catch (err) {\n        setPaymentError(err.message)\n      }\n    }\n    return undefined\n  }, [elements, stripe, setPaymentError])\n\n  // handleSubmit will handle submitting when entering a credit card\n  // number directly or if a payment option is selected\n  const handleSubmit = useCallback(\n    async (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault()\n\n      setIsProcessing(true)\n      let payment = selectedCard\n\n      // if the user chose to add a new card, or has no cards\n      if (addNewCard || !selectedCard) {\n        payment = await getStripeTokenAndCreateUser()\n      }\n\n      if (payment) {\n        try {\n          await submitPayment(payment)\n          onPaymentComplete()\n        } catch (error) {\n          queryClient.invalidateQueries(ALL_PAYMENT_INSTRUMENTS_QUERY_KEY)\n          setSelectedCardId(undefined)\n          setPaymentError(error.message)\n        } finally {\n          setIsProcessing(false)\n          setAddNewCard(false)\n          setSelectedCardId(payment.id)\n        }\n      } else {\n        setIsProcessing(false)\n      }\n    },\n    [\n      getStripeTokenAndCreateUser,\n      setIsProcessing,\n      onPaymentComplete,\n      queryClient,\n      setSelectedCardId,\n      setPaymentError,\n      selectedCard,\n      submitPayment,\n      addNewCard,\n    ]\n  )\n\n  return (\n    <StripeFormContext.Provider\n      value={{\n        addNewCard,\n        cards,\n        handleSubmit,\n        paymentError,\n        paymentQuery,\n        selectedCard,\n        setAddNewCard,\n        setPaymentError,\n        setSelectedCardId,\n      }}\n    >\n      {children}\n    </StripeFormContext.Provider>\n  )\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\n","var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.16.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n};\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","import React from 'react'\n\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe, Stripe as StripeType } from '@stripe/stripe-js'\nimport { useConfig } from '@app/services/config/hooks'\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nlet stripePromise: Promise<StripeType | null> | null = null\n\ninterface StripeProviderProps {\n  children: React.ReactNode\n}\n\nconst StripeProvider = ({ children }: StripeProviderProps) => {\n  const {\n    stripe: { apiKey },\n    optionalComponents,\n  } = useConfig()\n\n  // if Stripe isn't configured for retailer, don't use Stripe Elements provider\n  if (!optionalComponents.includes('Stripe') || !apiKey) {\n    return <>{children}</>\n  }\n\n  if (!stripePromise) {\n    stripePromise = loadStripe(apiKey)\n  }\n\n  return <Elements stripe={stripePromise}>{children}</Elements>\n}\n\nexport default StripeProvider\n","import React, { useState, useContext, useEffect, useRef } from 'react'\nimport { LoadingBlock, createStyles, Text } from '@instacart/cocktail'\nimport { CardElement } from '@stripe/react-stripe-js'\nimport { StripeFormContext } from '@app/react/components/payments/Stripe/StripeFormContext'\nimport { createUserPayer, updateCartPayment } from '@app/services/user/api/userPayments'\n\nconst useStyles = createStyles(tokens => ({\n  error: {\n    borderColor: tokens.color.ui.error,\n  },\n  errorFocused: {\n    borderColor: tokens.color.ui.error,\n    boxShadow: `0 0 3px ${tokens.color.ui.error}`,\n  },\n  focused: {\n    borderColor: tokens.color.brand.primary.regular,\n    boxShadow: `0 0 3px ${tokens.color.brand.primary.regular}`,\n    outlineWidth: 0,\n  },\n  stripeElement: {\n    border: '1px solid rgb(111, 111, 111)',\n    borderRadius: '8px',\n    padding: `${tokens.size.spacing.xSmall}px`,\n  },\n}))\n\nconst StripeForm = () => {\n  const [focused, setFocused] = useState(false)\n\n  const { paymentError, setPaymentError } = useContext(StripeFormContext)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const styles = useStyles()\n\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    async function generateStripeUser() {\n      await Promise.all([\n        // this sets the necessary info on the user to add a new credit card\n        createUserPayer({\n          auth_capture: {},\n          payment_type: 'auth_capture',\n          service_type: 'express',\n        }),\n        // this was being done in the angular version, not sure exactly why\n        updateCartPayment({ payment_type: 'auth_capture', service_type: 'express' }),\n      ])\n\n      if (isMounted.current) {\n        setIsLoading(false)\n      }\n    }\n    generateStripeUser()\n  }, [setIsLoading])\n\n  if (isLoading) {\n    return <LoadingBlock shape=\"rectangle\" height={65} css={{ borderRadius: 8 }} />\n  }\n\n  return (\n    <div data-test=\"stripe-element\">\n      <CardElement\n        onChange={e => setPaymentError && setPaymentError(e.error?.message)}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        css={[\n          styles.stripeElement,\n          paymentError && styles.error,\n          focused && styles.focused,\n          focused && paymentError && styles.errorFocused,\n        ]}\n        options={{\n          iconStyle: 'solid',\n        }}\n      />\n      <Text component=\"p\" variant=\"caption\" bold color=\"error\">\n        {paymentError}\n      </Text>\n    </div>\n  )\n}\n\nexport default StripeForm\n","import React, { useContext, useCallback } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { LoadingBlock, createStyles, Radio, Button, Text } from '@instacart/cocktail'\nimport { useLang } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { ALL_PAYMENT_INSTRUMENTS_QUERY_KEY } from '@app/services/user/hooks'\nimport { deleteUserPayment } from '@app/services/user/api/userPayments'\nimport { StripeFormContext } from '@app/react/components/payments/Stripe/StripeFormContext'\nimport { Payment } from '@app/types/auth'\n\nimport StripeForm from './StripeForm'\n\nconst useStyles = createStyles(tokens => ({\n  addNewCard: {\n    padding: 0,\n  },\n  radio: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  row: {\n    backgroundColor: `${tokens.color.neutral.grey2}`,\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: `${tokens.size.spacing.xxxSmall}px`,\n    padding: `${tokens.size.spacing.xxxSmall}px`,\n    paddingLeft: `${tokens.size.spacing.small}px`,\n    paddingRight: `${tokens.size.spacing.small}px`,\n  },\n  selectWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}))\n\nconst StripeCardManager = () => {\n  const queryClient = useQueryClient()\n\n  const {\n    paymentError,\n    setPaymentError,\n    paymentQuery,\n    selectedCard,\n    setSelectedCardId,\n    cards,\n    addNewCard,\n    setAddNewCard,\n  } = useContext(StripeFormContext)\n\n  const lang = useLang()\n\n  const styles = useStyles()\n\n  // use this function to delete a card by instrument index\n  const deleteCard = useCallback(\n    async (card: Payment) => {\n      if (!paymentQuery || !setPaymentError || !setSelectedCardId) {\n        return\n      }\n\n      try {\n        card.id && (await deleteUserPayment(card.id))\n\n        // remove item from queried card list\n        const newData = {\n          ...paymentQuery.data,\n          ...{\n            auth_capture: {\n              payment_instruments: cards?.filter(c => c.id !== card.id),\n            },\n          },\n        }\n        if (card.id === selectedCard?.id) {\n          setSelectedCardId(undefined)\n        }\n        queryClient.setQueryData(ALL_PAYMENT_INSTRUMENTS_QUERY_KEY, newData)\n      } catch (err) {\n        setPaymentError(err.message)\n      }\n    },\n    [cards, paymentQuery, setPaymentError, queryClient, setSelectedCardId, selectedCard]\n  )\n\n  if (paymentQuery?.isLoading) {\n    return (\n      <LoadingBlock\n        data-test=\"stripe-card-manager-loading\"\n        shape=\"rectangle\"\n        height={65}\n        css={{ borderRadius: 8 }}\n      />\n    )\n  }\n\n  if (!cards || !paymentQuery || !setPaymentError || !setSelectedCardId || !setAddNewCard) {\n    return null\n  }\n\n  if (selectedCard && !addNewCard) {\n    return (\n      <>\n        <div css={styles.selectWrapper}>\n          {cards.map(card => (\n            <div css={styles.row} key={card.ext_id}>\n              <Radio\n                checked={selectedCard?.id === card.id}\n                onChange={() => setSelectedCardId(card.id)}\n                name={card.ext_id || ''}\n                css={styles.radio}\n              >\n                {card.provider &&\n                  card.last_four_digits &&\n                  interpolate(lang.cardEnding, {\n                    cardName: card.provider,\n                    cardNumber: card.last_four_digits,\n                  })}\n              </Radio>\n\n              <Button variant=\"link\" color=\"highlight\" onClick={() => deleteCard(card)}>\n                {lang.delete}\n              </Button>\n            </div>\n          ))}\n        </div>\n        <Button\n          css={styles.addNewCard}\n          variant=\"link\"\n          onClick={() => {\n            setAddNewCard(true)\n            setPaymentError(undefined)\n          }}\n        >\n          {lang.addNewCard}\n        </Button>\n        <Text component=\"p\" variant=\"caption\" bold color=\"error\">\n          {paymentError}\n        </Text>\n      </>\n    )\n  }\n\n  return <StripeForm />\n}\n\nexport default StripeCardManager\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { ExpressPlan } from '@app/services/express/types'\n\ninterface SignupContextTypes {\n  onCancel: () => void\n  plan?: ExpressPlan\n  onSuccess: () => void\n  isTrialPlan: boolean\n  newPlanId?: number\n  setNewPlanId: Dispatch<SetStateAction<number | undefined>>\n  isProcessing: boolean\n}\nconst SignupContext = React.createContext<SignupContextTypes>({} as SignupContextTypes)\n\nexport default SignupContext\n","import { useContext, useMemo } from 'react'\nimport { Button, createStyles, Text } from '@instacart/cocktail'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport StripeCardManager from '@app/react/components/payments/Stripe/StripeCardManager'\nimport AssetImage from '@app/react/common/AssetImage'\nimport { StripeFormContext } from '@app/react/components/payments/Stripe/StripeFormContext'\nimport { useExpressUserConfigContext } from '@app/services/express/hooks'\nimport { getConfigByRule } from '@app/services/express/utils'\nimport SignupContext from './SignupContext'\n\nconst useStyles = createStyles(tokens => ({\n  answerCreditCard: {\n    'a, &.visited': {\n      color: `${tokens.color.brand.primary.regular}`,\n    },\n    paddingBottom: `${tokens.size.spacing.large}px`,\n  },\n  buttonGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: `${tokens.size.spacing.medium}px`,\n  },\n  heading: {\n    fontWeight: tokens.font.weight.bold,\n  },\n  logo: {\n    display: 'block',\n    margin: 'auto',\n    padding: `${tokens.size.spacing.small}px`,\n  },\n  whyCreditCard: {\n    marginTop: `${tokens.size.spacing.xxLarge}px`,\n  },\n}))\n\nconst TrialSignupContent = () => {\n  const lang = useLang()\n  const { icExpress } = useConfig()\n  const { onCancel, isProcessing } = useContext(SignupContext)\n  const { handleSubmit } = useContext(StripeFormContext)\n\n  const styles = useStyles()\n\n  const useConfigContext = useExpressUserConfigContext()\n\n  const startTrialButtonLabel = useMemo(() => {\n    const variant = getConfigByRule(\n      useConfigContext,\n      lang.icExpress.modalSignupFlow.startTrialVariants\n    )\n    return variant || lang.icExpress.modalSignupFlow.startTrial\n  }, [useConfigContext, lang.icExpress.modalSignupFlow])\n\n  const answerCreditCardText = useMemo(() => {\n    const variant = getConfigByRule(\n      useConfigContext,\n      lang.icExpress.modalSignupFlow.answerCreditCardVariants\n    )\n    return variant || lang.icExpress.modalSignupFlow.answerCreditCard\n  }, [useConfigContext, lang.icExpress.modalSignupFlow])\n\n  return (\n    <>\n      <Text css={styles.heading} component=\"h1\" variant=\"banner\" bold align=\"center\">\n        {interpolate(lang.icExpress.modalSignupFlow.headers.start, {\n          name: icExpress.name,\n        })}\n      </Text>\n\n      <AssetImage css={styles.logo} src={icExpress.modalSignupFlow.goldfruitsImage} alt=\"\" />\n\n      <Text css={styles.whyCreditCard} component=\"p\" variant=\"large\" bold align=\"center\">\n        {lang.icExpress.modalSignupFlow.whyCreditCard}\n      </Text>\n\n      <Text css={styles.answerCreditCard} component=\"div\" variant=\"large\" align=\"center\">\n        <p\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: interpolate(answerCreditCardText, {\n              termsUrl: icExpress.termsAndConditions.url,\n            }),\n          }}\n        />\n      </Text>\n\n      <StripeCardManager />\n\n      <div css={styles.buttonGroup}>\n        <Button\n          variant=\"filled\"\n          onClick={handleSubmit}\n          disabled={isProcessing}\n          loading={isProcessing}\n        >\n          {startTrialButtonLabel}\n        </Button>\n        <Button variant=\"link\" onClick={() => onCancel()} disabled={isProcessing}>\n          {lang.icExpress.modalSignupFlow.finishLater}\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default TrialSignupContent\n","import React, { useContext } from 'react'\nimport { Button, createStyles, Text } from '@instacart/cocktail'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport dayjs from 'dayjs'\nimport StripeCardManager from '@app/react/components/payments/Stripe/StripeCardManager'\nimport { StripeFormContext } from '@app/react/components/payments/Stripe/StripeFormContext'\nimport SignupContext from './SignupContext'\nimport { getExpressPlanConfigForApiPlan } from '../utils'\n\nconst SubscriptionSignup = () => {\n  const lang = useLang()\n  const config = useConfig()\n  const { icExpress } = config\n  const { onCancel, plan, isProcessing } = useContext(SignupContext)\n  const { handleSubmit } = useContext(StripeFormContext)\n\n  const useStyles = createStyles(tokens => ({\n    buttonGroup: {\n      display: 'flex',\n      flexDirection: 'column',\n      marginTop: `${tokens.size.spacing.xLarge}px`,\n    },\n    heading: {\n      fontWeight: tokens.font.weight.bold,\n    },\n    subscriptionDetailsBox: {\n      backgroundColor: icExpress.colors.light,\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: `${tokens.size.spacing.xLarge}px`,\n      padding: `${tokens.size.spacing.large}px`,\n    },\n    subscriptionPrice: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n    terms: {\n      'a, &.visited': {\n        color: `${tokens.color.brand.primary.regular}`,\n      },\n    },\n  }))\n\n  const styles = useStyles()\n\n  if (!plan) return null\n\n  return (\n    <>\n      <Text css={styles.heading} component=\"h1\" variant=\"banner\" bold align=\"center\">\n        {lang.icExpress.modalSignupFlow.headers.confirm}\n      </Text>\n      <div css={styles.subscriptionDetailsBox}>\n        <div>\n          <Text component=\"div\" variant=\"caption\" bold align=\"left\">\n            {icExpress.name}\n          </Text>\n          <Text component=\"div\" variant=\"caption\" align=\"left\">\n            {getExpressPlanConfigForApiPlan(config, plan).planName}\n          </Text>\n          <Text component=\"div\" variant=\"caption\" align=\"left\">\n            {interpolate(lang.icExpress.modalSignupFlow.starting, {\n              date: dayjs().format(' MMMM D, YYYY'),\n            })}\n          </Text>\n        </div>\n        <Text css={styles.subscriptionPrice} component=\"div\" variant=\"h2\" bold align=\"left\">\n          {config.currencySymbol}\n          {plan.price}\n        </Text>\n      </div>\n      <StripeCardManager />\n      <div css={styles.buttonGroup}>\n        <Button\n          variant=\"filled\"\n          onClick={handleSubmit}\n          disabled={isProcessing}\n          loading={isProcessing}\n        >\n          {lang.icExpress.modalSignupFlow.purchaseMembership}\n        </Button>\n        <Button variant=\"link\" onClick={() => onCancel()}>\n          {lang.cancel}\n        </Button>\n      </div>\n      <Text css={styles.terms} component=\"div\" variant=\"caption\" align=\"left\">\n        <p\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: interpolate(lang.icExpress.modalSignupFlow.terms, {\n              termsUrl: icExpress.termsAndConditions.url,\n            }),\n          }}\n        />\n      </Text>\n    </>\n  )\n}\n\nexport default SubscriptionSignup\n","import { useContext } from 'react'\nimport dayjs from 'dayjs'\nimport { Button, createStyles, Text } from '@instacart/cocktail'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { useCurrentSubscription } from '@app/services/express/hooks'\nimport AssetImage from '@app/react/common/AssetImage'\nimport SignupContext from './SignupContext'\n\nconst useStyles = createStyles(tokens => ({\n  heading: {\n    fontWeight: tokens.font.weight.bold,\n  },\n  successLogo: {\n    display: 'block',\n    margin: 'auto',\n    width: '160px',\n  },\n  welcomeDescription: {\n    fontSize: '22px',\n    marginTop: `${tokens.size.spacing.large}px`,\n  },\n}))\n\nconst SignupConfirmation = () => {\n  const lang = useLang()\n  const { icExpress } = useConfig()\n  const { isTrialPlan, onSuccess, newPlanId } = useContext(SignupContext)\n  const currentSubscription = useCurrentSubscription()\n\n  const styles = useStyles()\n\n  const isTrial = newPlanId ? false : isTrialPlan\n\n  return (\n    <>\n      <Text css={styles.heading} component=\"h1\" variant=\"banner\" bold align=\"center\">\n        {interpolate(\n          isTrial\n            ? lang.icExpress.modalSignupFlow.headers.welcome\n            : lang.icExpress.modalSignupFlow.headers.thanks,\n          {\n            name: icExpress.name,\n          }\n        )}\n      </Text>\n\n      <AssetImage css={styles.successLogo} src={icExpress.modalSignupFlow.successImage} alt=\"\" />\n\n      <Text css={styles.welcomeDescription} component=\"p\" variant=\"h3\" align=\"center\">\n        {interpolate(lang.icExpress.modalSignupFlow.welcomeDescription, { name: icExpress.name })}\n      </Text>\n\n      {isTrial &&\n        currentSubscription?.subscription?.end_date &&\n        currentSubscription?.subscription?.send_reminder_on && (\n          <div>\n            <Text component=\"div\" variant=\"caption\" align=\"center\">\n              <p\n                data-test=\"signup_confirmation_trial_end_data\"\n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML={{\n                  __html: interpolate(lang.icExpress.modalSignupFlow.trialEnd, {\n                    date: dayjs(currentSubscription.subscription.end_date).format('MMMM D, YYYY'),\n                  }),\n                }}\n              />\n            </Text>\n            <Text component=\"p\" variant=\"caption\" align=\"center\">\n              {interpolate(lang.icExpress.modalSignupFlow.reminder, {\n                date: dayjs(currentSubscription.subscription.send_reminder_on).format(\n                  'MMMM D, YYYY'\n                ),\n              })}\n            </Text>\n          </div>\n        )}\n\n      <Button variant=\"filled\" fullWidth onClick={() => onSuccess()}>\n        {lang.icExpress.modalSignupFlow.startShopping}\n      </Button>\n    </>\n  )\n}\n\nexport default SignupConfirmation\n","import React, { useContext } from 'react'\nimport { Button, createStyles, Text } from '@instacart/cocktail'\nimport { useLang, useConfig } from '@app/services/config/hooks'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { useEligibleSubscriptions } from '@app/services/express/hooks'\nimport StripeCardManager from '@app/react/components/payments/Stripe/StripeCardManager'\nimport { StripeFormContext } from '@app/react/components/payments/Stripe/StripeFormContext'\nimport SignupContext from './SignupContext'\nimport ExpressPlans from '../ExpressPlans'\n\nconst useStyles = createStyles(tokens => ({\n  buttonGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: `${tokens.size.spacing.xLarge}px`,\n  },\n  heading: {\n    fontWeight: tokens.font.weight.bold,\n  },\n  purchasePlanInstead: {},\n  space: {\n    padding: `${tokens.size.spacing.xSmall}px`,\n  },\n  subscriptionPrice: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n}))\n\nconst SubscriptionSignup = () => {\n  const lang = useLang()\n  const config = useConfig()\n  const { onCancel, setNewPlanId, isProcessing } = useContext(SignupContext)\n  const { label, url } = config.icExpress.termsAndConditions\n  const { handleSubmit } = useContext(StripeFormContext)\n\n  const plans = useEligibleSubscriptions()\n\n  const styles = useStyles()\n\n  if (!plans || !setNewPlanId) return null\n\n  return (\n    <>\n      <Text css={styles.heading} component=\"h1\" variant=\"banner\" bold align=\"center\">\n        {lang.icExpress.modalSignupFlow.headers.ineligible}\n      </Text>\n\n      <Text css={styles.purchasePlanInstead} component=\"p\" variant=\"h3\" align=\"center\">\n        {lang.icExpress.modalSignupFlow.purchasePlanInstead}\n      </Text>\n\n      <ExpressPlans\n        // we still think user has access to Free Trial so we need to remove that\n        // from the list of plans they can choose from\n        plans={plans.filter(plan => plan.term_length)}\n        onPlanSelect={planId => setNewPlanId(planId)}\n      />\n\n      <div css={styles.space} />\n\n      <StripeCardManager />\n\n      <div css={styles.buttonGroup}>\n        <Button\n          variant=\"filled\"\n          onClick={handleSubmit}\n          disabled={isProcessing}\n          loading={isProcessing}\n        >\n          {lang.icExpress.modalSignupFlow.purchaseMembership}\n        </Button>\n        <Button variant=\"link\" onClick={() => onCancel()}>\n          {lang.icExpress.modalSignupFlow.noThanks}\n        </Button>\n      </div>\n      <Text component=\"p\" variant=\"caption\" align=\"center\">\n        {interpolate(lang.icExpress.modalSignupFlow.careMessage, {\n          termsAndConditions: `<a href=\"${url}\" target=\"_blank\">${label}</a>`,\n        })}\n      </Text>\n    </>\n  )\n}\n\nexport default SubscriptionSignup\n","export enum ModalState {\n  Signup = 'signup',\n  Confirmation = 'confirmation',\n  TrialFailed = 'trialFailed',\n}\n","import React, { useState, useCallback } from 'react'\nimport { unwrapResult } from '@reduxjs/toolkit'\nimport {\n  createStyles,\n  ModalContainer,\n  ModalContent,\n  ModalHeader,\n  ModalHeaderAdornment,\n  ModalContainerAdornment,\n  ModalXButton,\n} from '@instacart/cocktail'\nimport { useCurrentSubscription, useEligibleSubscriptions } from '@app/services/express/hooks'\nimport { createSubscription } from '@app/services/express/thunks'\nimport { StripeFormProvider } from '@app/react/components/payments/Stripe/StripeFormContext'\nimport { Payment } from '@app/types/auth'\nimport { store } from '@app/services/store'\nimport { useIsMobile } from '@app/react/common/hooks/useIsMobile'\nimport StripeProvider from '@app/react/components/payments/Stripe/StripeProvider'\nimport TrialSignup from './TrialSignup'\nimport SubscriptionSignup from './SubscriptionSignup'\nimport SignupConfirmation from './SignupConfirmation'\nimport SubscriptionSignupWithPlanSelect from './SubscriptionSignupWithPlanSelect'\nimport SignupContext from './SignupContext'\nimport { ModalState } from './types'\nimport { getIsTrialPlan } from '../utils'\n\nconst useStyles = createStyles(tokens => ({\n  mobileHeader: {\n    paddingBottom: `${tokens.size.spacing.xxLarge}px`,\n    paddingTop: `${tokens.size.spacing.xxLarge}px`,\n  },\n  modalContainerMobile: {\n    height: '100%',\n  },\n  modalContent: {\n    padding: `${tokens.size.spacing.xxLarge}px`,\n  },\n  modalContentMobile: {\n    height: `calc(100% - ${tokens.size.spacing.xxLarge * 2}px)`,\n    overflow: 'auto',\n    padding: `${tokens.size.spacing.xxLarge}px`,\n  },\n}))\n\ninterface ExpressSignupModalProps {\n  onCancel: () => void\n  planId: number\n  onSuccess: () => void\n}\n\nconst ExpressSignupModal = (props: ExpressSignupModalProps) => {\n  const { onCancel, planId, onSuccess } = props\n  const isMobile = useIsMobile()\n  const [modalState, setModalState] = useState(ModalState.Signup)\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  // this should only be set if it is determined that the user is not eligible for a trial\n  // after they try to add a trial account\n  const [newPlanId, setNewPlanId] = useState<number | undefined>()\n\n  const styles = useStyles(props)\n  const currentSubscription = useCurrentSubscription()\n  const eligiblePlans = useEligibleSubscriptions()\n\n  const plan = eligiblePlans && eligiblePlans.find(p => planId === p.id)\n\n  const isTrialPlan = plan ? getIsTrialPlan(plan) : false\n\n  let content = null\n\n  switch (modalState) {\n    case ModalState.Signup:\n      // if no plan is picked then the user somehow got here without picking a plan, so they will\n      // need to select one\n      if (!plan) {\n        content = <SubscriptionSignupWithPlanSelect />\n      } else if (currentSubscription?.eligible_for_trial) {\n        content = <TrialSignup />\n      } else {\n        content = <SubscriptionSignup />\n      }\n      break\n    case ModalState.Confirmation:\n      content = <SignupConfirmation />\n      break\n    case ModalState.TrialFailed:\n      content = <SubscriptionSignupWithPlanSelect />\n      break\n  }\n\n  const submitPayment = useCallback(\n    async (payment: Payment) => {\n      if (!plan || !payment.ext_id || !payment.ext_payer_id) {\n        throw Error('An Unknown error has occurred')\n      }\n      try {\n        const result = await store.dispatch(\n          createSubscription({\n            ext_id: payment.ext_id,\n            ext_payer_id: payment.ext_payer_id,\n            subscription_plan_id: newPlanId || plan.id,\n          })\n        )\n        unwrapResult(result)\n      } catch (error) {\n        if (error.code === 1002 || error.code === 40300) {\n          setModalState(ModalState.TrialFailed)\n          throw new Error('')\n        } else {\n          throw error\n        }\n      }\n    },\n    [setModalState, newPlanId, plan]\n  )\n\n  const onPaymentComplete = () => setModalState(ModalState.Confirmation)\n\n  return (\n    <>\n      <ModalContainer css={isMobile && styles.modalContainerMobile} roundedCorners={!isMobile}>\n        {isMobile && (\n          <ModalHeader css={styles.mobileHeader}>\n            <ModalHeaderAdornment position=\"left\">\n              <ModalXButton onClick={onCancel} />\n            </ModalHeaderAdornment>\n          </ModalHeader>\n        )}\n        {!isMobile && (\n          <ModalContainerAdornment>\n            <ModalXButton onClick={onCancel} />\n          </ModalContainerAdornment>\n        )}\n        <ModalContent\n          css={isMobile ? styles.modalContentMobile : styles.modalContent}\n          layout=\"dialog\"\n        >\n          <StripeProvider>\n            <SignupContext.Provider\n              value={{\n                isProcessing,\n                isTrialPlan,\n                newPlanId,\n                onCancel,\n                onSuccess,\n                plan,\n                setNewPlanId,\n              }}\n            >\n              <StripeFormProvider\n                submitPayment={submitPayment}\n                onPaymentComplete={onPaymentComplete}\n                setIsProcessing={setIsProcessing}\n              >\n                {content}\n              </StripeFormProvider>\n            </SignupContext.Provider>\n          </StripeProvider>\n        </ModalContent>\n      </ModalContainer>\n    </>\n  )\n}\n\nexport default ExpressSignupModal\n","import { ExpressPlan, ExpressSubscriptionPlanTerms } from '@app/services/express/types'\nimport { ClientConfig, IcExpressPlan } from '@app/types/config'\n\nexport const getExpressPlanConfigForApiPlan = (\n  config: ClientConfig,\n  plan: ExpressPlan\n): IcExpressPlan => {\n  if (plan.term_length === ExpressSubscriptionPlanTerms.YEARLY.valueOf())\n    return config.icExpress.plans.yearly\n  if (plan.term_length === ExpressSubscriptionPlanTerms.MONTHLY.valueOf())\n    return config.icExpress.plans.monthly\n  return config.icExpress.plans.trial\n}\n\nexport const getIsTrialPlan = (plan: ExpressPlan): boolean => {\n  if (plan.term_length === ExpressSubscriptionPlanTerms.YEARLY.valueOf()) return false\n  if (plan.term_length === ExpressSubscriptionPlanTerms.MONTHLY.valueOf()) return false\n  return true\n}\n","import React, { useEffect, useState } from 'react'\nimport { createStyles, Text } from '@instacart/cocktail'\nimport { useConfig, useLang } from '@app/services/config/hooks'\nimport dayjs from 'dayjs'\nimport { ExpressPlan, ExpressSubscription, ExpressTermLengths } from '@app/services/express/types'\nimport interpolate from '@instacart/enterprise-services/lang/interpolate'\nimport { getExpressPlanConfigForApiPlan } from './utils'\n\ninterface ExpressPlanProps {\n  plans: ExpressPlan[]\n  currentSubscription?: ExpressSubscription\n  defaultSelectedPlanId?: number\n  onPlanSelect: (planId: number) => void\n}\n\nconst ExpressPlans = (props: ExpressPlanProps) => {\n  const lang = useLang()\n  const config = useConfig()\n\n  const useStyles = createStyles(tokens => ({\n    expressPlan: {\n      '@media(max-width: 449px)': {\n        width: '150px',\n      },\n      '@media(min-width: 450px)': {\n        width: '200px',\n      },\n      border: `${tokens.border.width.regular}px solid ${tokens.color.neutral.white}`,\n      borderRadius: `${tokens.border.radius.regular}px`,\n      boxShadow: `0px 2px 8px 0px ${config.icExpress.colors.shadow}`,\n      cursor: 'pointer',\n      margin: `${tokens.size.spacing.medium}px ${tokens.size.spacing.xxSmall}px`,\n      padding: `${tokens.size.spacing.medium}px ${tokens.size.spacing.xxSmall}px`,\n      textAlign: 'center',\n    },\n    expressPlanContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    expressPlanSelected: {\n      background: config.icExpress.colors.light,\n      border: `${tokens.border.width.regular}px solid ${config.icExpress.colors.extraDark}`,\n    },\n    planBadge: {\n      borderRadius: `${tokens.border.radius.large}px`,\n      fontSize: `${tokens.size.font.badge}px`,\n      fontWeight: 'bold',\n      margin: `${tokens.size.spacing.xxSmall}px ${tokens.size.spacing.none}px`,\n      minHeight: `${tokens.size.spacing.medium}}px`,\n      padding: `${tokens.size.spacing.xxxSmall}px ${tokens.size.spacing.xxSmall}px`,\n    },\n\n    planBadgeSelected: {\n      background: config.icExpress.colors.dark,\n    },\n    planBadgeUnselected: {\n      background: tokens.color.neutral.grey2,\n    },\n    planBilling: {\n      fontSize: `${tokens.size.font.badge}px`,\n    },\n    planFullPrice: {\n      fontSize: `${tokens.size.font.body}px`,\n      fontWeight: 'initial',\n      textDecoration: 'line-through',\n    },\n    planPrice: {\n      marginBottom: '-10px',\n    },\n    planRecurrance: {\n      marginBottom: `${tokens.size.spacing.medium}px`,\n    },\n    planSavings: {\n      fontSize: `${tokens.size.font.badge}px`,\n      minHeight: `${tokens.size.spacing.small}px`,\n    },\n  }))\n  const styles = useStyles(props)\n\n  const { plans, currentSubscription, defaultSelectedPlanId, onPlanSelect } = props\n\n  // State to keep track of the current selected plan\n  const [selectedPlanId, setSelectedPlanId] = useState(0)\n\n  // Hook to trigger the callback whenever a plan id is set.\n  // We can't combine setSelectedPlanId with the callback\n  // because if this is used in a parent component it blows up\n  useEffect(() => {\n    onPlanSelect(selectedPlanId)\n  }, [selectedPlanId, onPlanSelect])\n\n  // Helper Function to render a plan badge\n  const renderExpressPlanBadge = (plan: ExpressPlan) => {\n    let badgeText = ''\n    if (currentSubscription && plan.id === currentSubscription.subscription_plan.id) {\n      badgeText = lang.icExpress.currentPlan\n    } else if (currentSubscription && plan.id === selectedPlanId && currentSubscription.end_date) {\n      badgeText = `${lang.icExpress.starts} ${dayjs(currentSubscription.end_date).format(\n        'MM/DD/YY'\n      )}`\n    } else if (!currentSubscription && plan.term_length === ExpressTermLengths.YEAR) {\n      badgeText = interpolate(config.icExpress.ad.bestValue, {\n        yearlyPricePerMonth: (parseFloat(plan.price) / 12).toFixed(2),\n      })\n    }\n\n    let badgeStyles = {}\n    if (badgeText.length === 0) {\n      badgeStyles = styles.planBadge\n    } else if (plan.id === selectedPlanId) {\n      badgeStyles = { ...styles.planBadge, ...styles.planBadgeSelected }\n    } else {\n      badgeStyles = { ...styles.planBadge, ...styles.planBadgeUnselected }\n    }\n\n    return (\n      <span data-test={`express-plans-plan-id-${plan.id}-badge`} css={badgeStyles}>\n        {badgeText}\n      </span>\n    )\n  }\n\n  const formatPriceDisplay = (price: string) => {\n    return price.replace(/\\.00/g, '')\n  }\n\n  // Helper Function to render each plan box\n  const renderExpressPlan = (plan: ExpressPlan) => {\n    let planStyles = styles.expressPlan\n    if (plan.id === selectedPlanId) {\n      planStyles = { ...styles.expressPlan, ...styles.expressPlanSelected }\n    }\n\n    return (\n      <button\n        key={`express-plans-plan-id-${plan.id}`}\n        data-test={`express-plans-plan-id-${plan.id}`}\n        css={planStyles}\n        onClick={() => {\n          setSelectedPlanId(plan.id)\n        }}\n      >\n        <Text bold variant=\"large\">\n          {getExpressPlanConfigForApiPlan(config, plan).name}\n        </Text>\n        {renderExpressPlanBadge(plan)}\n        <Text css={styles.planPrice} bold variant=\"banner\">\n          {config.currencySymbol}\n          {formatPriceDisplay(plan.price || '')}\n          {plan.promo && (\n            <span css={styles.planFullPrice}>\n              {config.currencySymbol}\n              {formatPriceDisplay(plan.full_price || '')}\n            </span>\n          )}\n        </Text>\n        <Text css={styles.planRecurrance} bold variant=\"body\">\n          {getExpressPlanConfigForApiPlan(config, plan).recurrence}\n        </Text>\n        <Text css={styles.planBilling} bold>\n          {getExpressPlanConfigForApiPlan(config, plan).billing}\n        </Text>\n        <Text css={styles.planSavings}>\n          {!plan.promo && getExpressPlanConfigForApiPlan(config, plan).savings && (\n            // eslint-disable-next-line react/jsx-no-literals\n            <span>({getExpressPlanConfigForApiPlan(config, plan).savings})</span>\n          )}\n        </Text>\n      </button>\n    )\n  }\n\n  // Decide which plan should initially be selected based on the current subscription\n  if (selectedPlanId === 0) {\n    const planIds = plans.map(plan => plan.id)\n    if (defaultSelectedPlanId && planIds.includes(defaultSelectedPlanId)) {\n      setSelectedPlanId(defaultSelectedPlanId)\n    } else if (\n      currentSubscription &&\n      planIds.includes(currentSubscription.next_subscription_plan.id)\n    ) {\n      setSelectedPlanId(currentSubscription.next_subscription_plan.id)\n    } else {\n      setSelectedPlanId(planIds[0])\n    }\n  }\n\n  // render and return the contaner for all of the plans\n  return <div css={styles.expressPlanContainer}>{plans.map(plan => renderExpressPlan(plan))}</div>\n}\n\nexport default ExpressPlans\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :\n  (global = global || self, factory(global.ReactStripe = {}, global.React));\n}(this, (function (exports, React) { 'use strict';\n\n  React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n  function emptyFunction() {}\n\n  function emptyFunctionWithReset() {}\n\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n\n  var factoryWithThrowingShims = function () {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret_1) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    }\n    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      elementType: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim,\n      checkPropTypes: emptyFunctionWithReset,\n      resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  {\n    // By explicitly using `prop-types` you are opting into new production behavior.\n    // http://fb.me/prop-types-in-prod\n    module.exports = factoryWithThrowingShims();\n  }\n  });\n\n  var isUnknownObject = function isUnknownObject(raw) {\n    return raw !== null && _typeof(raw) === 'object';\n  };\n  var isPromise = function isPromise(raw) {\n    return isUnknownObject(raw) && typeof raw.then === 'function';\n  }; // We are using types to enforce the `stripe` prop in this lib,\n  // but in an untyped integration `stripe` could be anything, so we need\n  // to do some sanity validation to prevent type errors.\n\n  var isStripe = function isStripe(raw) {\n    return isUnknownObject(raw) && typeof raw.elements === 'function' && typeof raw.createToken === 'function' && typeof raw.createPaymentMethod === 'function' && typeof raw.confirmCardPayment === 'function';\n  };\n\n  var PLAIN_OBJECT_STR = '[object Object]';\n  var isEqual = function isEqual(left, right) {\n    if (!isUnknownObject(left) || !isUnknownObject(right)) {\n      return left === right;\n    }\n\n    var leftArray = Array.isArray(left);\n    var rightArray = Array.isArray(right);\n    if (leftArray !== rightArray) return false;\n    var leftPlainObject = Object.prototype.toString.call(left) === PLAIN_OBJECT_STR;\n    var rightPlainObject = Object.prototype.toString.call(right) === PLAIN_OBJECT_STR;\n    if (leftPlainObject !== rightPlainObject) return false;\n    if (!leftPlainObject && !leftArray) return false;\n    var leftKeys = Object.keys(left);\n    var rightKeys = Object.keys(right);\n    if (leftKeys.length !== rightKeys.length) return false;\n    var keySet = {};\n\n    for (var i = 0; i < leftKeys.length; i += 1) {\n      keySet[leftKeys[i]] = true;\n    }\n\n    for (var _i = 0; _i < rightKeys.length; _i += 1) {\n      keySet[rightKeys[_i]] = true;\n    }\n\n    var allKeys = Object.keys(keySet);\n\n    if (allKeys.length !== leftKeys.length) {\n      return false;\n    }\n\n    var l = left;\n    var r = right;\n\n    var pred = function pred(key) {\n      return isEqual(l[key], r[key]);\n    };\n\n    return allKeys.every(pred);\n  };\n\n  var usePrevious = function usePrevious(value) {\n    var ref = React.useRef(value);\n    React.useEffect(function () {\n      ref.current = value;\n    }, [value]);\n    return ref.current;\n  };\n\n  var INVALID_STRIPE_ERROR = 'Invalid prop `stripe` supplied to `Elements`. We recommend using the `loadStripe` utility from `@stripe/stripe-js`. See https://stripe.com/docs/stripe-js/react#elements-props-stripe for details.'; // We are using types to enforce the `stripe` prop in this lib, but in a real\n  // integration `stripe` could be anything, so we need to do some sanity\n  // validation to prevent type errors.\n\n  var validateStripe = function validateStripe(maybeStripe) {\n    if (maybeStripe === null || isStripe(maybeStripe)) {\n      return maybeStripe;\n    }\n\n    throw new Error(INVALID_STRIPE_ERROR);\n  };\n\n  var parseStripeProp = function parseStripeProp(raw) {\n    if (isPromise(raw)) {\n      return {\n        tag: 'async',\n        stripePromise: Promise.resolve(raw).then(validateStripe)\n      };\n    }\n\n    var stripe = validateStripe(raw);\n\n    if (stripe === null) {\n      return {\n        tag: 'empty'\n      };\n    }\n\n    return {\n      tag: 'sync',\n      stripe: stripe\n    };\n  };\n\n  var ElementsContext = /*#__PURE__*/React.createContext(null);\n  ElementsContext.displayName = 'ElementsContext';\n  var parseElementsContext = function parseElementsContext(ctx, useCase) {\n    if (!ctx) {\n      throw new Error(\"Could not find Elements context; You need to wrap the part of your app that \".concat(useCase, \" in an <Elements> provider.\"));\n    }\n\n    return ctx;\n  };\n  /**\n   * The `Elements` provider allows you to use [Element components](https://stripe.com/docs/stripe-js/react#element-components) and access the [Stripe object](https://stripe.com/docs/js/initializing) in any nested component.\n   * Render an `Elements` provider at the root of your React app so that it is available everywhere you need it.\n   *\n   * To use the `Elements` provider, call `loadStripe` from `@stripe/stripe-js` with your publishable key.\n   * The `loadStripe` function will asynchronously load the Stripe.js script and initialize a `Stripe` object.\n   * Pass the returned `Promise` to `Elements`.\n   *\n   * @docs https://stripe.com/docs/stripe-js/react#elements-provider\n   */\n\n  var Elements = function Elements(_ref) {\n    var rawStripeProp = _ref.stripe,\n        options = _ref.options,\n        children = _ref.children;\n\n    var _final = React.useRef(false);\n\n    var isMounted = React.useRef(true);\n    var parsed = React.useMemo(function () {\n      return parseStripeProp(rawStripeProp);\n    }, [rawStripeProp]);\n\n    var _React$useState = React.useState(function () {\n      return {\n        stripe: null,\n        elements: null\n      };\n    }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        ctx = _React$useState2[0],\n        setContext = _React$useState2[1];\n\n    var prevStripe = usePrevious(rawStripeProp);\n    var prevOptions = usePrevious(options);\n\n    if (prevStripe !== null) {\n      if (prevStripe !== rawStripeProp) {\n        console.warn('Unsupported prop change on Elements: You cannot change the `stripe` prop after setting it.');\n      }\n\n      if (!isEqual(options, prevOptions)) {\n        console.warn('Unsupported prop change on Elements: You cannot change the `options` prop after setting the `stripe` prop.');\n      }\n    }\n\n    if (!_final.current) {\n      if (parsed.tag === 'sync') {\n        _final.current = true;\n        setContext({\n          stripe: parsed.stripe,\n          elements: parsed.stripe.elements(options)\n        });\n      }\n\n      if (parsed.tag === 'async') {\n        _final.current = true;\n        parsed.stripePromise.then(function (stripe) {\n          if (stripe && isMounted.current) {\n            // Only update Elements context if the component is still mounted\n            // and stripe is not null. We allow stripe to be null to make\n            // handling SSR easier.\n            setContext({\n              stripe: stripe,\n              elements: stripe.elements(options)\n            });\n          }\n        });\n      }\n    }\n\n    React.useEffect(function () {\n      return function () {\n        isMounted.current = false;\n      };\n    }, []);\n    React.useEffect(function () {\n      var anyStripe = ctx.stripe;\n\n      if (!anyStripe || !anyStripe._registerWrapper || !anyStripe.registerAppInfo) {\n        return;\n      }\n\n      anyStripe._registerWrapper({\n        name: 'react-stripe-js',\n        version: \"1.4.1\"\n      });\n\n      anyStripe.registerAppInfo({\n        name: 'react-stripe-js',\n        version: \"1.4.1\",\n        url: 'https://stripe.com/docs/stripe-js/react'\n      });\n    }, [ctx.stripe]);\n    return /*#__PURE__*/React.createElement(ElementsContext.Provider, {\n      value: ctx\n    }, children);\n  };\n  Elements.propTypes = {\n    stripe: propTypes.any,\n    options: propTypes.object\n  };\n  var useElementsContextWithUseCase = function useElementsContextWithUseCase(useCaseMessage) {\n    var ctx = React.useContext(ElementsContext);\n    return parseElementsContext(ctx, useCaseMessage);\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#useelements-hook\n   */\n\n  var useElements = function useElements() {\n    var _useElementsContextWi = useElementsContextWithUseCase('calls useElements()'),\n        elements = _useElementsContextWi.elements;\n\n    return elements;\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#usestripe-hook\n   */\n\n  var useStripe = function useStripe() {\n    var _useElementsContextWi2 = useElementsContextWithUseCase('calls useStripe()'),\n        stripe = _useElementsContextWi2.stripe;\n\n    return stripe;\n  };\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#elements-consumer\n   */\n\n  var ElementsConsumer = function ElementsConsumer(_ref2) {\n    var children = _ref2.children;\n    var ctx = useElementsContextWithUseCase('mounts <ElementsConsumer>'); // Assert to satisfy the busted React.FC return type (it should be ReactNode)\n\n    return children(ctx);\n  };\n  ElementsConsumer.propTypes = {\n    children: propTypes.func.isRequired\n  };\n\n  var useCallbackReference = function useCallbackReference(cb) {\n    var ref = React.useRef(cb);\n    React.useEffect(function () {\n      ref.current = cb;\n    }, [cb]);\n    return function () {\n      if (ref.current) {\n        ref.current.apply(ref, arguments);\n      }\n    };\n  };\n\n  var extractUpdateableOptions = function extractUpdateableOptions(options) {\n    if (!isUnknownObject(options)) {\n      return {};\n    }\n\n    var _ = options.paymentRequest,\n        rest = _objectWithoutProperties(options, [\"paymentRequest\"]);\n\n    return rest;\n  };\n\n  var noop = function noop() {};\n\n  var capitalized = function capitalized(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  var createElementComponent = function createElementComponent(type, isServer) {\n    var displayName = \"\".concat(capitalized(type), \"Element\");\n\n    var ClientElement = function ClientElement(_ref) {\n      var id = _ref.id,\n          className = _ref.className,\n          _ref$options = _ref.options,\n          options = _ref$options === void 0 ? {} : _ref$options,\n          _ref$onBlur = _ref.onBlur,\n          onBlur = _ref$onBlur === void 0 ? noop : _ref$onBlur,\n          _ref$onFocus = _ref.onFocus,\n          onFocus = _ref$onFocus === void 0 ? noop : _ref$onFocus,\n          _ref$onReady = _ref.onReady,\n          onReady = _ref$onReady === void 0 ? noop : _ref$onReady,\n          _ref$onChange = _ref.onChange,\n          onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n          _ref$onEscape = _ref.onEscape,\n          onEscape = _ref$onEscape === void 0 ? noop : _ref$onEscape,\n          _ref$onClick = _ref.onClick,\n          onClick = _ref$onClick === void 0 ? noop : _ref$onClick;\n\n      var _useElementsContextWi = useElementsContextWithUseCase(\"mounts <\".concat(displayName, \">\")),\n          elements = _useElementsContextWi.elements;\n\n      var elementRef = React.useRef(null);\n      var domNode = React.useRef(null);\n      var callOnReady = useCallbackReference(onReady);\n      var callOnBlur = useCallbackReference(onBlur);\n      var callOnFocus = useCallbackReference(onFocus);\n      var callOnClick = useCallbackReference(onClick);\n      var callOnChange = useCallbackReference(onChange);\n      var callOnEscape = useCallbackReference(onEscape);\n      React.useLayoutEffect(function () {\n        if (elementRef.current == null && elements && domNode.current != null) {\n          var element = elements.create(type, options);\n          elementRef.current = element;\n          element.mount(domNode.current);\n          element.on('ready', function () {\n            return callOnReady(element);\n          });\n          element.on('change', callOnChange);\n          element.on('blur', callOnBlur);\n          element.on('focus', callOnFocus);\n          element.on('escape', callOnEscape); // Users can pass an an onClick prop on any Element component\n          // just as they could listen for the `click` event on any Element,\n          // but only the PaymentRequestButton will actually trigger the event.\n\n          element.on('click', callOnClick);\n        }\n      });\n      var prevOptions = React.useRef(options);\n      React.useEffect(function () {\n        if (prevOptions.current && prevOptions.current.paymentRequest !== options.paymentRequest) {\n          console.warn('Unsupported prop change: options.paymentRequest is not a customizable property.');\n        }\n\n        var updateableOptions = extractUpdateableOptions(options);\n\n        if (Object.keys(updateableOptions).length !== 0 && !isEqual(updateableOptions, extractUpdateableOptions(prevOptions.current))) {\n          if (elementRef.current) {\n            elementRef.current.update(updateableOptions);\n            prevOptions.current = options;\n          }\n        }\n      }, [options]);\n      React.useLayoutEffect(function () {\n        return function () {\n          if (elementRef.current) {\n            elementRef.current.destroy();\n          }\n        };\n      }, []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: id,\n        className: className,\n        ref: domNode\n      });\n    }; // Only render the Element wrapper in a server environment.\n\n\n    var ServerElement = function ServerElement(props) {\n      // Validate that we are in the right context by calling useElementsContextWithUseCase.\n      useElementsContextWithUseCase(\"mounts <\".concat(displayName, \">\"));\n      var id = props.id,\n          className = props.className;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: id,\n        className: className\n      });\n    };\n\n    var Element = isServer ? ServerElement : ClientElement;\n    Element.propTypes = {\n      id: propTypes.string,\n      className: propTypes.string,\n      onChange: propTypes.func,\n      onBlur: propTypes.func,\n      onFocus: propTypes.func,\n      onReady: propTypes.func,\n      onClick: propTypes.func,\n      options: propTypes.object\n    };\n    Element.displayName = displayName;\n    Element.__elementType = type;\n    return Element;\n  };\n\n  var isServer = typeof window === 'undefined';\n  /**\n   * Requires beta access:\n   * Contact [Stripe support](https://support.stripe.com/) for more information.\n   *\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var AuBankAccountElement = createElementComponent('auBankAccount', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardElement = createElementComponent('card', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardNumberElement = createElementComponent('cardNumber', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardExpiryElement = createElementComponent('cardExpiry', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var CardCvcElement = createElementComponent('cardCvc', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var FpxBankElement = createElementComponent('fpxBank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var IbanElement = createElementComponent('iban', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var IdealBankElement = createElementComponent('idealBank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var P24BankElement = createElementComponent('p24Bank', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var EpsBankElement = createElementComponent('epsBank', isServer);\n  var PaymentElement = createElementComponent('payment', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var PaymentRequestButtonElement = createElementComponent('paymentRequestButton', isServer);\n  /**\n   * @docs https://stripe.com/docs/stripe-js/react#element-components\n   */\n\n  var AfterpayClearpayMessageElement = createElementComponent('afterpayClearpayMessage', isServer);\n\n  exports.AfterpayClearpayMessageElement = AfterpayClearpayMessageElement;\n  exports.AuBankAccountElement = AuBankAccountElement;\n  exports.CardCvcElement = CardCvcElement;\n  exports.CardElement = CardElement;\n  exports.CardExpiryElement = CardExpiryElement;\n  exports.CardNumberElement = CardNumberElement;\n  exports.Elements = Elements;\n  exports.ElementsConsumer = ElementsConsumer;\n  exports.EpsBankElement = EpsBankElement;\n  exports.FpxBankElement = FpxBankElement;\n  exports.IbanElement = IbanElement;\n  exports.IdealBankElement = IdealBankElement;\n  exports.P24BankElement = P24BankElement;\n  exports.PaymentElement = PaymentElement;\n  exports.PaymentRequestButtonElement = PaymentRequestButtonElement;\n  exports.useElements = useElements;\n  exports.useStripe = useStripe;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"sourceRoot":""}