{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/shared/util/sharedLogin.js"],"names":["angular","module","component","bindings","errorMessage","displayResetPasswordLink","passwordResetFn","closeModal","context","controller","$scope","$rootScope","$location","$sce","$state","$stateParams","auth","config","lang","recaptchaService","redirectService","socialSignOnService","userAnalytics","this","singleSignOnEnabled","singleSignOn","enabled","socialSignOnEnabled","socialSignOn","ssoActionLabel","actionLabel","loginCredentials","username","password","recaptcha","isEnabled","token","action","ACTIONS","LOGIN","onSuccess","recaptchaToken","$apply","onExpired","relayState","protocol","host","path","redirectTo","idpSsoEndpoint","relayPartnerId","sloEndpoint","trustAsResourceUrl","loginSubmit","isLoggingIn","login","siteKey","googleRecaptcha","then","LOGIN_CONTEXTS","LOYALTY_ONBOARDING","logUserLoginAttempt","success","loyalty_onboarding","improved_registration","enableImprovedRegistration","isAppLoading","current","name","goToRedirectUrl","href","redirect","state","loadRedirectUrl","catch","message","document","getElementById","focus","resetLastCheckbox","finally","values","recaptchaError","socialSignOnProviders","providers","socialSignOnGetURL","provider","handleSocialSignOn","logUserLoyaltyOnboardingSocialSignOn","provider_id","id","response","data","template","submitLoginForm","socialDisabledAction","require","form","showSocialDisabledText","showDisabledText","showSocialDisabledAction","showDisabledAction","socialDisabledText","disabledText","socialDisabledActionText","disabledActionText"],"mappings":"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","file":"sharedLogin.js","sourcesContent":["import angular from 'angular'\nimport { LOGIN_CONTEXTS } from '@app/angular/constants/loginContexts'\nimport { ACTIONS } from '@app/angular/constants/recaptcha'\n\nexport default angular\n  .module('sharedLoginComponentModule', [])\n  .component('sharedLogin', {\n    bindings: {\n      errorMessage: '=?',\n      displayResetPasswordLink: '<',\n      passwordResetFn: '&',\n      closeModal: '&',\n      context: '<',\n    },\n    controller(\n      $scope,\n      $rootScope,\n      $location,\n      $sce,\n      $state,\n      $stateParams,\n      auth,\n      config,\n      lang,\n      recaptchaService,\n      redirectService,\n      socialSignOnService,\n      userAnalytics\n    ) {\n      this.lang = lang\n      this.singleSignOnEnabled = config.singleSignOn?.enabled\n      this.socialSignOnEnabled = config.socialSignOn?.enabled\n      this.ssoActionLabel = config.socialSignOn?.actionLabel\n\n      this.loginCredentials = {\n        username: null,\n        password: null,\n      }\n\n      this.recaptcha = {\n        enabled: recaptchaService.isEnabled(),\n        token: null,\n        action: ACTIONS.LOGIN,\n        onSuccess: recaptchaToken => {\n          $scope.$apply(() => {\n            this.recaptcha.token = recaptchaToken\n          })\n        },\n        onExpired: () => {\n          $scope.$apply(() => {\n            this.recaptcha.token = null\n          })\n        },\n      }\n\n      // Single Sign On\n      if (this.singleSignOnEnabled) {\n        const relayState = `${$location.protocol()}://${$location.host()}${$location.path()}` // current page url without params\n        this.redirectTo = `${config.singleSignOn.idpSsoEndpoint}?rp=${config.singleSignOn.relayPartnerId}&relayState=${relayState}`\n        this.sloEndpoint = $sce.trustAsResourceUrl(config.singleSignOn.sloEndpoint)\n        this.recaptcha.enabled = false\n      } else {\n        this.loginSubmit = () => {\n          if (!this.loginCredentials.username) {\n            document.getElementById('login-email').focus()\n            return\n          }\n          if (!this.loginCredentials.password) {\n            document.getElementById('login-password').focus()\n            return\n          }\n          if (this.recaptcha.enabled && !this.recaptcha.token) {\n            this.errorMessage = this.lang.values.recaptchaError\n            return\n          }\n\n          delete this.errorMessage\n          this.isLoggingIn = true\n\n          auth\n            .login(\n              this.loginCredentials.username,\n              this.loginCredentials.password,\n              null,\n              this.context,\n              this.recaptcha.enabled\n                ? { token: this.recaptcha.token, siteKey: config.googleRecaptcha?.siteKey }\n                : null\n            )\n            .then(() => {\n              if (this.context === LOGIN_CONTEXTS.LOYALTY_ONBOARDING) {\n                userAnalytics.logUserLoginAttempt({\n                  success: true,\n                  loyalty_onboarding: true,\n                  improved_registration: config.enableImprovedRegistration,\n                })\n              } else {\n                userAnalytics.logUserLoginAttempt({\n                  success: true,\n                  improved_registration: config.enableImprovedRegistration,\n                })\n              }\n              this.closeModal() // close the uib-modal\n              $rootScope.isAppLoading = false\n\n              // If the sign-in inputs are outside of the modal\n              // Redirect to the home page on successful login attempt\n\n              if ($state.current.name === 'main.socialSignOn') {\n                redirectService.goToRedirectUrl(\n                  { href: $stateParams && $stateParams.redirect },\n                  { state: 'main.home' }\n                )\n              } else if ($state.current.name === 'main.home') {\n                redirectService.loadRedirectUrl()\n              }\n            })\n            .catch(message => {\n              if (this.context === LOGIN_CONTEXTS.LOYALTY_ONBOARDING) {\n                userAnalytics.logUserLoginAttempt({\n                  success: false,\n                  loyalty_onboarding: true,\n                  improved_registration: config.enableImprovedRegistration,\n                })\n              } else {\n                userAnalytics.logUserLoginAttempt({\n                  success: false,\n                  improved_registration: config.enableImprovedRegistration,\n                })\n              }\n              this.errorMessage = message\n              document.getElementById('login-email').focus()\n              this.recaptcha.token = null\n              recaptchaService.resetLastCheckbox()\n            })\n            .finally(() => {\n              this.isLoggingIn = false\n            })\n        }\n      }\n\n      // Social Sign On\n      if (this.socialSignOnEnabled) {\n        this.socialSignOnProviders = config.socialSignOn.providers\n\n        this.socialSignOnGetURL = provider => {\n          this.errorMessage = ''\n          socialSignOnService\n            .handleSocialSignOn(provider)\n            .then(() => {\n              if (this.context === LOGIN_CONTEXTS.LOYALTY_ONBOARDING) {\n                userAnalytics.logUserLoyaltyOnboardingSocialSignOn({\n                  success: true,\n                  provider_id: provider.id,\n                })\n              }\n            })\n            .catch(response => {\n              if (this.context === LOGIN_CONTEXTS.LOYALTY_ONBOARDING) {\n                userAnalytics.logUserLoyaltyOnboardingSocialSignOn({\n                  success: false,\n                  provider_id: provider.id,\n                })\n              }\n              this.errorMessage = (response.data && response.data.message) || response\n              document.getElementById('login-email').focus()\n            })\n        }\n      }\n    },\n    template: `\n      <div class=\"login\" ng-class=\"{ 'social-enabled': $ctrl.socialSignOnEnabled }\" data-test=\"shared-login\">\n\n        <form ng-if=\":: $ctrl.singleSignOnEnabled\" action=\"{{$ctrl.sloEndpoint}}\" method=\"post\" id=\"login-form\" focus-first-input>\n          <shared-login-form-contents\n            error-message=\"$ctrl.errorMessage\"\n            is-logging-in=\"$ctrl.isLoggingIn\"\n            login-credentials=\"$ctrl.loginCredentials\"\n            submit-login-form=\"$ctrl.loginSubmit\"\n            recaptcha=\"$ctrl.recaptcha\"\n            social-disabled-action=\"$ctrl.passwordResetFn()\"\n          >\n          </shared-login-form-contents>\n\n          <input type=\"hidden\" name=\"redirectTo\" value=\"{{$ctrl.redirectTo}}\">\n        </form>\n\n        <form ng-if=\":: !$ctrl.singleSignOnEnabled\" ng-submit=\"$ctrl.loginSubmit(); analytics.logEvent('login', 'submit')\" id=\"login-form\" ng-class=\"::{'full-width': !$ctrl.socialSignOnEnabled}\" focus-first-input>\n          <shared-login-form-contents\n            error-message=\"$ctrl.errorMessage\"\n            is-logging-in=\"$ctrl.isLoggingIn\"\n            login-credentials=\"$ctrl.loginCredentials\"\n            submit-login-form=\"$ctrl.loginSubmit\"\n            recaptcha=\"$ctrl.recaptcha\"\n            social-disabled-action=\"$ctrl.passwordResetFn()\"\n          >\n          </shared-login-form-contents>\n        </form>\n\n        <forgot-password-button ng-if=\":: $ctrl.displayResetPasswordLink\" set-view-fn=\"$ctrl.passwordResetFn()\"></forgot-password-button>\n\n        <div class=\"login-divider\" ng-if=\":: $ctrl.socialSignOnEnabled\">\n          <span class=\"login-divider-text\">{{:: $ctrl.lang.values.or}}</span>\n        </div>\n\n        <div class=\"social-login\" ng-if=\":: $ctrl.socialSignOnEnabled\">\n          <div class=\"form-row\" ng-repeat=\"provider in ::$ctrl.socialSignOnProviders track by provider.id\">\n            <button\n              type=\"button\"\n              id=\"login-social-provider-{{:: provider.id}}\"\n              class=\"{{:: provider.id}} button\"\n              ng-click=\"$ctrl.socialSignOnGetURL(provider.id)\">\n                <span ng-if=\"::provider.fullLabel\">{{::provider.fullLabel}}</span>\n                <span ng-if=\"::!provider.fullLabel\">{{::$ctrl.ssoActionLabel}} {{::provider.label}}</span>\n            </button>\n          </div>\n        </div>\n\n      </div>\n    `,\n  })\n\n  .component('sharedLoginFormContents', {\n    bindings: {\n      errorMessage: '<',\n      isLoggingIn: '<',\n      loginCredentials: '=',\n      submitLoginForm: '&',\n      recaptcha: '<',\n      socialDisabledAction: '&',\n    },\n    require: {\n      form: '^',\n    },\n    controller(config, lang) {\n      this.lang = lang\n      this.showSocialDisabledText = config.socialSignOn?.showDisabledText\n      this.showSocialDisabledAction = config.socialSignOn?.showDisabledAction\n      this.socialDisabledText = config.socialSignOn?.disabledText\n      this.socialDisabledActionText = config.socialSignOn?.disabledActionText\n    },\n    template: `\n      <div class=\"shared-login-form-contents\">\n        <div class=\"regular-login\">\n          <p class=\"required-fields-message\">{{::$ctrl.lang.values.requiredFieldsMessage}}</p>\n          <div class=\"form-row\">\n            <label for=\"login-email\">{{::$ctrl.lang.values.email}}</label>\n            <div class=\"icon-left\">\n              <span class=\"icon-left icon-email\" aria-hidden=\"true\"></span>\n              <input name=\"username\" ng-model=\"$ctrl.loginCredentials.username\" type=\"email\" class=\"input\" auto-focus=\"true\" required placeholder=\"Email\" id=\"login-email\" aria-label=\"{{::$ctrl.lang.aria.email}}\" aria-describedby=\"login-email-error\">\n              <span class=\"validation-icon\" aria-hidden=\"true\"></span>\n              <span id=\"login-email-error\" class=\"required-field\" ng-if=\"$ctrl.form.username.$touched && $ctrl.form.username.$invalid\">{{::$ctrl.lang.values.requiredForm.email}}</span>\n            </div>\n          </div>\n          <div class=\"form-row regular-login-password-row\">\n            <label for=\"login-password\">{{::$ctrl.lang.values.password}}</label>\n            <div class=\"icon-left\">\n              <span class=\"icon-left icon-key\" aria-hidden=\"true\"></span>\n              <input name=\"password\" ng-model=\"$ctrl.loginCredentials.password\" type=\"password\" class=\"input\" required placeholder=\"Password\" id=\"login-password\" aria-label=\"{{::$ctrl.lang.aria.password}}\" aria-describedby=\"login-password-error\">\n              <span class=\"validation-icon\" aria-hidden=\"true\"></span>\n              <span id=\"login-password-error\" class=\"required-field\" ng-if=\"$ctrl.form.password.$touched && $ctrl.form.password.$invalid\">{{::$ctrl.lang.values.requiredForm.password}}</span>\n            </div>\n          </div>\n          <div ng-if=\"::$ctrl.recaptcha.enabled\" class=\"form-row recaptcha-row\">\n            <recaptcha-checkbox\n              action=\"$ctrl.recaptcha.action\"\n              on-success=\"$ctrl.recaptcha.onSuccess\"\n              on-expired=\"$ctrl.recaptcha.onExpired\"\n            />\n          </div>\n          <div class=\"form-row\">\n            <button type=\"submit\" form=\"login-form\" class=\"button mobile-bottom\" ng-disabled=\"$ctrl.isLoggingIn\" ng-class=\"{loading: $ctrl.isLoggingIn}\" id=\"login-submit\">{{::$ctrl.lang.values.signIn}}</button>\n          </div>\n          <div id=\"social-disabled-message\" class=\"form-row social-disabled-message icon-info-i\" ng-if=\"$ctrl.showSocialDisabledText\">{{::$ctrl.socialDisabledText}} <button id=\"social-disabled-action\" type=\"button\" ng-if=\"$ctrl.showSocialDisabledAction\" ng-click=\"$ctrl.socialDisabledAction()\">{{::$ctrl.socialDisabledActionText}}</button></div>\n        </div>\n      </div>\n\n      <div ng-if=\"$ctrl.errorMessage\" class=\"message error reveal form-row\">\n        <span class=\"icon-error\" aria-hidden=\"true\"></span>\n        {{$ctrl.errorMessage}}\n      </div>\n    `,\n  })\n"],"sourceRoot":""}