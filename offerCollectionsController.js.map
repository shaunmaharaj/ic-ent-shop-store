{"version":3,"sources":["webpack://UnataWidgets/./app/angular/components/offers/offerCollectionsController.js"],"names":["angular","module","controller","$scope","$state","$stateParams","Restangular","config","customData","offer","utilService","title","route","offer_progress","reward","collection_title","condition","page","current","loadCollection","params","copy","offset","productsPerPage","limit","one","id","all","getList","then","collection","$watch","newPage","oldPage","scrollToTop","go","reload","notify","run","$templateCache","put","require"],"mappings":"oIAAA,gDAEeA,cACZC,OAAO,mCAAoC,IAC3CC,WACC,6BAHW,4FAIX,SAAUC,EAAQC,EAAQC,EAAcC,EAAaC,EAAQC,EAAYC,EAAOC,GAC9EP,EAAOM,MAAQA,EACfN,EAAOQ,MAEe,mBAApBH,EAAWI,MACPH,EAAMI,eAAeC,OAAOC,iBAC5BN,EAAMI,eAAeG,UAAUD,iBACrCZ,EAAOc,KAAO,CAAEC,QAASb,EAAaY,MAAQ,GAE9Cd,EAAOgB,eAAiB,WACtB,MAAMC,EAASpB,IAAQqB,KAAKhB,GAC5Be,EAAOE,OAASnB,EAAOc,KAAKC,SAAWf,EAAOc,KAAKC,QAAU,GAAKX,EAAOgB,gBAAkB,EAC3FH,EAAOI,MAAQjB,EAAOgB,gBACtBjB,EAAYmB,IAAI,SAAUhB,EAAMiB,IAC7BC,IAAInB,EAAWI,OACfgB,QAAQR,GACRS,KAAKC,IACJ3B,EAAO2B,WAAaA,KAG1B3B,EAAOgB,iBAEPhB,EAAO4B,OAAO,eAAgB,CAACC,EAASC,KAClCA,GAAWD,IAAYC,IACzBvB,EAAYwB,cACZ9B,EAAO+B,GAAG,IAAK,CAAElB,KAAMe,GAAW,CAAEI,QAAQ,EAAOC,QAAQ,WACpDlC,EAAO2B,WACd3B,EAAOgB,uBAKdmB,IApCY,kBAoCRC,IACHA,EAAeC,IACb,+CACAC,EAAQ,yBAEVF,EAAeC,IACb,8CACAC,EAAQ","file":"offerCollectionsController.js","sourcesContent":["import angular from 'angular'\n\nexport default angular\n  .module('OfferCollectionsControllerModule', [])\n  .controller(\n    'OfferCollectionsController',\n    function ($scope, $state, $stateParams, Restangular, config, customData, offer, utilService) {\n      $scope.offer = offer\n      $scope.title =\n        // eslint-disable-next-line eqeqeq\n        customData.route == 'reward_products'\n          ? offer.offer_progress.reward.collection_title\n          : offer.offer_progress.condition.collection_title\n      $scope.page = { current: $stateParams.page || 1 }\n\n      $scope.loadCollection = function () {\n        const params = angular.copy($stateParams)\n        params.offset = $scope.page.current ? ($scope.page.current - 1) * config.productsPerPage : 0\n        params.limit = config.productsPerPage\n        Restangular.one('offers', offer.id)\n          .all(customData.route)\n          .getList(params)\n          .then(collection => {\n            $scope.collection = collection\n          })\n      }\n      $scope.loadCollection()\n\n      $scope.$watch('page.current', (newPage, oldPage) => {\n        if (oldPage && newPage !== oldPage) {\n          utilService.scrollToTop()\n          $state.go('.', { page: newPage }, { reload: false, notify: false })\n          delete $scope.collection\n          $scope.loadCollection()\n        }\n      })\n    }\n  )\n  .run($templateCache => {\n    $templateCache.put(\n      'pagination-modified-uibootstrap-desktop.html',\n      require('../shared/pagination/pagination-modified-uibootstrap-desktop.html')\n    )\n    $templateCache.put(\n      'pagination-modified-uibootstrap-mobile.html',\n      require('../shared/pagination/pagination-modified-uibootstrap-mobile.html')\n    )\n  })\n"],"sourceRoot":""}